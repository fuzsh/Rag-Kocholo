{
    "id": "correct_subsidiary_00031_2",
    "rank": 60,
    "data": {
        "url": "https://patents.google.com/patent/US10680887B2/en",
        "read_more_link": "",
        "language": "en",
        "title": "US10680887B2 - Remote device status audit and recovery - Google Patents",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://patentimages.storage.googleapis.com/7a/0b/f5/bd7df32501ff90/US10680887-20200609-D00000.png",
            "https://patentimages.storage.googleapis.com/09/14/e3/96785d60b0432e/US10680887-20200609-D00001.png",
            "https://patentimages.storage.googleapis.com/17/8c/e2/77f18be693e909/US10680887-20200609-D00002.png",
            "https://patentimages.storage.googleapis.com/cb/f8/9d/925d98d3d39704/US10680887-20200609-D00003.png",
            "https://patentimages.storage.googleapis.com/ff/a1/0d/455e15558e6c83/US10680887-20200609-D00004.png",
            "https://patentimages.storage.googleapis.com/88/bf/e9/897a946b8e35ba/US10680887-20200609-D00005.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2017-07-21T00:00:00",
        "summary": "",
        "meta_description": "Systems, methods, and computer-readable media are disclosed for remotely managing and correcting implementation of configuration settings at network devices operating in the network. In one aspect of the present disclosure, a method includes transmitting, by a controller, a request to a network device of the network for a status of operation of the network device with respect at least one configuration setting available at the network device; determining, by the controller, whether the status matches an operation status provided by the at least one configuration setting; and performing, by the controller, a recovery process to adjust the implementation of the at least one configuration setting when the determining determines that the status does not match the operation status.",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "https://patents.google.com/patent/US10680887B2/en",
        "text": "The present technology pertains to remote management of configuration settings on network devices.\n\nBACKGROUND\n\nMany network components/devices such as switches and access points that enable various types of user devices to connect to a network can be remotely controlled and configured. These devices may operate in any number of states and can have various configurations implemented thereby. A corresponding configuration is remotely generated and sent to one or more of these devices. For example, an access point can be remotely reconfigured to disable a protected/secure service set identifier (SSID). However, once the configuration is transmitted to the access point, instead of disabling the SSID, the access point, through implementation of its local computer-readable instructions, may fail to disable the SSID and instead can turn the access point into an insecure, open SSID to which unauthorized network traffic can be bridged, providing access to the underlying secure network by unauthorized devices. Currently, backend components that generate and send configuration data to devices such as the access point in the example above, can check to see if the currently installed configuration file on the access point is up-to-date or not. However, this check is insufficient to validate whether the actual setting (implemented by execution of local computer-readable instructions on the access point) are being implemented at the device correctly or not.\n\nBRIEF DESCRIPTION OF THE DRAWINGS\n\nIn order to describe the manner in which the above-recited and other advantages and features of the disclosure can be obtained, a more particular description of the principles briefly described above will be rendered by reference to specific embodiments thereof which are illustrated in the appended drawings. Understanding that these drawings depict only exemplary embodiments of the disclosure and are not therefore to be considered to be limiting of its scope, the principles herein are described and explained with additional specificity and detail through the use of the accompanying drawings in which:\n\nFIG. 1A illustrates an example wireless network environment, according to one aspect of the present disclosure;\n\nFIG. 1B illustrates a diagram of example networks deployed on the network environment of FIG. 1A, according to one aspect of the present disclosure;\n\nFIG. 2 illustrates an example network device suitable for performing switching, routing, load balancing, and other networking operations, according to an aspect of the present disclosure;\n\nFIG. 3 illustrates a computing system architecture, according to an aspect of the present disclosure; and\n\nFIG. 4 illustrates a process for remote device status audit and recovery, according to one aspect of the present disclosure.\n\nDESCRIPTION OF EXAMPLE EMBODIMENTS\n\nVarious examples of the disclosure are discussed in detail below. While specific implementations are discussed, it should be understood that this is done for illustration purposes only. A person skilled in the relevant art will recognize that other components and configurations may be used without parting from the spirit and scope of the disclosure.\n\nReferences to one or an example embodiment in the present disclosure can be, but not necessarily are, references to the same example embodiment; and, such references mean at least one of the example embodiments.\n\nReference to âone example embodimentâ or âan example embodimentâ means that a particular feature, structure, or characteristic described in connection with the example embodiment is included in at least one example of the disclosure. The appearances of the phrase âin one example embodimentâ in various places in the specification are not necessarily all referring to the same example embodiment, nor are separate or alternative example embodiments mutually exclusive of other example embodiments. Moreover, various features are described which may be exhibited by some example embodiments and not by others. Similarly, various features are described which may be features for some example embodiments but not other example embodiments.\n\nThe terms used in this specification generally have their ordinary meanings in the art, within the context of the disclosure, and in the specific context where each term is used. Alternative language and synonyms may be used for any one or more of the terms discussed herein, and no special significance should be placed upon whether or not a term is elaborated or discussed herein. Synonyms for certain terms are provided. A recital of one or more synonyms does not exclude the use of other synonyms. The use of examples anywhere in this specification including examples of any terms discussed herein is illustrative only, and is not intended to further limit the scope and meaning of the disclosure or of any exemplified term. Likewise, the disclosure is not limited to various examples given in this specification.\n\nWithout intent to limit the scope of the disclosure, examples of instruments, apparatus, methods and their related results according to examples of the present disclosure are given below. Note that titles or subtitles may be used in the examples for convenience of a reader, which in no way should limit the scope of the disclosure. Unless otherwise defined, technical and scientific terms used herein have the meaning as commonly understood by one of ordinary skill in the art to which this disclosure pertains. In the case of conflict, the present document, including definitions will control.\n\nAlthough the terms first, second, etc. may be used herein to describe various elements, these elements should not be limited by these terms. These terms are only used to distinguish one element from another. For example, a first element could be termed a second element, and similarly, a second element could be termed a first element, without departing from the scope of this disclosure. As used herein, the term âand/or,â includes any and all combinations of one or more of the associated listed items.\n\nWhen an element is referred to as being âconnected,â or âcoupled,â to another element, it can be directly connected or coupled to the other element or intervening elements may be present. By contrast, when an element is referred to as being âdirectly connected,â or âdirectly coupled,â to another element, there are no intervening elements present. Other words used to describe the relationship between elements should be interpreted in a like fashion (e.g., âbetween,â versus âdirectly between,â âadjacent,â versus âdirectly adjacent,â etc.).\n\nThe terminology used herein is for the purpose of describing particular examples only and is not intended to be limiting. As used herein, the singular forms âaâ, âanâ, and âtheâ are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms âcomprisesâ, âcomprising,â, âincludesâ and/or âincludingâ, when used herein, specify the presence of stated features, integers, steps, operations, elements, and/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and/or groups thereof.\n\nIt should also be noted that in some alternative implementations, the functions/acts noted may occur out of the order noted in the figures. For example, two figures shown in succession may in fact be executed substantially concurrently or may sometimes be executed in the reverse order, depending upon the functionality/acts involved.\n\nSpecific details are provided in the following description to provide a thorough understanding of examples. However, it will be understood by one of ordinary skill in the art that examples may be practiced without these specific details. For example, systems may be shown in block diagrams so as not to obscure the examples in unnecessary detail. In other instances, well-known processes, structures and techniques may be shown without unnecessary detail in order to avoid obscuring examples.\n\nIn the following description, illustrative examples will be described with reference to acts and symbolic representations of operations (e.g., in the form of flow charts, flow diagrams, data flow diagrams, structure diagrams, block diagrams, etc.) that may be implemented as program services or functional processes include routines, programs, objects, components, data structures, etc., that perform particular tasks or implement particular abstract data types and may be implemented using hardware at network elements. Non-limiting examples of such hardware may include one or more Central Processing Units (CPUs), digital signal processors (DSPs), application-specific-integrated-circuits, field programmable gate arrays (FPGAs), computers or the like.\n\nAdditional features and advantages of the disclosure will be set forth in the description which follows, and in part will be obvious from the description, or can be learned by practice of the herein disclosed principles. The features and advantages of the disclosure can be realized and obtained by means of the instruments and combinations particularly pointed out in the appended claims. These and other features of the disclosure will become more fully apparent from the following description and appended claims, or can be learned by the practice of the principles set forth herein.\n\nOverview\n\nIn one aspect of the present disclosure, a method includes transmitting, by a controller, a request to a network device of the network for a status of operation of the network device with respect at least one configuration setting available at the network device; determining, by the controller, whether the status matches an operation status provided by the at least one configuration setting; and performing, by the controller, a recovery process to adjust the implementation of the at least one configuration setting when the determining determines that the status does not match the operation status.\n\nIn one aspect of the present disclosure, a system includes one or more processors and at least one computer-readable storage medium having instructions stored therein which, when executed by the one or more processors, cause the system to transmit a request to a network device of the network for a status of operation of the network device with respect at least one configuration setting available at the network device; determine whether the status matches an operation status provided by the at least one configuration setting; and a recovery process to adjust implementation of the at least one configuration setting when the determining determines that the status does not match the operation status.\n\nIn one aspect of the present disclosure, a non-transitory computer-readable storage medium having stored therein instructions which, when executed by one or more processors associated with a network controller, cause the network controller to transmit a request to a network device of the network for a status of operation of the network device with respect at least one configuration setting available at the network device; determine whether the status matches an operation status provided by the at least one configuration setting; and perform a recovery process to adjust implementation of the at least one configuration setting when the determining determines that the status does not match the operation status.\n\nDESCRIPTION\n\nCloud networking provides centralized management, visibility, and control without the cost and complexity of controller appliances or overlay management software. Network components such as access points and switches can be built from the ground up for cloud management. These devices are capable of being centrally managed with centralized management and can be layer 7 devices with application visibility, real time web-based diagnostics, monitoring, reporting, etc.\n\nAs indicated above, currently utilized central management systems can only ensure that these remotely accessible network devices (e.g., switches, access points, etc.) have the latest version of corresponding/intended configuration files. These configuration files can be for any one of radio settings, port settings, encryption setting and any other type of setting of these network devices. However, a problem arises when the correct configuration files are sent to the network devices but the receiving network device(s) fail to implement the configurations correctly. For example, local computer-readable instructions running of a given one of receiving network devices may fail to properly implement the configuration file to disable a SSID network, as described above, thus turning a secure network into an insecure SSID network that can be accessed by any unauthorized device.\n\nExamples described herein after, enable a central management component, implemented via cloud networking, ensure that each network component has properly executed and implemented configuration files and parameters sent thereto and upon detection of a failure of any network component in doing so, implement remedial measures to address this issue and prevent unauthorized access to the underlying network.\n\nThe present disclosure will be as follows. The discussion begins with an introductory discussion of example network environments, as illustrated in FIGS. 1A-B. The discussion continues with a description of example computing and network devices, as illustrated in FIGS. 2 and 3, including example hardware components suitable for hosting software applications and performing computing operations. Thereafter, examples will be described for addressing the deficiencies described above, with reference to FIG. 4. The disclosure now turns to FIG. 1A.\n\nFIG. 1A illustrates an example network environment, according to one aspect of the present disclosure. The network environment 100 includes access points (APs) 110 for wirelessly connecting wireless clients 116 to the network environment. Wireless clients 116 can include any one of, but is not limited to, a mobile device, a tablet, a laptop, a camera, etc. In other words, wireless clients 116 can be any type of electronic device that can communicate with one of APs 110 and or other network nodes such as nodes 108, router 106, etc., via any known or to be developed wireless and/or wired communication schemes and means.\n\nAPs 110 can include hardware and software for transmitting and receiving wireless signals from other devices and supporting wireless communications and connectivity. APs 110 can broadcast one or more wireless networks deployed on the APs 110, allow the wireless clients 116 to access the one or more wireless networks, and bridge or route communications between the wireless clients 116 on the one or more wireless networks and the physical network(s), including other devices in and out of the network environment 100. In some cases, the APs 110 can broadcast the one or more wireless networks deployed on the APs 110 by transmitting the names or service set identifiers (SSIDs) of the one or more wireless networks. The APs 110 can also broadcast other information about the one or more wireless networks, such as channel information, band information, etc.\n\nThe APs 110 can have a respective range 112 for transmitting and/or receiving wireless communications. Those of the wireless clients 116 within the respective range 112 of an AP can communicate wirelessly with that AP and maintain such communications as they move within the respective range 112. In some cases, the APs 110 can be positioned such that the respective range 112 of two or more APs 110 can overlap to form an overlapping range 114. Moreover, the APs 110 can be position within communicative range of each other to create a mesh network configuration. The overlapping range 114 and/or mesh network configuration can allow a wireless client to roam outside the respective range of the AP that the wireless client is connected to, and experience minimal to no loss in connectivity. For example, a wireless client connected to AP1 can roam outside of the respective range of AP1 and into the respective range of AP2, and maintain connectivity through AP2. Thus, the wireless client can seamlessly hop from one AP to another during a communication session in order to avoid or limit service disruptions when the wireless client moves beyond the respective range of an AP.\n\nFor example, as a wireless client begins to roam toward the limits of an APs respective range, the wireless client may eventually reach an overlapping range 114 which places the wireless client within the respective range of multiple APs, thus allowing the wireless client to transmit and receive wireless signals from those APs 110 associated with the overlapping range 114. The wireless client can hop from one AP associated with the overlapping range to another AP associated with the overlapping range, and maintain connectivity (or limit disruption) as the wireless client roams outside of the respective range of one AP and into the respective range of another AP. The overlapping ranges 114 can provide zones for a âhandoffâ between APs, where connectivity with a wireless client is transferred from one AP to a different AP in order to continue the wireless clients' wireless communications via the different AP. Thus, the wireless clients 116 can move between respective ranges 112 and maintain wireless connectivity to the network environment 100.\n\nThe APs 110 can each be configured to service a single wireless network or multiple wireless networks. Each wireless network deployed on an AP can have a respective SSID which identifies the wireless network. For example, one or more of the APs 110 can provide connectivity to a first wireless network having a âGuestâ SSID and a second wireless network having a âRestrictedâ SSID. The wireless clients 116 can connect to the Guest SSID or the Restricted SSID via those APs 110. Moreover, multiple APs 110 can host a same wireless network or SSID, but may also host other wireless networks or SSIDs. For example, all APs 110 may host a guest wireless network (e.g., Guest SSID), while only one or more APs 110 may host a specific, restricted wireless network (e.g., Restricted SSID).\n\nEach wireless network can have one or more configuration settings defined for that wireless network based on the specific requirements or purpose of the wireless network. Non-limiting examples of configuration settings for wireless networks can include a communication channel, a band, an authentication requirement or mechanism (e.g., authorization enforced via a device's media access control (MAC) address, a remote authentication dial-in user service (RADIUS), a preshared key (PSK), 802.1x credentials, etc.), network access restrictions (e.g., which portions and/or resources of a network can be accessed, etc.), security or group policies (e.g., access control list configurations, etc.), network configurations (e.g., subnet, virtual LAN (VLAN), communication protocols, port forwarding, traffic filtering, etc.), etc. Furthermore, each AP 110 can have its own corresponding device configuration settings including, but not limited to, a port setting, a radio setting, an encryption setting, etc.\n\nIn some cases, the configuration and location of wireless networks and APs 110 can vary based on one or more factors, such as network requirements, geography, policies, physical restrictions, organizational structure, business factors, inter-office politics, etc. To illustrate, a wireless network associated with the SSID âRestricted Business Departmentâ may be configured specifically to address the networking needs and authorization levels of users in the business department and/or may be deployed on APs located in the office of the business department, while a wireless network associated with the SSID âGuest Networkâ may be open to all users and hosted by all APs 100 in the network environment 100. Thus, different wireless networks, which can be represented by respective SSIDs, can be configured to separate users, clients, resources, and other aspects of a network.\n\nAPs 110 can connect to nodes 108 to communicate with the physical network as well as other devices inside or outside of the network environment. Nodes 108 can be, for example, Layer 2 and/or Layer 3 network devices, such as switches or routers. In some cases, APs 110 can communicatively couple to nodes 108 via a physical link (e.g., wire or cable) between a respective port/interface on APs 110 and a respective port/interface on nodes 108. In some cases, APs 110 can communicatively couple to nodes 108 via any known or to be developed wireless communication scheme/protocol. Furthermore, as shown in FIG. 1, other example components such as server 118, desktop computer 120 and TV (e.g., internet-enabled TV) 122 can communicatively couple to nodes 108. In one example, servers 118 and desktop computer 120 are physically coupled (via any known or to be developed wired communication scheme) to corresponding node 108. Accordingly, APs 110, servers 118 and desktop computer 120 can be coupled to corresponding node(s) 108 via any known, or to be developed, wired and/or wireless communication means and schemes.\n\nNodes 108 can also connect to other network devices in the network. For example, nodes 108 can connect to a router 106 which can route communications to and from other networks and devices, such as network 102. Thus, traffic to and from the wireless clients 116 and other networks, such as network 102, can flow through router 106, nodes 108, and APs 110, and wirelessly between the wireless clients 116 and APs 110.\n\nNetwork 102 can include a private network, such as a local area network (LAN) or a private cloud; a public network such as the Internet or a public cloud; and/or a hybrid network such as a virtual private network (VPN), a hybrid cloud, etc. In some cases, network 102 can be a cloud configured to communicate with network environment 100 through router 106 to provide one or more services (e.g., firewall services, intrusion detection services, infrastructure services, management services, monitoring services, authentication services, backup services, configuration or automation services, etc.) to any of devices 106, 108, 110, and 112 in network environment 100.\n\nFor example, network 102 can include one or more clouds hosting one or more controllers 104. Controller 104 can be, for example, a network appliance (e.g., a service or application; a physical element, such as a physical server or switch; a virtual element such as a virtual machine, a software container, a virtual device, a virtual network function (VNF), a virtual network service chain; etc.) configured to monitor and manage network configurations and conditions in the network environment 100. Thus, network 102 can include one or more controllers 104 configured to provide services, such as monitoring and configuration management services, to devices in the network environment 100. To illustrate, controller 104 in network 102 can be configured to provide authentication, authorization, and accounting (AAA) services and/or other networking services for the wireless clients 116 and the network environment 100, such as remote management services. Remote management services can include, without limitation, monitoring services, deployment services, configuration services, troubleshooting services, automated services, update services, and other networking services. Configuration parameters and files described above can be transmitted to router 106, nodes 108 and APs 110 by controller 104.\n\nController 104 is illustrated in FIG. 1A as a single controller or device for the sake of clarity and explanation purposes. It should be noted that controller 104 can represent one or more controllers, devices, applications, appliances, elements, etc. For example, in some examples, controller 104 can be a single controller, a distributed controller, a cluster of controllers, a plurality of controllers, etc.\n\nFIG. 1B illustrates a diagram of example wireless networks deployed on the network environment of FIG. 1, according to one aspect of the present disclosure. In this example, AP 110 is configured to host multiple wireless networks, represented in this example by SSID 1 140 and SSID 2 150. SSID 1 140 is a restricted wireless network, which may require user authentication for access and may provide access to restricted network resources (e.g., printers, shares, files, databases, applications, intranet, etc.) upon access. SSID 2 150 is a guest wireless network that is open to all users and/or available with limited authentication requirements. For the sake of clarity and explanation purposes, SSID 1 140 will be referenced herein as âRestricted SSID 1 140â, and SSID 2 150 will be referenced herein as âGuest SSID 2 150â.\n\nGiven the reduced authentication and security requirements of Guest SSID 2 150, access to network resources in network environment 100 from Guest SSID 2 150 may be limited, such as access to printers, shares, files, databases, applications, intranet, etc. In some cases, Guest SSID 2 150 may only provide Internet connectivity, and thus may restrict access to all other network resources. For example, Guest SSID 2 150 can provide a means for unauthenticated users and guests to access the Internet from their wireless devices for convenience, while preventing unauthenticated users from accessing other resources on the network.\n\nIn some cases, Restricted SSID 1 140 and Guest SSID 2 150 can have different network addressing configurations in order to segregate traffic and users between the wireless networks, whereas mentioned above, the addressing configuration instructions may be remotely provided to AP 110 by controller 104 of network 102. For example, Restricted SSID 1 140 and Guest SSID 2 150 can reside on different VLANs, subnets, etc. Wireless clients 116 can connect to Restricted SSID 1 140 or Guest SSID 2 150 via AP 110. As previously mentioned, network configurations, security, policies, authentication, etc., applied to wireless clients 116 will depend on which of the Restricted SSID 1 140 or the Guest SSID 2 150 they connect to and can be provided remotely by controller 104.\n\nThe disclosure now turns to FIGS. 2 and 3, which illustrate example network devices and computing devices, such as switches, routers, load balancers, client devices, and so forth.\n\nFIG. 2 illustrates an example network device suitable for performing switching, routing, load balancing, and other networking operations, according to an aspect of the present disclosure. In one example, network device 200 can be the same as any one of AP 110, nodes 108 and switch 106. Network device 200 includes a central processing unit (CPU) 204, interfaces 202, and a bus 210 (e.g., a PCI bus). When acting under the control of appropriate software or firmware, CPU 204 is responsible for executing packet management, error detection, and/or routing functions. CPU 204 preferably accomplishes all these functions under the control of software including an operating system and any appropriate applications software. CPU 204 may include one or more processors 208, such as a processor from the INTEL X86 family of microprocessors. In some cases, processor 208 can be specially designed hardware for controlling the operations of network device 600. In some cases, a memory 606 (e.g., non-volatile RAM, ROM, etc.) also forms part of CPU 604. However, there are many different ways in which memory could be coupled to the system.\n\nInterfaces 202 are typically provided as modular interface cards (sometimes referred to as âline cardsâ). Generally, they control the sending and receiving of data packets over the network and sometimes support other peripherals used with network device 200. Among the interfaces that may be provided are Ethernet interfaces, frame relay interfaces, cable interfaces, DSL interfaces, token ring interfaces, and the like. In addition, various very high-speed interfaces may be provided such as fast token ring interfaces, wireless interfaces, Ethernet interfaces, Gigabit Ethernet interfaces, ATM interfaces, HSSI interfaces, POS interfaces, FDDI interfaces, WIFI interfaces, 3G/4G/5G cellular interfaces, CAN BUS, LoRA, and the like. Generally, these interfaces may include ports appropriate for communication with the appropriate media. In some cases, they may also include an independent processor and, in some instances, volatile RAM. The independent processors may control such communications intensive tasks as packet switching, media control, signal processing, crypto processing, and management. By providing separate processors for the communications intensive tasks, these interfaces allow the master microprocessor 604 to efficiently perform routing computations, network diagnostics, security functions, etc.\n\nAlthough the system shown in FIG. 2 is one specific network device of the present invention, it is by no means the only network device architecture on which the present invention can be implemented. For example, an architecture having a single processor that handles communications as well as routing computations, etc., is often used. Further, other types of interfaces and media could also be used with network device 200.\n\nRegardless of the network device's configuration, it may employ one or more memories or memory modules (including memory 206) configured to store program instructions for the general-purpose network operations and mechanisms for roaming, route optimization and routing functions described herein. The program instructions may control the operation of an operating system and/or one or more applications, for example. The memory or memories may also be configured to store tables such as mobility binding, registration, and association tables, etc. Memory 206 could also hold various software containers and virtualized execution environments and data.\n\nNetwork device 200 can also include an application-specific integrated circuit (ASIC), which can be configured to perform routing and/or switching operations. The ASIC can communicate with other components in network device 200 via bus 210, to exchange data and signals and coordinate various types of operations by network device 200, such as routing, switching, and/or data storage operations, for example.\n\nFIG. 3 illustrates a computing system architecture, according to an aspect of the present disclosure. As shown in FIG. 3, components of system 300 are in electrical communication with each other using a connection 305, such as a bus. Exemplary system 300 includes a processing unit (CPU or processor) 310 and a system connection 305 that couples various system components including system memory 315, such as read only memory (ROM) 320 and random access memory (RAM) 325, to processor 710. System 300 can include a cache of high-speed memory connected directly with, in close proximity to, or integrated as part of the processor 310. System 300 can copy data from memory 315 and/or storage device 330 to cache 312 for quick access by processor 310. In this way, the cache can provide a performance boost that avoids processor 310 delays while waiting for data. These and other modules can control or be configured to control the processor 310 to perform various actions. Other system memory 315 may be available for use as well. Memory 315 can include multiple different types of memory with different performance characteristics. Processor 310 can include any general purpose processor and a hardware or software service, such as Service 1 332, Service 2 334, and Service 3 336 stored in storage device 330, configured to control processor 310 as well as a special-purpose processor where software instructions are incorporated into the actual processor design. Processor 310 may be a completely self-contained computing system, containing multiple cores or processors, a bus, memory controller, cache, etc. A multi-core processor may be symmetric or asymmetric.\n\nTo enable user interaction with the computing device 300, an input device 345 can represent any number of input mechanisms, such as a microphone for speech, a touch-sensitive screen for gesture or graphical input, keyboard, mouse, motion input, speech and so forth. An output device 335 can also be one or more of a number of output mechanisms known to those of skill in the art. In some instances, multimodal systems can enable a user to provide multiple types of input to communicate with computing device 300. The communications interface 340 can generally govern and manage the user input and system output. There is no restriction on operating on any particular hardware arrangement and therefore the basic features here may easily be substituted for improved hardware or firmware arrangements as they are developed.\n\nStorage device 330 is a non-volatile memory and can be a hard disk or other types of computer readable media which can store data that are accessible by a computer, such as magnetic cassettes, flash memory cards, solid state memory devices, digital versatile disks, cartridges, random access memories (RAMs) 325, read only memory (ROM) 320, and hybrids thereof.\n\nThe storage device 330 can include services 332, 334, 336 for controlling the processor 310. Other hardware or software modules are contemplated. The storage device 330 can be connected to the system connection 305. In one aspect, a hardware module that performs a particular function can include the software component stored in a computer-readable medium in connection with the necessary hardware components, such as the processor 310, connection 305, output device 335, and so forth, to carry out the function.\n\nHaving described examples of network environment 100 and structures of network components such as routers, access points, switches, etc., we now turn to the description of FIG. 4 illustrating examples that enable a central management component (e.g., controller 104 implemented via cloud networking) to manage and monitor software, configurations, and updates to network components and ensure that each network component has properly executed and implemented configuration files and parameters sent thereto. As further described below, the central management component can determine whether operation of a network device (that is remotely managed by the central management component) corresponding to any one of a number of configuration settings available at the network device has failed. In other words, the central management component compares a state of operation of the network device with reference to a given configuration setting with the âshould-beâ (dictated, directed, instructed) state of the network device according to the given configuration setting and if there is a mismatch between the two, determines that the operation of the network device with respect to the given configuration setting has failed. Upon detection of such failure, the central management component can implement remedial measures to address this failure and prevent unauthorized access to the underlying network as well as unintended/unexpected network behavior or errors.\n\nFIG. 4 illustrates a process for remote device status audit and recovery, according to one aspect of the present disclosure. FIG. 4 will be described from the perspective of controller 104 described above with reference to FIG. 1.\n\nAt S400, controller 104 checks for a triggering event. A triggering event is an event upon which controller 104 requests a status update for any number of configuration settings implemented at any one of router 106, nodes 108 and APs 110 (router 106, nodes 108 and APs 110 may hereinafter collectively be referred to as network devices 106-110) described above with reference to FIG. 1. As described, each configuration setting is a set of computer-readable instructions sent by controller 104 to respective ones of network devices 106-110 depending on the functionality of each of network devices 106-110. These computer-readable instructions can then be implemented and executed locally at the receiving ones of network devices 106-110. In one example, one or more of network devices 106-110 can be a security appliance (e.g., any known or to be developed network security appliance) implemented within network 100 to ensure that network 100 is a secure network.\n\nExamples of configuration settings include, but are not limited to, port settings, radio settings, uplink settings, Virtual Local Area Network (VLAN) tagging settings, firewall rules, wireless broadcasting settings (e.g., authentication settings, encryption settings, etc.).\n\nReferring back to S400, the triggering event controller 104 checks for, can be any one of the following non-limiting events.\n\nThe triggering event can be a passage (expiration) of a certain period of time (e.g., every 4 hours, one a day, twice a week, etc.) between two consecutive instances of transmitting a request for status update on a particular configurations setting. In this case, the check at S400 and the following detection of a triggering event may be said to be periodic. The periodicity duration can be a reconfigurable parameter determined based on experiments and empirical studies.\n\nIn another example, the triggering event can be when controller 104 provides a set of computer-readable instructions for a particular configuration setting to one or more of network devices 106-110. Alternatively, the triggering event can be shortly (e.g., a few seconds, minutes, hours, etc.) after controller 104 provides the set of computer-readable instructions for the particular configuration setting to the one or more of network devices 106.\n\nIn another example, the triggering event can be when any one of network devices 106-110 come online (e.g., activate to be part of network 100) after being offline for a period of time. The offline period of time can be a reconfigurable parameter determined based on experiments and empirical studies (e.g., after being offline for more than a few seconds, minutes, hours, days, weeks, months, years, etc.).\n\nAt S405, controller 104 determines if the check at S400 results in a detection of a triggering event. If at S405, controller 104 determines that no triggering event is detected, the process reverts back to S405. Controller 104 repeats S400 and S405 until a triggering event is detected.\n\nIf and when controller 104 detects a triggering event at S405, then at S410, controller 104 transmits a request to one or more of network devices 106-110 at which a corresponding triggering event is detected. The request is for a status of operation of the one or more of network devices 106-110 with respect to at least one configuration setting available at the network device. In one example, controller 104 transmits the request via a backend secure and encrypted tunnel/channel created between each of network devices 106-110 and controller 104. In view thereof, the controller 104 can also be referred to as backend component 104.\n\nFor example, if at a first point in time, controller 104 transmits a radio configuration settings to one or more APs 110, then at a second point in time (this can be a short time after the transmission of the settings, or regularly thereafter, as described above), controller 104 can make an inquiry into a status of radio operation of the one or more APs 110. For example, controller 104 can communicate with a handler installed on the one or more APs 110 to request information on the nature of what the one or more APs 110 are broadcasting.\n\nOther examples of requests made by controller 104 to one or more network devices 106-110 include what VLAN a switch is trunking to (e.g., when the network device is a switch such as one of nodes 108), what the status of a hardware component at the switch is, what is it that Linux running on the switch is exporting, what is a particular driver on the switch is expecting about a status of a particular function or task, etc.\n\nIn examples, where one or more network devices 106-110 are vendor specific devices with vendor specific configurations and settings, controller 104 utilizes a configuration tool to communicate with the vendor specific configuration tool installed on each vendor specific network device in order to transmit the request thereto.\n\nIn one example, while a triggering event may be specific to a given configuration setting (e.g., installment of new radio settings on an AP 110 by controller 104), the ensuing request for status update on operations of a network device can be either limited to that corresponding to the radio configuration settings or can encompass a status update on operation the same network device on any number of (or all of) configuration settings hosted by or available on the AP 110. This may be referred to as a partial or full sweep of configuration settings on given network device, depending on whether the request is for a number of or all of the configuration settings hosted by or available on a given network device. In another example, the triggering event can result in controller 104 transmitting the request to all available network devices 106-110 for operations thereof with respect to all or any number of configuration settings available on or hosted by network devices 106-110. This may be referred to as a partial or full sweep of configuration settings on all available network devices, depending on whether the request is for a number of or all of the configuration settings hosted by or available on a given network device.\n\nA S415, controller 104 receives a feedback, through the backend channel described above, from each one of network devices 106-110 to which controller 104 transmits a request at S410. Examples of feedbacks received from network devices 106-110 include responses to examples requests made by controller 104 at S410 described above. For example, in response to a request by controller 104 made to one AP 110 regarding the nature of what it is that the one AP 110 is broadcasting, the feedback received at controller 104 can be, that the one AP 110 is not broadcasting anything (which means that any wireless network/SSID hosted by the one AP 110 that should be available to end devices such as one or more wireless clients 116 is not available). Other example feedbacks, in response to example requests transmitted by controller 104 described above, can include the VLAN(s) to which the corresponding switch is trunking, requested information on status of hardware components at corresponding one(s) of network devices 106-110, etc.\n\nIn one example, processes performed at S410 and S415 can be referred to as auditing one or more of network devices 106-110.\n\nAt S420, controller 405 determines whether operation of one or more network devices with respect to configuration setting(s) for which request(s) is/are transmitted by controller 104 to corresponding network device(s) at S410 and from which feedback is/are received at S415, matches operations, as commanded (instructed, directed, dictated) by corresponding one of configuration settings (e.g., computer-readable instructions and codes included in the corresponding one of the configuration settings). In the example of controller 104 requesting information on nature of what is it that the one AP 110 is broadcasting, when the corresponding feedback received at S415 is that the one AP 110 is not broadcasting anything, controller 405 determines that the radio operation of the one AP 110 does not match with the operation commanded by radio configuration settings on the one AP 110 and thus determines that the one AP 110 is not functioning correctly (at least with respect to radio configurations thereof). In another example, when the feedback received from a network device from among network devices 106-110 indicates a certain status of a hardware component at the corresponding network device, controller 104 compares the feedback with what controller 104 has as the âshould-beâ status of the same hardware component (the âshould-beâ status is the status that the hardware component should be in/have at the time controller 104 requests the status, according to the original configuration setting of the hardware component provided to the corresponding network device by controller 104). If the comparison indicates a mismatch between the reported status and the âshould-beâ status of the hardware component, then at S420, controller 104 determines that the configuration setting for the hardware component is not being implemented correctly. However, if the reported status and the âshould-beâ status are the same, then at S420, controller 104 determines that the hardware component configuration setting is being implemented correctly.\n\nAt S425, controller 104 determines whether the determination at S420 indicates that the configuration setting(s) is/are implemented correctly (e.g., whether a status of operation of a network device with respect to at least one configuration setting available at the network device matches that commanded by the at least one configuration setting). If at S425, controller 104 determines that the configuration setting(s) is/are implemented correctly, then the process reverts back to S400 and controller 104 repeats S400-S425.\n\nHowever, if at S425, controller 104 determines that one or more configuration settings is/are not implemented correctly based on the determination at S420, then at S430, controller 104 performs a recovery process for each configuration setting that is not implemented correctly. In other words, controller 104 performs a recovery process so as to adjust (e.g., restart, modify, etc.) implementation of the at last one configuration setting at a network device in order to ensure that the status of operation of the network device, after adjustment, matches that commanded by the at least one configuration setting.\n\nThe recovery process for any given configuration setting can be performed at various levels/stages with each stage being verified and if unsuccessful, the next stage being implemented/performed. In other words, the recovery process can be a gradual recovery process. For example, a first stage of a recovery process for correcting the radio configuration settings on the one AP 110 described above (in order to correct the broadcasting of SSID hosted by the one AP 110 and thus enabling wireless clients 116 to access the internet thereby) is for controller 104 to request the one AP 110 to update the radio configuration file that is currently being implement on the one AP 110. Thereafter, at S435, controller 104 can determine if the first stage of the recovery process has been successful. In one example, the determination at S435 can be performed in the same manner as S410, S415 and S420 described above. In other words, controller 104, after performing the first stage of the recovery process, can request an update on the radio configurations setting of the one AP 110, receive a feedback thereon, compare the feedback with the âshould-beâ radio configuration setting on the AP 110 and determine if the first stage recovery process has been successful.\n\nIf at S435, controller 104 determines that the first stage of the recovery process has been successful, the process reverts back to S400 and controller 104 repeats S400 to S435.\n\nHowever, if at S435, controller 104 determines that the first stage of the recovery process has not been successful, the process reverts back to S430 and controller 104 performs a second stage of the recovery process. In the example of the radio setting of the one AP 110 mentioned above, the second stage can be a limited or a full reconfiguration of the radio setting of the one AP 110 based on the radio setting configuration file available on the one AP 110. This is then followed by the process at S435, as described above.\n\nShould the second stage of the recovery process be inadequate and unsuccessful, S430 is performed again where a third stage of the recovery process is performed. The third stage of the recovery process can be for example, a full reboot of the one AP 110. This is then followed by the process at S435, as described above.\n\nShould the third stage of the recovery process be inadequate and unsuccessful, S430 is performed again where a fourth stage of the recovery process is performed. The fourth stage of the recovery process can be for example, a full wipe and reboot of the one AP 110. In one example, the full wipe and reboot includes clearing all saved states on the AP 110 (e.g., saved authentication information for access the hosted SSID such as usernames, passwords, etc.). This is then followed by the process at S435, as described above.\n\nWhile several examples of different stages of a corrective process are described above, the present disclosure is not limited thereto. Accordingly, any gradual and multi-stage corrective process for any given configuration setting on a network device such as network devices 106-110 can be implemented at S430 and S435.\n\nFor clarity of explanation, in some instances the present technology may be presented as including individual functional blocks including functional blocks comprising devices, device components, steps or routines in a method embodied in software, or combinations of hardware and software.\n\nIn some embodiments the computer-readable storage devices, mediums, and memories can include a cable or wireless signal containing a bit stream and the like. However, when mentioned, non-transitory computer-readable storage media expressly exclude media such as energy, carrier signals, electromagnetic waves, and signals per se.\n\nMethods according to the above-described examples can be implemented using computer-executable instructions that are stored or otherwise available from computer readable media. Such instructions can comprise, for example, instructions and data which cause or otherwise configure a general purpose computer, special purpose computer, or special purpose processing device to perform a certain function or group of functions. Portions of computer resources used can be accessible over a network. The computer executable instructions may be, for example, binaries, intermediate format instructions such as assembly language, firmware, or source code. Examples of computer-readable media that may be used to store instructions, information used, and/or information created during methods according to described examples include magnetic or optical disks, flash memory, USB devices provided with non-volatile memory, networked storage devices, and so on.\n\nDevices implementing methods according to these disclosures can comprise hardware, firmware and/or software, and can take any of a variety of form factors. Typical examples of such form factors include laptops, smart phones, small form factor personal computers, personal digital assistants, rackmount devices, standalone devices, and so on. Functionality described herein also can be embodied in peripherals or add-in cards. Such functionality can also be implemented on a circuit board among different chips or different processes executing in a single device, by way of further example.\n\nThe instructions, media for conveying such instructions, computing resources for executing them, and other structures for supporting such computing resources are means for providing the functions described in these disclosures.\n\nAlthough a variety of examples and other information was used to explain aspects within the scope of the appended claims, no limitation of the claims should be implied based on particular features or arrangements in such examples, as one of ordinary skill would be able to use these examples to derive a wide variety of implementations. Further and although some subject matter may have been described in language specific to examples of structural features and/or method steps, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to these described features or acts. For example, such functionality can be distributed differently or performed in components other than those identified herein. Rather, the described features and steps are disclosed as examples of components of systems and methods within the scope of the appended claims.\n\nClaim language reciting âat least one ofâ refers to at least one of a set and indicates that one member of the set or multiple members of the set satisfy the claim. For example, claim language reciting âat least one of A and Bâ means A, B, or A and B."
    }
}