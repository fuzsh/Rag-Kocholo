{
    "id": "wrong_mix_range_foundationPlace_00080_2",
    "rank": 83,
    "data": {
        "url": "https://www.geeksforgeeks.org/software-engineering-critical-path-method/",
        "read_more_link": "",
        "language": "en",
        "title": "Critical Path Method for Project management",
        "top_image": "https://media.geeksforgeeks.org/wp-content/cdn-uploads/gfg_200x200-min.png",
        "meta_img": "https://media.geeksforgeeks.org/wp-content/cdn-uploads/gfg_200x200-min.png",
        "images": [
            "https://media.geeksforgeeks.org/gfg-gg-logo.svg",
            "https://media.geeksforgeeks.org/wp-content/uploads/20190509202011/node.jpg",
            "https://media.geeksforgeeks.org/wp-content/uploads/20190510141129/AON1.jpg",
            "https://media.geeksforgeeks.org/wp-content/uploads/20190510143231/aon2.jpg",
            "https://media.geeksforgeeks.org/wp-content/uploads/20190510202317/aon3.jpg",
            "https://media.geeksforgeeks.org/wp-content/uploads/20190510203214/aon4.jpg",
            "https://media.geeksforgeeks.org/auth/profile/28ttxnelkjs9u8j8ypuf",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/new-premium-rbanner.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/gfgFooterLogo.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/googleplay.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/appstore.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/suggestChangeIcon.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/createImprovementIcon.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "Data Structures",
            "Algorithms",
            "Python",
            "Java",
            "C",
            "C++",
            "JavaScript",
            "Android Development",
            "SQL",
            "Data Science",
            "Machine Learning",
            "PHP",
            "Web Development",
            "System Design",
            "Tutorial",
            "Technical Blogs",
            "Interview Experience",
            "Interview Preparation",
            "Programming",
            "Competitive Programming",
            "Jobs",
            "Coding Contests",
            "GATE CSE",
            "HTML",
            "CSS",
            "React",
            "NodeJS",
            "Placement",
            "Aptitude",
            "Quiz",
            "Computer Science",
            "Programming Examples",
            "GeeksforGeeks Courses",
            "Puzzles",
            "SSC",
            "Banking",
            "UPSC",
            "Commerce",
            "Finance",
            "CBSE",
            "School",
            "k12",
            "General Knowledge",
            "News",
            "Mathematics",
            "Exams"
        ],
        "tags": null,
        "authors": [
            "GeeksforGeeks"
        ],
        "publish_date": "2019-05-23T06:18:19",
        "summary": "",
        "meta_description": "A Computer Science portal for geeks. It contains well written, well thought and well explained computer science and programming articles, quizzes and practice/competitive programming/company interview Questions.",
        "meta_lang": "en",
        "meta_favicon": "https://media.geeksforgeeks.org/wp-content/cdn-uploads/gfg_favicon.png",
        "meta_site_name": "GeeksforGeeks",
        "canonical_link": "https://www.geeksforgeeks.org/software-engineering-critical-path-method/",
        "text": "Last Updated : 05 Apr, 2024\n\nImprove\n\nCritical Path Method (CPM) is a method used in project planning, generally for project scheduling for the on-time completion of the project. It helps in the determination of the earliest time by which the whole project can be completed. There are two main concepts in this method namely critical task and critical path.\n\nWhat is a Critical task in project management?\n\nIt is the task/activity that can’t be delayed otherwise the completion of the entire project will be delayed. It must be completed on time before starting the other dependent tasks.\n\nWhat is the Critical path in project management?\n\nIt is a sequence of critical tasks/activities and is the largest path in the project network. It gives us the minimum time which is required to complete the entire project. The activities in the critical path are known as critical activities and if these activities are delayed then the completion of the entire project is also delayed.\n\nBenefits of using the critical path method in project management:\n\nShow the project schedule visually.\n\nHighlight important tasks with CPM.\n\nUse CPM to find and handle risks.\n\nCPM helps the project team communicate better.\n\nHow to find the critical path in a project:\n\nStep 1: Identify all tasks required to complete the project\n\nStep 2: Determine the sequence of tasks\n\nStep 3: Estimate the duration of each task\n\nStep 4: Draw a network diagram\n\nStep 5: Identify the critical path\n\nStep 6: Calculate the float\n\nStep 7: Monitor the critical path\n\nThe table given below contains the activity label, its respective duration (in weeks), and its precedents. We will use the critical path method to find the critical path and activities of this project.\n\nActivity\n\nDuration (in weeks)\n\nPrecedents\n\nA\n\n6\n\n–\n\nB\n\n4\n\n–\n\nC\n\n3\n\nA\n\nD\n\n4\n\nB\n\nE\n\n3\n\nB\n\nF\n\n10\n\n–\n\nG\n\n3\n\nE,F\n\nH\n\n2\n\nC,D\n\nRules for Designing the Activity-on-Node network diagram:\n\nA project network should have only one start node\n\nA project network should have only one end node\n\nA node has a duration\n\nLinks normally have no duration\n\n“Precedents” are the immediate preceding activities\n\nTime moves from left to right in the project network\n\nA network should not contain loops\n\nA network should not contain dangles\n\nNode Representation:\n\nActivity label is the name of the activity represented by that node.\n\nEarliest Start is the date or time at which the activity can be started at the earliest.\n\nEarliest Finish is the date or time at which the activity can be completed at the earliest.\n\nLatest Start is the date or time at which the activity can be started at the latest.\n\nThe latest Finish is the date or time at which the activity can be finished at the latest.\n\nFloat is equal to the difference between the earliest start and latest start or earliest finish and latest finish.\n\nActivity-On-Node diagram:\n\nForward Pass in Critical path in project management:\n\nThe forward pass is carried out to calculate the earliest dates on which each activity may be started and completed.\n\nActivity A may start immediately. Hence, the earliest date for its start is zero i.e. ES(A) = 0. It takes 6 weeks to complete its execution. Hence, earliest it can finish is week 6 i.e. EF(A) = 6.\n\nActivity B may start immediately. Hence, the earliest date for its start is zero i.e. ES(B) = 0. It takes 4 weeks to complete its execution. Hence, the earliest it can finish is week 4 i.e. EF(B) = 4.\n\nActivity F may start immediately. Hence, the earliest date for its start is zero i.e. ES(F) = 0. It takes 10 weeks to complete its execution. Hence, the earliest it can finish is week 10 i.e. EF(F) = 10.\n\nActivity C starts as soon as Activity A completes its execution. Hence, the earliest week it can start its execution is week 6 i.e. ES(C) = 6. It takes 3 weeks to complete its execution. Hence, the earliest it can finish is week 9 i.e. EF(C) = 9.\n\nActivity D starts as soon as Activity B completes its execution. Hence, the earliest week it can start its execution is week 4 i.e. ES(D) = 4. It takes 4 weeks to complete its execution. Hence, the earliest it can finish is week 8 i.e. EF(D) = 8.\n\nActivity E starts as soon as Activity B completes its execution. Hence, the earliest week it can start its execution is week 4 i.e. ES(E) = 4. It takes 3 weeks to complete its execution. Hence, the earliest it can finish is week 7 i.e. EF(E) = 7.\n\nActivity G starts as soon as activity E and activity F completes their execution. Since the activity requires the completion of both for starting its execution, we would consider the MAX(ES(E), ES(F)). Hence, the earliest week it can start its execution is week 10 i.e. ES(G) = 10. It takes 3 weeks to complete its execution. Hence, the earliest it can finish is week 13 i.e. EF(G) = 13.\n\nActivity H starts as soon as activity C and activity D completes their execution. Since the activity requires the completion of both for starting its execution, we would consider the MAX(ES(C), ES(D)). Hence, the earliest week it can start its execution is week 9 i.e. ES(H) = 9. It takes 2 weeks to complete its execution. Hence, the earliest it can finish is week 11 i.e. EF(H) = 11.\n\nBackward Pass in Critical path in project management:\n\nThe backward pass is carried out to calculate the latest dates on which each activity may be started and finished without delaying the end date of the project. Assumption: Latest finish date = Earliest Finish date (of project).\n\nActivity G’s latest finish date is equal to the earliest finish date of the precedent activity of finish according to the assumption i.e. LF(G) = 13. It takes 3 weeks to complete its execution. Hence, the latest it can start is week 10 i.e. LS(G) = 10.\n\nActivity H’s latest finish date is equal to the earliest finish date of the precedent activity of finish according to the assumption i.e. LF(H) = 13. It takes 2 weeks to complete its execution. Hence, the latest it can start is week 11 i.e. LS(H) = 11.\n\nThe latest end date for activity C would be the latest start date of H i.e. LF(C) = 11. It takes 3 weeks to complete its execution. Hence, the latest it can start is week 8 i.e. LS(C) = 8.\n\nThe latest end date for activity D would be the latest start date of H i.e. LF(D) = 11. It takes 4 weeks to complete its execution. Hence, the latest it can start is week 7 i.e. LS(D) = 7.\n\nThe latest end date for activity E would be the latest start date of G i.e. LF(G) = 10. It takes 3 weeks to complete its execution. Hence, the latest it can start is week 7 i.e. LS(E) = 7.\n\nThe latest end date for activity F would be the latest start date of G i.e. LF(G) = 10. It takes 10 weeks to complete its execution. Hence, the latest it can start is week 0 i.e. LS(F) = 0.\n\nThe latest end date for activity A would be the latest start date of C i.e. LF(A) = 8. It takes 6 weeks to complete its execution. Hence, the latest it can start is week 2 i.e. LS(A) = 2.\n\nThe latest end date for activity B would be the earliest of the latest start date of D and E i.e. LF(B) = 7. It takes 4 weeks to complete its execution. Hence, the latest it can start is week 3 i.e. LS(B) = 3.\n\nIdentifying Critical Path: The critical path is the path that gives us or helps us estimate the earliest time in which the whole project can be completed. Any delay to an activity on this critical path will lead to a delay in the completion of the entire project. To identify the critical path, we need to calculate the activity float for each activity. Activity float is the difference between an activity’s Earliest start and its latest start date or the difference between the activity’s Earliest finish and its latest finish date, and it indicates how much the activity can be delayed without delaying the completion of the entire project. If the float of an activity is zero, then the activity is critical and must be added to the critical path of the project network. In this example, activities F and G have zero float and hence, are critical activities.\n\nPlease Login to comment...\n\nArticle Tags :\n\nProject Management\n\nSoftware Engineering"
    }
}