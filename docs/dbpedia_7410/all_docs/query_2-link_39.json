{
    "id": "dbpedia_7410_2",
    "rank": 39,
    "data": {
        "url": "http://www.yoderdev.com/oss-future.html",
        "read_more_link": "",
        "language": "en",
        "title": "Free Software Future",
        "top_image": "",
        "meta_img": "",
        "images": [
            "http://www.yoderdev.com/img1.png",
            "http://www.yoderdev.com/gnu.jpg",
            "http://www.yoderdev.com/tux.png",
            "http://www.yoderdev.com/gnu.jpg",
            "http://www.yoderdev.com/gnu.jpg",
            "http://www.yoderdev.com/gnu.jpg",
            "http://www.yoderdev.com/gnu.jpg",
            "http://www.yoderdev.com/tux.png",
            "http://www.yoderdev.com/gnu.jpg",
            "http://www.yoderdev.com/gnu.jpg",
            "http://www.yoderdev.com/gnu.jpg",
            "http://www.yoderdev.com/tux.png",
            "http://www.yoderdev.com/gnu.jpg",
            "http://www.yoderdev.com/gnu.jpg",
            "http://www.yoderdev.com/tux.png",
            "http://www.yoderdev.com/gnu.jpg",
            "http://www.yoderdev.com/tux.png",
            "http://www.yoderdev.com/gnu.jpg",
            "http://www.yoderdev.com/gnu.jpg",
            "http://www.yoderdev.com/gnu.jpg",
            "http://www.yoderdev.com/gnu.jpg",
            "http://www.yoderdev.com/gnu.jpg",
            "http://www.yoderdev.com/gnu.jpg",
            "http://www.yoderdev.com/gnu.jpg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "open source",
            "linux advocacy",
            "forcast",
            "predictions"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Summary of the advantages of standardizing on an open source platform and what you can do now",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Lower computer costs and more bundled commodity software (see Home users)\n\nThe X Window System provides a standard way of running applications on one computer and displaying them on another. Plus, it is significantly better than many tools like pcAnywhere because it does not take complete control of the remote computer just to run an application on it. X also makes it relatively easy to set up cheap computers as smart terminals that will connect to a server on which applications will run, thereby making administration easier and lowering total hardware costs.\n\nLicense management will not be necessary. For some companies, keeping track of legal software licenses and verifying that everything stays legal is a full-time job. Open Source licenses give you permission to use them for any purpose on any number of computers, period. You really only need to worry about license management when modifying and/or distributing software outside your company, and even then it's fairly straightforward.\n\nThere is peace of mind in knowing that your file formats are not completely controled by a certain software vendor. What if your data is in a proprietary software program, which uses a cryptic and undocumented file format in order to keep you locked in to products from that company, and you need to import it into a different application, but the proprietary program does not export the data? Worse, what if the vendor completely abandons the application and it will no longer be upgraded?\n\nYou have the ability to go to any number of qualified consultants who are familiar with your software (or who can learn it). With proprietary software, only the vendor can fix problems. What if they go bankrupt? What if they refuse to fix it or simply charge more than you can pay? What if they abandon older versions of their software to force you to upgrade to newer versions? This is not just hypothetical. I have previously worked on a system that was to interface to a very old proprietary application. After several weeks of work, we realized that the proprietary application had a fatal flaw in the way it received input. The vendor wanted to sell their new version so refused to touch it, but upgrading was not an option. We eventually had to abandon the project, costing the client tens of thousands of dollars. That could have been avoided had they been using an Open Source application, because we would have had access to the code and could have fixed the problem.\n\nStandard secure remote access tools like OpenSSH come in the box. Any computer with an Open Source operating system will almost certainly have it.\n\nOpen Source products generally have great security, and when a flaw is found, it is usually fixed much sooner than flaws in proprietary software. Programmers at proprietary software companies usually work for paychecks, not for the sheer love of doing what they're doing, and they themselves don't necessarily want to use the code they're producing. In addition, they are the only ones who can look at the code for security holes and the only ones who can fix them. Open Source programmers, on the other hand, work on the software they work on because they want to use it. Also, any number of people can look for and fix security holes. There are projects out there whose main goal is to find and fix holes in Open Source Software products. The OpenBSD people are especially careful about security, and that system has had an incredibly low number of remote exploits.\n\nOpen Source systems, especially UNIX-based ones, are incredibly flexible. Because they are built from blocks that have well-documented functionality and that work together, it is easy to replace pretty much any part of the system with anything else that has a similar interface. Components such as the shell, the login interface, the init process, the graphical interface, the mail program, and many other things have plug in replacements. You have a real choice. Most of these building blocks are themselves extremely configurable without touching any source code. However, if something does not quite meet your specific needs, you can take the source code to an existing part -- or start from scratch -- and write a component that will meet your needs, and it will plug in and work well with other system components!\n\nMany great scripting languages, such as Perl and Python, come standard with nearly every Open Source platform. You can write automation scripts in these languages and they'll run anywhere!\n\nAs mentioned in the Home User section, an Open Source operating system will allow you to reduce your per-unit cost by $50 to $300. This cost savings can be passed on to consumers or pocketed as profit.\n\nOf course, as prices fall, demand goes up. Since the operating system price is a large percentage of today's complete system price (as much as 30% in some cases), demand for computers could increase significantly.\n\nIt gives you incredible flexibility in the way you configure your desktop. As you know, Microsoft places severe limitations on how you can change the look and feel of the desktop you ship with your system, and limits what you can put on the desktop. Open Source operating systems, of course, have no such limitations. You can sell desktop icons on the systems you ship to anyone that will pay for them.\n\nYou have the freedom to configure your computers in any possible way. You can personalize your computers far more than you could with a proprietary system. Or you could ship turnkey systems that are ready for a certain task right out of the box."
    }
}