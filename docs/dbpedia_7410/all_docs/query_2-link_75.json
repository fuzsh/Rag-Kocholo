{
    "id": "dbpedia_7410_2",
    "rank": 75,
    "data": {
        "url": "https://en.wikipedia.org/wiki/ReactOS",
        "read_more_link": "",
        "language": "en",
        "title": "Wikipedia",
        "top_image": "https://upload.wikimedia.org/wikipedia/commons/thumb/b/b7/ReactOS_logo.svg/1200px-ReactOS_logo.svg.png",
        "meta_img": "https://upload.wikimedia.org/wikipedia/commons/thumb/b/b7/ReactOS_logo.svg/1200px-ReactOS_logo.svg.png",
        "images": [
            "https://en.wikipedia.org/static/images/icons/wikipedia.png",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-en.svg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/b/b7/ReactOS_logo.svg/180px-ReactOS_logo.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/4/49/ReactOS_0.4.14_desktop_screenshot.png/300px-ReactOS_0.4.14_desktop_screenshot.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/OOjs_UI_icon_edit-ltr-progressive.svg/10px-OOjs_UI_icon_edit-ltr-progressive.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/ReactOS_0.4.14_Firefox_48_screenshot.png/220px-ReactOS_0.4.14_Firefox_48_screenshot.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5b/Alksnis-Bragin.jpg/220px-Alksnis-Bragin.jpg",
            "https://upload.wikimedia.org/wikipedia/en/thumb/f/f2/Edit-clear.svg/40px-Edit-clear.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/1/1c/Wiki_letter_w_cropped.svg/20px-Wiki_letter_w_cropped.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/e/ed/ReactOS_0.4.14_start_menu_and_explorer_screenshot.png/220px-ReactOS_0.4.14_start_menu_and_explorer_screenshot.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/7/71/ReactOS_0.4.14_explorer_and_winver_screenshot.png/220px-ReactOS_0.4.14_explorer_and_winver_screenshot.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a1/ReactOS_0.4.14_applications_screenshot.png/220px-ReactOS_0.4.14_applications_screenshot.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/6/64/ReactOS_0.4.14_device_manager_screenshot.png/220px-ReactOS_0.4.14_device_manager_screenshot.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/a/aa/ReactOS-0.4.13_reg_command_667x434.png/220px-ReactOS-0.4.13_reg_command_667x434.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Wine_on_ReactOS.svg/300px-Wine_on_ReactOS.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Free_and_open-source_software_logo_%282009%29.svg/28px-Free_and_open-source_software_logo_%282009%29.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/30px-Commons-logo.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/OOjs_UI_icon_edit-ltr-progressive.svg/10px-OOjs_UI_icon_edit-ltr-progressive.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/e/e2/Symbol_portal_class.svg/16px-Symbol_portal_class.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/9/96/Symbol_category_class.svg/16px-Symbol_category_class.svg.png",
            "https://login.wikimedia.org/wiki/Special:CentralAutoLogin/start?type=1x1",
            "https://en.wikipedia.org/static/images/footer/wikimedia-button.svg",
            "https://en.wikipedia.org/static/images/footer/poweredby_mediawiki.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Contributors to Wikimedia projects"
        ],
        "publish_date": "2003-11-09T03:08:34+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/static/apple-touch/wikipedia.png",
        "meta_site_name": "",
        "canonical_link": "https://en.wikipedia.org/wiki/ReactOS",
        "text": "Free incomplete Windows NT-like operating system\n\nNot to be confused with React (JavaScript library).\n\nOperating system\n\nReactOSDeveloperCommunity contributors\n\nThe ReactOS developersWritten inC, C++[1]OS familyWindows NT-likeWorking stateAlphaSource modelOpen-source[2]Initial release(partial) 1998; 26 years ago ( )Latest preview0.4.14[3] / 16 December 2021; 2 years ago ( )[3]RepositoryMarketing targetPersonal computingUpdate methodCD-ROM ISO image, QEMU image, VirtualBox image, VMware image, or source code[4]PlatformsIA-32, x86-64Kernel typeHybrid (designed to be compatible with Windows NT family)Influenced byMicrosoft WindowsDefault\n\nuser interfaceGraphical (ReactOS Explorer)LicenseGPL-2.0-or-later[a]Official websitewww .reactos .org\n\nReactOS is a free and open-source operating system for i586/amd64 personal computers intended to be binary-compatible with computer programs and device drivers developed for Windows Server 2003 and later versions of Microsoft Windows.[5][6] ReactOS has been noted as a potential open-source drop-in replacement for Windows[7][8][9] and for its information on undocumented Windows APIs.[10]\n\nReactOS has been in development since 1996. As of April 2024 , it is still considered feature-incomplete alpha software, and is therefore recommended by the developers only for evaluation and testing purposes.[11][12] However, many Windows applications are working, such as Adobe Reader 9.3, GIMP 2.6, and LibreOffice 5.4.[13][14]\n\nReactOS is primarily written in C, with some elements, such as ReactOS File Explorer, written in C++. The project partially implements Windows API functionality and has been ported to the AMD64 processor architecture.[15] ReactOS, as part of the FOSS ecosystem, re-uses and collaborates with many other FOSS projects,[16][17] most notably the Wine project, which presents a Windows compatibility layer for Unix-like operating systems.\n\nHistory\n\n[edit]\n\nEarly development\n\n[edit]\n\nAround 1996, a group of free and open-source software developers started a project called FreeWin95 to implement a clone of Windows 95. The project stalled in discussions on the design of the system.\n\nWhile FreeWin95 had started out with high expectations, there still had not been any builds released to the public by the end of 1997. As a result, the project members, led by then coordinator Jason Filby, joined together to revive the project. The revived project sought to duplicate the functionality of Windows NT.[18] In creating the new project, a new name, ReactOS, was chosen. The project began development in February 1998 by creating the basis for a new NT kernel and basic drivers.[19][20] The name ReactOS was coined during an IRC chat. While the term \"OS\" stood for operating system, the term \"react\" referred to the group's dissatisfaction with – and reaction to – Microsoft's monopolistic position.[8]\n\nIn 2002, the ReactOS Foundation was established in Moscow with Maxim Osowski and Aleksey Bragin as executive officers and Vladimir Bragin, Saveliy Tretiakov and Alexey Ivanov on the board of directors.[21] In 2015, the foundation was liquidated.\n\nInternal audit\n\n[edit]\n\nIn order to avoid copyright prosecution, ReactOS had to be expressly completely distinct and non-derivative from Windows, a goal that needed very careful work.[23] A claim was made on 17 January 2006 by developer Hartmut Birr on the ReactOS developers mailing list (ros-dev) that ReactOS contained code derived from disassembling Microsoft Windows.[24] The code that Birr disputed involved the function BadStack in syscall.S,[25] as well as other unspecified items.[26] Comparing this function to disassembled binaries from Windows XP, Birr argued that the BadStack function was simply copy-pasted from Windows XP, given that they were identical. Alex Ionescu, the author of the code, asserted that while the Windows XP binary in question was indeed disassembled and studied, the code was not merely copy-pasted, but reimplemented; the reason why the functions were identical, Ionescu claimed, was because there was only one possible way to implement the function.[27]\n\nOn 27 January 2006, the developers responsible for maintaining the ReactOS code repository disabled access after a meeting was held to discuss the allegations. When approached by NewsForge, Microsoft declined to comment on the incident. Since ReactOS is a free and open-source software development project, the claim triggered a negative reaction from the free software community; in particular, Wine barred several inactive developers from providing contributions[citation needed] and formal high level cooperation between the two projects remained difficult as of 2006 .[28]\n\nIn a statement on its website, ReactOS cited differing legal definitions of what constitutes clean-room reverse engineering as a cause for the conflict.[29] To avoid potential litigation, companies sometimes enact a policy where reimplementation based on disassembled code must be written by someone other than the person having disassembled and examined the original code.[30][31] ReactOS clarified its Intellectual Property Policy Statement requirements on clean room reverse engineering to avoid potential infringement of United States law. An internal source code audit was conducted to ensure that only clean room reverse engineering was used, and all developers were made to sign an agreement committing them to comply with the project's policies on reverse engineering.[28] Contributors to its development were not affected by these events and all access to the software development tools was restored shortly afterward. In September 2007, with the audit nearing completion, the audit status was removed from the ReactOS homepage. Though the audit was completed, specific details were not made public, as it was only an internal effort to ensure compliance with the project's own policies.[32]\n\nAlso, the 2004 leaked Windows source code[33] was not seen as legal risk for ReactOS, as the trade secret was considered indefensible in court due to broad spread.[34]\n\nAxel Rietschin, who is a kernel engineer at Microsoft, claimed that he recognized some specific bits in the ReactOS kernel that are unlikely to result from a clean room reimplementation. He suggests that the project took source code from the Windows Research Kernel, which was licensed to universities and has been leaked multiple times. Internal data structures and variable names have the exact same name in both ReactOS and the research kernel.[35]\n\nGoogle Summer of Code participation\n\n[edit]\n\nStarting in 2006,[36] the ReactOS project participated in several Google Summers of Code. For example, in the GSoC 2011,[37] ReactOS mentored a student project which integrated lwIP into the network stack.[38]\n\nLobbying for support in Russia\n\n[edit]\n\nBetween 2007 and 2015, Russian ReactOS contributors representing the ReactOS Foundation made efforts at lobbying the Russian federal government. As of April 2019 , these efforts have not yielded government support for ReactOS, and the Russia-based ReactOS Foundation has been dissolved since November 2015.\n\nIn 2007, then State Duma member and chairman of Russian Center of Free Technologies, Viktor Alksnis met with project coordinator Aleksey Bragin, who gave a presentation and demonstration of the project, showing ReactOS running with Total Commander and Mozilla Firefox.[39]\n\nIn 2011, a demonstration was given to then president Dmitry Medvedev during a visit to a high school in Verhnerusskoe, Stavropol, attended by one of the development team members.[40]\n\nOn 31 July 2012, Vladimir Putin was also given a demonstration during his visit as President of Russia to Seliger Youth Forum, attended by Marat Karatov, one of the development team members.[41]\n\nOn 1 April 2015, Bragin attended an expert meeting of the Russian Ministry of Communications on reducing Russia's dependency from proprietary software imports. Its minutes name the \"creation of an open source operating system based on ReactOS for PCs, laptops and other mobile devices\", as well as the \"creation of an open source operating system for servers based on ReactOS\",[42][43][44][45] placing it second among three named proposals.\n\nFunding campaigns\n\n[edit]\n\nOn 1 May 2012, a €30,000 funding campaign was started to finance additional development projects.[46][47] At the end of the year, approximately 50% of the funding goal was achieved and it was decided to continue the funding campaign without deadlines.[48] The money went to ReactOS Deutschland e. V.. As the tax law in Germany for this form of a registered voluntary association (Eingetragener Verein) makes it problematic to pay developers directly;[49] indirect possibilities like stipends were evaluated.\n\nThorium Core Cloud Desktop project\n\n[edit]\n\nWhen ReactOS was awarded as Project of the Month on SourceForge on June 2013, a crowdfunding campaign on Kickstarter was announced in an interview with the project's coordinator, Aleksey Bragin.[50] On 23 December 2013 the announced project was revealed as a Kickstarter campaign with the goal of US$120,000 was started.[51][52] The Thorium Core Cloud Desktop dubbed cloud computing service would use ReactOS as core and could allow the use of Windows compatible applications from mobile devices (like smartphones, tablets), workstations, or any other connected device. On 21 February 2014, fundraising ended short of the target amount, with $48,965 of $120,000 raised, resulting in no transferred money.[53]\n\nReactOS Community Edition\n\n[edit]\n\nIn April 2014, the ReactOS project announced an Indiegogo campaign to launch ReactOS Community Edition, a version of ReactOS based on the 0.4 release. The flexible funding campaign had a goal of $50,000 with additional stretch goals beyond that.[54] Development of ReactOS Community Edition would be community-centric, with ReactOS users voting and funding to decide which software and hardware drivers the project will aim to support.[55][56] On 1 June 2014, the flexible crowdfunding campaign on Indiegogo ended, raising $25,141 for the development of the community edition,[57][58] and the voting process to support hardware and software was started shortly thereafter.[59]\n\nReactOS Hackfest\n\n[edit]\n\nThe ReactOS project organized a hackfest from 7 to 12 August 2015, in the German city of Aachen.[60][61][62] The Hackfest resulted in many features being added to ReactOS.\n\nThe second hackfest was organized by the ReactOS project from 14 to 18 August 2017, in the German city of Cologne.[63]\n\nThe third and fourth hackfests were organized by the ReactOS project from 16 to 21 August 2018 and from 15 to 20 August 2019 in Berlin respectively.[64][65]\n\nRelease history\n\n[edit]\n\nSystem version Release date Release information Old version, no longer maintained: 0.3.0 2006-08-27[66] First version to officially support networking Old version, no longer maintained: 0.3.1 2007-03-10[67] Program manager included, start of kernel rewrite Old version, no longer maintained: 0.3.2 skipped Branch created but never released[68] Old version, no longer maintained: 0.3.3 2007-09-12[68] Kernel and win32k improvements Old version, no longer maintained: 0.3.4 2008-01-22[69] Registry support rewrite, remote desktop client and Plug and Play Old version, no longer maintained: 0.3.5 2008-06-30[70] Bug fixes only Old version, no longer maintained: 0.3.6 2008-08-06[71] RTL support Old version, no longer maintained: 0.3.7 2008-11-04[72] Improved x86-64; MSVC, new stacks Old version, no longer maintained: 0.3.8 2009-02-04 Introduced PSEH and multi-partition HDD support in live CD[citation needed] Old version, no longer maintained: 0.3.9 2009-04-26[73] 24 MB minimum RAM, faster hyperspace mapping, initial sound support Old version, no longer maintained: 0.3.10 2009-07-05[74] Initial SATA support, USB keyboard/mouse support, Paint clone, initial MSVC.[75][76] Old version, no longer maintained: 0.3.11 2009-12-16[77] Kdcom rewrite; Chinese/Korean fonts; compatibility updates; sound system improvements Old version, no longer maintained: 0.3.12 2010-10-20[78] Trap handler rewrite; timer and message handling rewrite; NMI support; SxS support; partial EMS support[79] Old version, no longer maintained: 0.3.13 2011-03-22[80] Heap manager rewrite, improved SATA support, fixed graphics issues[81] Old version, no longer maintained: 0.3.14 2012-02-07[82] ACPI enabled by default, WiFi support (unencrypted and WEP), theme support, new TCP/IP driver (LwIP), MSVC compatibility, Scatter/Gather DMA operations supported, shell32 rewrite[83] Old version, no longer maintained: 0.3.15 2013-05-30[84] USB support for mice, keyboard, and storage devices; rewritten session management; AHCI support with updated UniATA driver; alternate ReactOS Memory Management Module has taken over all memory management responsibilities except for sections; preliminary support for debugging ReactOS components using WinDbg; improvements based on results from the AutoHotkey application functionality test suite; Bugfixes based on running Driver Verifier on several bundled drivers[85] Old version, no longer maintained: 0.3.16[86] 2014-02-06[87] CSRSS rewrite; theme support improved; network card driver for the RTL8139, allowing ReactOS to support newer versions of QEMU out of the box[88] Old version, no longer maintained: 0.3.17[89] 2014-11-05[90] Inclusion of an NTVDM; font improvements;[91][92] bug fixes[93] Old version, no longer maintained: 0.4.0[94] 2016-02-16[95] Improved USB support, new file explorer shell and theming, improved VirtualBox and Virtual PC support, ext2 read/write support, NTFS read support and improved networking support Old version, no longer maintained: 0.4.1[96] 2016-05-17[97] Improved Activation Context, Btrfs support, improved Shell, USB bug fixes, support for Virtual Machine Shared Folders Old version, no longer maintained: 0.4.2 2016-08-16[98] Improved Btrfs and extended file system support, ReiserFS and UFS/FFS, introduced .NET Framework 2.0 and 4.0 support, Shell fixes and improvements Old version, no longer maintained: 0.4.3 2016-11-16[99] New Winsock library, initial sections support, usual bug fixes Old version, no longer maintained: 0.4.4 2017-02-16[100] Initial print stack support, minor font fixes, usual improvements and bug fixes Old version, no longer maintained: 0.4.5 2017-05-18[101] Improved rendering of fonts and font metrics, major fixes in kernel and drivers, Microsoft Office 2010 tested as functioning Old version, no longer maintained: 0.4.6 2017-09-01[102] Several fixes for dual-boot issues, improved theming support, NFS driver added, several kernel and filesystem fixes Old version, no longer maintained: 0.4.7 2017-12-06[103] Improved version of the applications manager RAPPS, implementation of the \"Quick-Launch\" toolbar in the explorer; various bug fixes in the filesystem drivers, improvements in the RDBSS/RXCE and NFS support. Older version, yet still maintained: 0.4.8 2018-04-14[104] Balloon notifications, notification tray, shell autocompletion, a new NTFS driver, crash dump reporting and experimental support for NT6+ software. Older version, yet still maintained: 0.4.9 2018-07-23[105] ReactOS is (again) self-hosting. Older version, yet still maintained: 0.4.10 2018-11-06[106] Supports BTRFS booting. Older version, yet still maintained: 0.4.11 2019-03-04[107] Drivers for battery management (its icon is located in the taskbar, in the bottom right of the screen, next to the clock). Support for updating an existing ReactOS installation. Improved SATA support. Older version, yet still maintained: 0.4.12 2019-09-23[108] Kernel improvements, window-snapping feature, font improvements, Intel e1000 NIC driver, user-mode DLLs, new themes. Older version, yet still maintained: 0.4.13 2020-04-09[109] New USB stack, FAT driver from FreeLoader optimized, new software introduced: Accessibility Utility Manager. Current stable version: 0.4.14 2021-12-16[3] \"Send To\" feature and Shell improvements, NEC PC-9800 boot support, ICMP improvements, Kernel improvements, NetKVM VirtIO bringup, miscellaneous changes & improvements Future release: 0.4.15[110] — Support for x64 and UEFI, combines live CD and boot CD into a single GUI setup Future release: 0.5.0[111] — Support for reading and writing the NTFS filesystem, support for the Windows Driver Model (including video card support), improvements to the printing subsystem and the DirectX Core.\n\nLegend:\n\nOld version\n\nOlder version, still maintained\n\nLatest version\n\nLatest preview version\n\nFuture release\n\nFeatures\n\n[edit]\n\nPrograms\n\n[edit]\n\nReactOS Explorer (File Explorer)\n\nReactOS Applications Manager\n\nAccessories\n\nCalculator\n\nCommand Prompt\n\nNotepad\n\nPaint\n\nWordPad\n\nMagnifier\n\nOn-Screen Keyboard\n\nRemote Desktop Connection\n\nMultimedia Player (Media Player)\n\nSound Recorder\n\nVolume Control\n\nCharacter Map\n\nClipboard Viewer\n\nFontSub\n\nKeyboard Layout Switcher\n\nReactX Diagnostic (DxDiag)\n\nRegistry Editor\n\nSnapShot\n\nTask Manager\n\nAdministrative Tools\n\nDevice Manager\n\nEvent Viewer\n\nService Manager (Windows service)\n\nSystem Configuration (MSConfig)\n\nGames\n\nSolitaire (Microsoft Solitaire)\n\nSpider Solitaire (Microsoft Spider Solitaire)\n\nWineMine (Microsoft Minesweeper)\n\nCommands\n\n[edit]\n\nThe following is a non-exhaustive list of commands that are supported by the ReactOS Command Prompt.[112][113][114]\n\nDevelopment\n\n[edit]\n\nReactOS core development\n\n[edit]\n\nReactOS is primarily written in C, with some elements, such as ReactOS Explorer and the sound stack, written in C++. The project compiles using both MinGW and Microsoft Visual Studio, and contributes to the development of the build systems used through the submission of patches to its components.[118]\n\nThe developers aim to make the kernel and usermode application programming interface (API) more compatible with Windows NT version 5.2 (Windows Server 2003) and to add support for more applications and hardware, with plans to target newer versions of Windows as development matures.[119] DirectX support is undertaken through ReactX, an in-house implementation. 2D and OpenGL 3D hardware-accelerated rendering is done natively, while other drawing functionality such as Direct3D is redirected to OpenGL as a stopgap solution, mostly using Wine's code such as WineD3D.[15][120]\n\nThe development progress is influenced by the size of the development team and the level of experience among them. As an estimate of the effort required to implement Windows 7, Microsoft employed 1,000 or so developers, organized into 25 teams, with each team averaging 40 developers.[121] As of 2 September 2011 , in the ReactOS entry in Ohloh, the page followed through the \"Very large, active development team\" link lists 33 developers who have contributed over a 12-month period and a cumulative total of 104 present and former users who have contributed code to the project via Apache Subversion since its inception.[122] In his presentation at Hackmeeting 2009 in Milan, ReactOS developer Michele C. noted that most of the developers learn about Windows architecture while working on ReactOS and have no prior knowledge.[123]\n\nWhile ReactOS targets mainly the x86/AMD64 PC platform,[124] an effort to port to the ARM architecture was at one point \"under way\",[15] while it did not produce much functionality and was abandoned[125] along with a port to PowerPC, that is no longer actively maintained.[11] Support for the Xbox and the NEC PC-9800, a variant IA-32 architecture, was added through the use of an architecture-specific HAL.[123][109][3] Improved 64-bit support for ReactOS is \"being worked on\", however, development seems to be going slowly.[126]\n\nCollaboration and reuse\n\n[edit]\n\nWhile ReactOS has the aim to build a Windows-compatible kernel as open-source software, much of the surrounding required functionality to create a complete OS is already available in the greater open-source ecosystem. When available and possible, ReactOS therefore builds on and collaborates with already existing open-source projects.[16] Conversely, projects like Wine,[17] and formerly Captive NTFS[127] and Longene re-use the open-source ReactOS code-base as well.[128]\n\nHardware driver stack\n\n[edit]\n\nOn the hardware driver side, for instance the UniATA project provides Serial ATA drivers for ReactOS.[12][129] The project has also experimented with using the FullFAT library in its rewrite of its FAT Installable File System.[130] ReactOS makes use of the USB stack from Haiku both as a reference and as a foundation for its USB support.[131][132] Mesa 3D provides OpenGL rendering.[12][118]\n\nNetworking\n\n[edit]\n\nReactOS's network stack is built on the TCP portion of OSKit's port of the network stack in FreeBSD, along with an internally developed implementation for packet-oriented protocols like IP.[133] Later, lwIP was integrated into the ReactOS network stack.[38]\n\nWine cooperation\n\n[edit]\n\nThe ReactOS and the Wine projects share the goal to run binary Windows software natively and can therefore share many dependencies and development.[17][134] ReactOS uses portions of the Wine project so that it can benefit from Wine's progress in implementing the Win32 API.[134] While Wine's NTDLL, USER32, KERNEL32, GDI32, and ADVAPI32 components cannot be used directly by ReactOS due to architectural differences, code snippets of them and other parts can be shared between both projects. The kernel is developed by ReactOS separately as Wine relies here on existing Unix-like kernels.[118][123]\n\nSeparately, the experimental Arwinss branch was created as an alternative means to improve USER32 and GDI32 support through an alternative implementation of the Win32 API. Whereas ReactOS's original Win32 subsystem was closely modeled after its equivalent in Windows, Arwinss combines the architecture of that subsystem with the corresponding implementation in Wine. To this end, Arwinss uses Wine's GDI32 and USER32 libraries with few changes to take fuller advantage of Wine's existing software compatibility. Arwinss also allows the user to optionally use a remote X server instead of a local display.[135]\n\nOther\n\n[edit]\n\nThe Tango Desktop Project initiative provides open-source design guidelines and resources (as icons) for applications on desktop environments. FreeType is an open-source software development library, used to render text on to bitmaps and provides support for other font-related operations.[12] The KernelEx project is a Windows-API extension and compatibility layer project, which provides open-source implementations of some Windows-APIs.[136] Other contributing projects are MinGW, SYSLINUX, adns, ICU, GraphApp, Ext2, GNU FreeFont, DejaVu fonts, and Liberation fonts.[137][138][139]\n\nForks\n\n[edit]\n\nForks based on ReactOS exist:\n\nEkush OS (2004)[140][141][142]\n\nReception\n\n[edit]\n\nVarious people have acknowledged ReactOS and the implications of having a viable open-source drop-in replacement for Windows.[8] A 2004 article and interview of the German weekly magazine Der Spiegel describes ReactOS as directed at Windows users who want to renounce use of proprietary commercial software without having to switch to Linux.[8] DistroWatch, a Linux distribution's monitoring Web site, also lists ReactOS and describes it as \"a free and open-source operating system based on the best design principles found in the Windows NT architecture.\"[143]\n\nIn his column for Free Software Magazine, David Sugar noted in 2006 that ReactOS would allow the use of applications depending on older versions of Windows whose APIs have been deprecated. He also recognized its potential to expand the total deployed base of free software, and as a resource for developers wanting to know undocumented Windows APIs in the course of writing portable applications.[10] PC Magazine columnist John C. Dvorak remarked in 2008 that the Windows NT architecture had remained largely unchanged, making it an ideal candidate for cloning, and believed that ReactOS could be \"a bigger threat than Linux to Microsoft's dominance\".[9] In response to Dvorak's column, ZDNet technology journalist Dana Blankenhorn noted in 2008 that a lack of corporate sponsors and partners had rendered the project harmless to Microsoft.[144][145] Echoing this, Thom Holwerda of OSNews in 2009 categorized ReactOS under a family of hobby operating systems maintained only by small groups of developers working in their spare time, lacking the financial support of more mainstream operating systems and the legacy of formerly mainstream ones such as RISC OS.[146]\n\nIn October 2015, a Network World review of ReactOS v0.3.17 noted \"It's just like running Windows 2000\" and praised the application package manager, a feature the original Windows is missing.[147]\n\nJesse Smith from DistroWatch Weekly reviewed ReactOS v0.4.9, and noted that ReactOS \"ultimately had a similar problem: limited hardware support\" and is not yet a stable operating system.[148]\n\nAwards\n\n[edit]\n\nThe ReactOS Project won on the annual Seliger Youth Forum \"The Best Presentation\" award with 100,000 Russian rubles ($2700) in 2011, attended by Alexander Rechitskiy, one of the development team members.[149]\n\nReactOS was a featured project on SourceForge for the weeks beginning on 27 February 2012, 25 April 2013,[150] and several others. It was Project of the Month on SourceForge for June 2013[151] and February 2019.[152]\n\nSee also\n\n[edit]\n\nFree and open-source software portal\n\nBinary-code compatibility\n\ncoLinux, a project allowing Microsoft Windows and the Linux kernel to run simultaneously in parallel on the same machine\n\nFreeDOS, a clone of MS-DOS\n\neComStation and ArcaOS, two independent proprietary continuations of OS/2 (source code licensed from IBM), which IBM co-created with Microsoft and shares some design elements with MS-DOS and Windows\n\nHaiku, a clone of BeOS\n\nLongene, a hybrid operating system kernel intended to be binary-compatible with both the Microsoft Windows and Linux ecosystems\n\nNDISwrapper, a re-creation of Windows NT kernel parts inside the Linux Kernel to allow the use of Windows drivers in Linux\n\nWine, a compatibility layer that runs Microsoft Windows applications on Unix-like operating systems\n\nList of alternative shells for Windows\n\nTimelines of: Intel / Microsoft / Microsoft Windows / other operating systems (List)\n\nComparison of operating systems\n\nNotes\n\n[edit]\n\nReferences\n\n[edit]"
    }
}