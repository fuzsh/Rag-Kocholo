{
    "id": "dbpedia_5031_1",
    "rank": 24,
    "data": {
        "url": "https://www.mediawiki.org/wiki/API:Main_page",
        "read_more_link": "",
        "language": "en",
        "title": "API:Main page",
        "top_image": "https://www.mediawiki.org/static/favicon/mediawiki.ico",
        "meta_img": "https://www.mediawiki.org/static/favicon/mediawiki.ico",
        "images": [
            "https://www.mediawiki.org/static/images/icons/mediawikiwiki.svg",
            "https://www.mediawiki.org/static/images/mobile/copyright/mediawikiwiki-wordmark.svg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f6/API_-_The_Noun_Project.svg/30px-API_-_The_Noun_Project.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/0/00/Oxygen480-categories-preferences-system.svg/20px-Oxygen480-categories-preferences-system.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c6/MediaWiki-2020-small-icon.svg/18px-MediaWiki-2020-small-icon.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c6/MediaWiki-2020-small-icon.svg/18px-MediaWiki-2020-small-icon.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/8/81/Wikimedia-logo.svg/18px-Wikimedia-logo.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/8/84/Wikimedia_Enterprise_squirrel.svg/18px-Wikimedia_Enterprise_squirrel.svg.png",
            "https://login.wikimedia.org/wiki/Special:CentralAutoLogin/start?type=1x1",
            "https://www.mediawiki.org/static/images/footer/wikimedia-button.svg",
            "https://www.mediawiki.org/static/images/footer/poweredby_mediawiki.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/static/apple-touch/mediawiki.png",
        "meta_site_name": "MediaWiki",
        "canonical_link": "https://www.mediawiki.org/wiki/API:Main_page",
        "text": "action\n\nWhich action to perform.\n\nabusefiltercheckmatch\n\nCheck to see if an AbuseFilter matches a set of variables, an edit, or a logged AbuseFilter event.\n\nabusefilterchecksyntax\n\nCheck syntax of an AbuseFilter filter.\n\nabusefilterevalexpression\n\nEvaluates an AbuseFilter expression.\n\nabusefilterunblockautopromote\n\nUnblocks a user from receiving autopromotions due to an abusefilter consequence.\n\nabuselogprivatedetails\n\nView private details of an AbuseLog entry.\n\nacquiretempusername\n\nAcquire a temporary user username and stash it in the current session, if temp account creation is enabled and the current user is logged out. If a name has already been stashed, returns the same name.\n\naggregategroups\n\nManage aggregate message groups.\n\nantispoof\n\nCheck a username against AntiSpoof's normalisation checks.\n\nblock\n\nBlock a user.\n\ncentralauthtoken\n\nFetch a centralauthtoken for making an authenticated request to an attached wiki.\n\ncentralnoticecdncacheupdatebanner\n\nRequest the purge of banner content stored in the CDN (front-end) cache for anonymous users, for the requested banner and language\n\ncentralnoticechoicedata\n\nGet data needed to choose a banner for a given project and language\n\ncentralnoticequerycampaign\n\nGet all configuration settings for a campaign.\n\nchangeauthenticationdata\n\nChange authentication data for the current user.\n\nchangecontentmodel\n\nChange the content model of a page\n\nchecktoken\n\nCheck the validity of a token from action=query&meta=tokens.\n\ncirrus-config-dump\n\nDump of CirrusSearch configuration.\n\ncirrus-mapping-dump\n\nDump of CirrusSearch mapping for this wiki.\n\ncirrus-profiles-dump\n\nDump of CirrusSearch profiles for this wiki.\n\ncirrus-settings-dump\n\nDump of CirrusSearch settings for this wiki.\n\nclearhasmsg\n\nClears the hasmsg flag for the current user.\n\nclientlogin\n\nLog in to the wiki using the interactive flow.\n\ncompare\n\nGet the difference between two pages.\n\ncreateaccount\n\nCreate a new user account.\n\ncreatelocalaccount\n\nForcibly create a local account. The central account must exist.\n\ndelete\n\nDelete a page.\n\ndeleteglobalaccount\n\nDelete a global user.\n\ndiscussiontoolsedit\n\nPost a message on a discussion page.\n\ndiscussiontoolsfindcomment\n\nFind a comment by its ID or name.\n\ndiscussiontoolsgetsubscriptions\n\nGet the subscription statuses of given topics.\n\ndiscussiontoolssubscribe\n\nSubscribe (or unsubscribe) to receive notifications about a topic.\n\ndiscussiontoolsthank\n\nSend a public thank-you notification for a comment.\n\nechocreateevent\n\nManually trigger a notification to a user\n\nechomarkread\n\nMark notifications as read for the current user.\n\nechomarkseen\n\nMark notifications as seen for the current user.\n\nechomute\n\nMute or unmute notifications from certain users or pages.\n\nedit\n\nCreate and edit pages.\n\neditmassmessagelist\n\nEdit a mass message delivery list.\n\nemailuser\n\nEmail a user.\n\nexpandtemplates\n\nExpands all templates within wikitext.\n\nfeaturedfeed\n\nReturns a featured content feed.\n\nfeedcontributions\n\nReturns a user's contributions feed.\n\nfeedrecentchanges\n\nReturns a recent changes feed.\n\nfeedthreads\n\nReturn a feed of discussion threads.\n\nfeedwatchlist\n\nReturns a watchlist feed.\n\nfilerevert\n\nRevert a file to an old version.\n\nflow\n\nAllows actions to be taken on Structured Discussions pages.\n\nflow-parsoid-utils\n\nConvert text between wikitext and HTML.\n\nflowthank\n\nSend a public thank-you notification for a Flow comment.\n\nglobalblock\n\nGlobally block or unblock a user.\n\nglobalpreferenceoverrides\n\nChange local overrides for global preferences for the current user.\n\nglobalpreferences\n\nChange global preferences of the current user.\n\nglobaluserrights\n\nAdd/remove a user to/from global groups.\n\ngroupreview\n\nSet message group workflow states.\n\nhelp\n\nDisplay help for the specified modules.\n\nimagerotate\n\nThis module has been disabled.\n\nimport\n\nImport a page from another wiki, or from an XML file.\n\njsonconfig\n\nAllows direct access to JsonConfig subsystem.\n\nlanguagesearch\n\nSearch for language names in any script.\n\nlinkaccount\n\nLink an account from a third-party provider to the current user.\n\nlogin\n\nLog in and get authentication cookies.\n\nlogout\n\nLog out and clear session data.\n\nmanagetags\n\nPerform management tasks relating to change tags.\n\nmarkfortranslation\n\nMark a page for translation\n\nmassmessage\n\nSend a message to a list of pages.\n\nmergehistory\n\nMerge page histories.\n\nmove\n\nMove a page.\n\nnewslettersubscribe\n\nSubscribe to or unsubscribe from a newsletter.\n\nopensearch\n\nSearch the wiki using the OpenSearch protocol.\n\noptions\n\nChange preferences of the current user.\n\nparaminfo\n\nObtain information about API modules.\n\nparse\n\nParses content and returns parser output.\n\npatrol\n\nPatrol a page or revision.\n\nprotect\n\nChange the protection level of a page.\n\npurge\n\nPurge the cache for the given titles.\n\nquery\n\nFetch data from and about MediaWiki.\n\nremoveauthenticationdata\n\nRemove authentication data for the current user.\n\nresetpassword\n\nSend a password reset email to a user.\n\nrevisiondelete\n\nDelete and undelete revisions.\n\nrollback\n\nUndo the last edit to the page.\n\nrsd\n\nExport an RSD (Really Simple Discovery) schema.\n\nsearchtranslations\n\nSearch translations.\n\nsetglobalaccountstatus\n\nHide or lock (or unhide or unlock) a global user account.\n\nsetnotificationtimestamp\n\nUpdate the notification timestamp for watched pages.\n\nsetpagelanguage\n\nChange the language of a page.\n\nshortenurl\n\nShorten a long URL into a shorter one.\n\nsitematrix\n\nGet Wikimedia sites list.\n\nspamblacklist\n\nValidate one or more URLs against the spam block list.\n\nstreamconfigs\n\nExposes event stream config. Returns only format=json with formatversion=2.\n\nstrikevote\n\nAllows admins to strike or unstrike a vote.\n\ntag\n\nAdd or remove change tags from individual revisions or log entries.\n\ntemplatedata\n\nFetch data stored by the TemplateData extension.\n\nthank\n\nSend a thank-you notification to an editor.\n\nthreadaction\n\nAllows actions to be taken on threads and posts in threaded discussions.\n\ntitleblacklist\n\nValidate a page title, filename, or username against the TitleBlacklist.\n\ntorblock\n\nCheck if an IP address is blocked as a Tor exit node.\n\ntranscodereset\n\nUsers with the 'transcode-reset' right can reset and re-run a transcode job.\n\ntranslationaids\n\nQuery all translations aids.\n\ntranslationreview\n\nMark translations reviewed.\n\ntranslationstats\n\nFetch translation statistics\n\nttmserver\n\nQuery suggestions from translation memories.\n\nunblock\n\nUnblock a user.\n\nundelete\n\nUndelete revisions of a deleted page.\n\nunlinkaccount\n\nRemove a linked third-party account from the current user.\n\nupload\n\nUpload a file, or get the status of pending uploads.\n\nuserrights\n\nChange a user's group membership.\n\nvalidatepassword\n\nValidate a password against the wiki's password policies.\n\nwatch\n\nAdd or remove pages from the current user's watchlist.\n\nwebapp-manifest\n\nReturns a webapp manifest.\n\nwebauthn\n\nAPI Module to communicate between server and client during registration/authentication process.\n\nwikilove\n\nGive WikiLove to another user.\n\nbouncehandler\n\nInternal. Receive a bounce email and process it to handle the failing recipient.\n\ncategorytree\n\nInternal. Internal module for the CategoryTree extension.\n\ncirrus-check-sanity\n\nInternal. Reports on the correctness of a range of page ids in the search index\n\ncollection\n\nInternal. API module for performing various operations on a wiki user's collection.\n\ncspreport\n\nInternal. Used by browsers to report violations of the Content Security Policy. This module should never be used, except when used automatically by a CSP compliant web browser.\n\ndiscussiontoolscompare\n\nInternal. Get information about comment changes between two page revisions.\n\ndiscussiontoolspageinfo\n\nInternal. Returns metadata required to initialize the discussion tools.\n\ndiscussiontoolspreview\n\nInternal. Preview a message on a discussion page.\n\neditcheckreferenceurl\n\nInternal. Check the status of a URL for use as a reference.\n\nfancycaptchareload\n\nInternal. Get a new FancyCaptcha.\n\njsondata\n\nInternal. Retrieve localized JSON data.\n\nmanagegroupsynchronizationcache\n\nInternal. Manage group synchronization cache.\n\nmanagemessagegroups\n\nInternal. Add a message as a rename of an existing message or a new message in the group during imports\n\nmessagegroupsubscription\n\nInternal. Message group subscription related operations\n\noathvalidate\n\nInternal. Validate a two-factor authentication (OATH) token.\n\nparser-migration\n\nInternal. Parse a page with two different parser configurations.\n\nreadinglists\n\nInternal. Reading list write operations.\n\nsanitize-mapdata\n\nInternal. Performs data validation for Kartographer extension\n\nscribunto-console\n\nInternal. Internal module for servicing XHR requests from the Scribunto console.\n\nsecurepollauth\n\nInternal. Allows a remote wiki to authenticate users before granting access to vote in the election.\n\nstashedit\n\nInternal. Prepare an edit in shared cache.\n\ntimedtext\n\nInternal. Provides timed text content for usage by <track> elements\n\ntranslationcheck\n\nInternal. Validate translations.\n\ntranslationentitysearch\n\nInternal. Search for message groups and messages\n\nulslocalization\n\nInternal. Get the localization of ULS in the given language.\n\nulssetlang\n\nInternal. Update user's preferred interface language.\n\nvisualeditor\n\nInternal. Returns HTML5 for a page from the Parsoid service.\n\nvisualeditoredit\n\nInternal. Save an HTML5 page to MediaWiki (converted to wikitext via the Parsoid service).\n\nwikimediaeventsblockededit\n\nInternal. Log information about blocked edit attempts\n\nOne of the following values: abusefiltercheckmatch, abusefilterchecksyntax, abusefilterevalexpression, abusefilterunblockautopromote, abuselogprivatedetails, acquiretempusername, aggregategroups, antispoof, block, centralauthtoken, centralnoticecdncacheupdatebanner, centralnoticechoicedata, centralnoticequerycampaign, changeauthenticationdata, changecontentmodel, checktoken, cirrus-config-dump, cirrus-mapping-dump, cirrus-profiles-dump, cirrus-settings-dump, clearhasmsg, clientlogin, compare, createaccount, createlocalaccount, delete, deleteglobalaccount, discussiontoolsedit, discussiontoolsfindcomment, discussiontoolsgetsubscriptions, discussiontoolssubscribe, discussiontoolsthank, echocreateevent, echomarkread, echomarkseen, echomute, edit, editmassmessagelist, emailuser, expandtemplates, featuredfeed, feedcontributions, feedrecentchanges, feedthreads, feedwatchlist, filerevert, flow-parsoid-utils, flow, flowthank, globalblock, globalpreferenceoverrides, globalpreferences, globaluserrights, groupreview, help, imagerotate, import, jsonconfig, languagesearch, linkaccount, login, logout, managetags, markfortranslation, massmessage, mergehistory, move, newslettersubscribe, opensearch, options, paraminfo, parse, patrol, protect, purge, query, removeauthenticationdata, resetpassword, revisiondelete, rollback, rsd, searchtranslations, setglobalaccountstatus, setnotificationtimestamp, setpagelanguage, shortenurl, sitematrix, spamblacklist, streamconfigs, strikevote, tag, templatedata, thank, threadaction, titleblacklist, torblock, transcodereset, translationaids, translationreview, translationstats, ttmserver, unblock, undelete, unlinkaccount, upload, userrights, validatepassword, watch, webapp-manifest, webauthn, wikilove, bouncehandler, categorytree, cirrus-check-sanity, collection, cspreport, discussiontoolscompare, discussiontoolspageinfo, discussiontoolspreview, editcheckreferenceurl, fancycaptchareload, jsondata, managegroupsynchronizationcache, managemessagegroups, messagegroupsubscription, oathvalidate, parser-migration, readinglists, sanitize-mapdata, scribunto-console, securepollauth, stashedit, timedtext, translationcheck, translationentitysearch, ulslocalization, ulssetlang, visualeditor, visualeditoredit, wikimediaeventsblockededit\n\nDefault: help\n\nformat\n\nThe format of the output.\n\njson\n\nOutput data in JSON format.\n\njsonfm\n\nOutput data in JSON format (pretty-print in HTML).\n\nnone\n\nOutput nothing.\n\nphp\n\nOutput data in serialized PHP format.\n\nphpfm\n\nOutput data in serialized PHP format (pretty-print in HTML).\n\nrawfm\n\nOutput data, including debugging elements, in JSON format (pretty-print in HTML).\n\nxml\n\nOutput data in XML format.\n\nxmlfm\n\nOutput data in XML format (pretty-print in HTML).\n\nOne of the following values: json, jsonfm, none, php, phpfm, rawfm, xml, xmlfm\n\nDefault: jsonfm\n\nmaxlag\n\nMaximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.\n\nSee Manual: Maxlag parameter for more information.\n\nType: integer\n\nsmaxage\n\nSet the s-maxage HTTP cache control header to this many seconds. Errors are never cached.\n\nType: integer\n\nThe value must be no less than 0.\n\nDefault: 0\n\nmaxage\n\nSet the max-age HTTP cache control header to this many seconds. Errors are never cached.\n\nType: integer\n\nThe value must be no less than 0.\n\nDefault: 0\n\nassert\n\nVerify that the user is logged in (including possibly as a temporary user) if set to user, not logged in if set to anon, or has the bot user right if bot.\n\nOne of the following values: anon, bot, user\n\nassertuser\n\nVerify the current user is the named user.\n\nType: user, by any of username and Temporary user\n\nrequestid\n\nAny value given here will be included in the response. May be used to distinguish requests.\n\nservedby\n\nInclude the hostname that served the request in the results.\n\nType: boolean (details)\n\nInclude the current timestamp in the result.\n\nType: boolean (details)\n\nresponselanginfo\n\nInclude the languages used for uselang and errorlang in the result.\n\nType: boolean (details)\n\norigin\n\nWhen accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body).\n\nFor authenticated requests, this must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is allowed, the Access-Control-Allow-Origin and Access-Control-Allow-Credentials headers will be set.\n\nFor non-authenticated requests, specify the value *. This will cause the Access-Control-Allow-Origin header to be set, but Access-Control-Allow-Credentials will be false and all user-specific data will be restricted.\n\nuselang\n\nLanguage to use for message translations. action=query&meta=siteinfo&siprop=languages returns a list of language codes. You can specify user to use the current user's language preference or content to use this wiki's content language.\n\nDefault: user\n\nvariant\n\nVariant of the language. Only works if the base language supports variant conversion.\n\nerrorformat\n\nFormat to use for warning and error text output\n\nplaintext\n\nWikitext with HTML tags removed and entities replaced.\n\nwikitext\n\nUnparsed wikitext.\n\nhtml\n\nHTML\n\nraw\n\nMessage key and parameters.\n\nnone\n\nNo text output, only the error codes.\n\nbc\n\nFormat used prior to MediaWiki 1.29. errorlang and errorsuselocal are ignored.\n\nOne of the following values: bc, html, none, plaintext, raw, wikitext\n\nDefault: bc\n\nerrorlang\n\nLanguage to use for warnings and errors. action=query&meta=siteinfo&siprop=languages returns a list of language codes. Specify content to use this wiki's content language or uselang to use the same value as the uselang parameter.\n\nDefault: uselang\n\nerrorsuselocal\n\nIf given, error texts will use locally-customized messages from the MediaWiki namespace.\n\nType: boolean (details)\n\ncentralauthtoken\n\nWhen accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body)."
    }
}