{
    "id": "dbpedia_3296_3",
    "rank": 52,
    "data": {
        "url": "https://discourse.julialang.org/t/arrow-feather-and-parquet/28739/30",
        "read_more_link": "",
        "language": "en",
        "title": "Arrow, Feather, and Parquet",
        "top_image": "https://global.discourse-cdn.com/julialang/original/3X/4/d/4d76a1d8062ed9397f2f00f22abdd69926b51785.png",
        "meta_img": "https://global.discourse-cdn.com/julialang/original/3X/4/d/4d76a1d8062ed9397f2f00f22abdd69926b51785.png",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "parquet",
            "arrow"
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2019-09-21T18:32:20+00:00",
        "summary": "",
        "meta_description": "Continuing the discussion from JDF - an experimental DataFrame serialization format is ready for beta testing: \n@ExpandingMan Thank you very much! That’s a great summary and it helps me getting idea of reliability level &hellip;",
        "meta_lang": "en",
        "meta_favicon": "https://global.discourse-cdn.com/julialang/optimized/3X/5/2/52e282d46eadd4022c458057bb740061d8efad72_2_32x32.png",
        "meta_site_name": "Julia Programming Language",
        "canonical_link": "https://discourse.julialang.org/t/arrow-feather-and-parquet/28739?page=2",
        "text": "We have some facilities for serializing and memory-mapping ndarrays using common memory abstractions and metadata serialization in the Arrow project but generic storage or scientific ndarray data hasn’t been a central focus of the community relative to the tabular data problem."
    }
}