{
    "id": "dbpedia_3296_1",
    "rank": 71,
    "data": {
        "url": "https://stackoverflow.com/questions/43214978/how-to-display-custom-values-on-a-bar-plot",
        "read_more_link": "",
        "language": "en",
        "title": "How to display custom values on a bar plot",
        "top_image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "meta_img": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "images": [
            "https://i.sstatic.net/0GmTW.png",
            "https://i.sstatic.net/LGily.png",
            "https://i.sstatic.net/RIZKi.png?s=64",
            "https://www.gravatar.com/avatar/0701d1773bd72f0f11f5183e99acb38f?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://i.sstatic.net/Pjmcy.png",
            "https://i.sstatic.net/C4dry.png",
            "https://i.sstatic.net/5ourr.png",
            "https://i.sstatic.net/hWjiC.png",
            "https://www.gravatar.com/avatar/a2d2a4290791fc4ab9c9e35463ff8761?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://i.sstatic.net/RIZKi.png?s=64",
            "https://lh4.googleusercontent.com/-SaZO9PvyA70/AAAAAAAAAAI/AAAAAAAAUKY/_NaMNqyJ0w4/photo.jpg?sz=64",
            "https://i.sstatic.net/104c8.png",
            "https://i.sstatic.net/BQBjd.png",
            "https://i.sstatic.net/UBA7j.jpg?s=64",
            "https://i.sstatic.net/wsHAV.png?s=64",
            "https://i.sstatic.net/3beNY.png",
            "https://i.sstatic.net/YlJ3o.jpg?s=64",
            "https://i.sstatic.net/RIZKi.png?s=64",
            "https://www.gravatar.com/avatar/3a5d465d6974d75e6e2e64c0af54c780?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://i.sstatic.net/oA0m3.jpg?s=64",
            "https://i.sstatic.net/RIZKi.png?s=64",
            "https://i.sstatic.net/Ris3Z.png?s=64",
            "https://i.sstatic.net/RIZKi.png?s=64",
            "https://www.gravatar.com/avatar/2c48c1e199be4d42629ff035ce3d2ae8?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://stackoverflow.com/posts/43214978/ivc/0329?prg=2cf49130-a3a3-492d-a0f2-7995af4a5912"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2017-04-04T18:31:00",
        "summary": "",
        "meta_description": "I'm looking to see how to do two things in Seaborn with using a bar chart to display values that are in the dataframe, but not in the graph.\n\nI'm looking to display the values of one field in a dat...",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/stackoverflow/Img/favicon.ico?v=ec617d715196",
        "meta_site_name": "Stack Overflow",
        "canonical_link": "https://stackoverflow.com/questions/43214978/how-to-display-custom-values-on-a-bar-plot",
        "text": "This works with a single ax or with a matrix of ax (subplots):\n\nfrom matplotlib import pyplot as plt import numpy as np def show_values_on_bars(axs): def _show_on_single_plot(ax): for p in ax.patches: _x = p.get_x() + p.get_width() / 2 _y = p.get_y() + p.get_height() value = '{:.2f}'.format(p.get_height()) ax.text(_x, _y, value, ha=\"center\") if isinstance(axs, np.ndarray): for idx, ax in np.ndenumerate(axs): _show_on_single_plot(ax) else: _show_on_single_plot(axs) fig, ax = plt.subplots(1, 2) show_values_on_bars(ax)\n\nStick to the solution from Changing color scale in seaborn bar plot, which uses argsort to determine the order of the bar colors. In the linked question, argsort is applied to a Series object, while here you have a DataFrame. Select one column of the DataFrame to apply argsort on.\n\nimport seaborn as sns import matplotlib.pyplot as plt import numpy as np df = sns.load_dataset('tips') groupedvalues = df.groupby('day').sum().reset_index() pal = sns.color_palette('Greens_d', len(groupedvalues)) rank = groupedvalues['total_bill'].argsort().argsort() g = sns.barplot(x='day', y='tip', data=groupedvalues, palette=np.array(pal[::-1])[rank]) for index, row in groupedvalues.iterrows(): g.text(row.name, row.tip, round(row.total_bill, 2), color='black', ha='center') plt.show()\n\nThe second attempt works fine as well, the only issue is the rank, as returned by rank(), starts at 1 instead of 0. So one has to subtract 1 from the array. For indexing, we need integer values, so cast it to int.\n\nrank = groupedvalues['total_bill'].rank(ascending=True).values rank = (rank-1).astype(int)\n\nFrom matplotlib 3.4.0, there is .bar_label, which has a label parameter for custom labels.\n\nOther answers using .bar_label didn't customize the labels with labels=.\n\nSee this answer from May 16, 2021, for a thorough explanation of .bar_label with links to documentation and examples.\n\nThe day column downloads as a category Dtype, which keeps the days of the week in order. This also ensures the plot order of the bars on the x-axis and the values in tb.\n\n.bar_label adds labels from left to right, so the values in tb are in the same order as the bars.\n\nIf working with a column that isn't categorical, pd.Categorical can be used on the column to set the order.\n\nIn sns.barplot, estimator=sum is specified to sum tip. The default is mean.\n\ndf = sns.load_dataset(\"tips\") # sum total_bill by day tb = df.groupby('day').total_bill.sum() # get the colors in blues as requested pal = sns.color_palette(\"Blues_r\", len(tb)) # rank the total_bill sums rank = tb.argsort() # plot fig, ax = plt.subplots(figsize=(8, 6)) sns.barplot(x='day', y='tip', data=df, palette=np.array(pal[::-1])[rank], estimator=sum, ci=False, ax=ax) # 1. add labels using bar_label with custom labels from tb ax.bar_label(ax.containers[0], labels=tb, padding=3) # pad the spacing between the number and the edge of the figure ax.margins(y=0.1) plt.show()\n\nJust in case if anyone is interested in labeling horizontal barplot graph, I modified Sharon's answer as below:\n\ndef show_values_on_bars(axs, h_v=\"v\", space=0.4): def _show_on_single_plot(ax): if h_v == \"v\": for p in ax.patches: _x = p.get_x() + p.get_width() / 2 _y = p.get_y() + p.get_height() value = int(p.get_height()) ax.text(_x, _y, value, ha=\"center\") elif h_v == \"h\": for p in ax.patches: _x = p.get_x() + p.get_width() + float(space) _y = p.get_y() + p.get_height() value = int(p.get_width()) ax.text(_x, _y, value, ha=\"left\") if isinstance(axs, np.ndarray): for idx, ax in np.ndenumerate(axs): _show_on_single_plot(ax) else: _show_on_single_plot(axs)\n\nTwo parameters explained:\n\nh_v - Whether the barplot is horizontal or vertical. \"h\" represents the horizontal barplot, \"v\" represents the vertical barplot.\n\nspace - The space between value text and the top edge of the bar. Only works for horizontal mode.\n\nExample:\n\nshow_values_on_bars(sns_t, \"h\", 0.3)\n\nA simple way to do so is to add the below code (for Seaborn):\n\nfor p in splot.patches: splot.annotate(format(p.get_height(), '.1f'), (p.get_x() + p.get_width() / 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 9), textcoords = 'offset points')\n\nExample:\n\nsplot = sns.barplot(df['X'], df['Y']) # Annotate the bars in plot for p in splot.patches: splot.annotate(format(p.get_height(), '.1f'), (p.get_x() + p.get_width() / 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 9), textcoords = 'offset points') plt.show()"
    }
}