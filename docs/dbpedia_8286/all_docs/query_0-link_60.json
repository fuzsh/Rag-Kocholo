{
    "id": "dbpedia_8286_0",
    "rank": 60,
    "data": {
        "url": "https://blog.devart.com/mysql-backup-tutorial.html",
        "read_more_link": "",
        "language": "en",
        "title": "How to Backup MySQL Database or Table (Ultimate Tutorial)",
        "top_image": "https://blog.devart.com/wp-content/uploads/2021/10/MySQL-Backup-Tutorial.png",
        "meta_img": "https://blog.devart.com/wp-content/uploads/2021/10/MySQL-Backup-Tutorial.png",
        "images": [
            "https://blog.devart.com/wp-content/uploads/2022/12/devart_logo.png",
            "https://blog.devart.com/wp-content/uploads/2022/12/devart_logo.png",
            "https://blog.devart.com/wp-content/uploads/2022/12/devart_logo.png",
            "https://blog.devart.com/wp-content/uploads/2022/12/devart_logo.png",
            "https://blog.devart.com/wp-content/uploads/2023/02/avatar-dbforge-team-60x60.png 2x",
            "https://blog.devart.com/wp-content/uploads/2023/02/avatar-dbforge-team-30x30.png",
            "https://blog.devart.com/wp-content/uploads/2021/10/MySQL-Backup-Tutorial.png 1068w, https://blog.devart.com/wp-content/uploads/2021/10/MySQL-Backup-Tutorial-300x163.png 300w, https://blog.devart.com/wp-content/uploads/2021/10/MySQL-Backup-Tutorial-1024x556.png 1024w, https://blog.devart.com/wp-content/uploads/2021/10/MySQL-Backup-Tutorial-768x417.png 768w, https://blog.devart.com/wp-content/uploads/2021/10/MySQL-Backup-Tutorial-150x81.png 150w, https://blog.devart.com/wp-content/uploads/2021/10/MySQL-Backup-Tutorial-696x378.png 696w",
            "https://blog.devart.com/wp-content/uploads/2021/10/MySQL-Backup-Tutorial.png",
            "https://blog.devart.com/wp-content/uploads/2021/10/backup-data-only.png 1000w, https://blog.devart.com/wp-content/uploads/2021/10/backup-data-only-300x176.png 300w, https://blog.devart.com/wp-content/uploads/2021/10/backup-data-only-768x452.png 768w",
            "https://blog.devart.com/wp-content/uploads/2021/10/backup-data-only.png 1000w, https://blog.devart.com/wp-content/uploads/2021/10/backup-data-only-300x176.png 300w, https://blog.devart.com/wp-content/uploads/2021/10/backup-data-only-768x452.png 768w",
            "https://blog.devart.com/wp-content/uploads/2021/10/backup-database-structure.png 1000w, https://blog.devart.com/wp-content/uploads/2021/10/backup-database-structure-300x176.png 300w, https://blog.devart.com/wp-content/uploads/2021/10/backup-database-structure-768x452.png 768w",
            "https://blog.devart.com/wp-content/uploads/2021/10/backup-database-structure.png 1000w, https://blog.devart.com/wp-content/uploads/2021/10/backup-database-structure-300x176.png 300w, https://blog.devart.com/wp-content/uploads/2021/10/backup-database-structure-768x452.png 768w",
            "https://blog.devart.com/wp-content/uploads/2021/10/backup-selected-tables.png 1000w, https://blog.devart.com/wp-content/uploads/2021/10/backup-selected-tables-300x176.png 300w, https://blog.devart.com/wp-content/uploads/2021/10/backup-selected-tables-768x452.png 768w",
            "https://blog.devart.com/wp-content/uploads/2021/10/backup-selected-tables.png 1000w, https://blog.devart.com/wp-content/uploads/2021/10/backup-selected-tables-300x176.png 300w, https://blog.devart.com/wp-content/uploads/2021/10/backup-selected-tables-768x452.png 768w",
            "https://blog.devart.com/wp-content/uploads/2021/10/backup-single-table.png 1000w, https://blog.devart.com/wp-content/uploads/2021/10/backup-single-table-300x176.png 300w, https://blog.devart.com/wp-content/uploads/2021/10/backup-single-table-768x451.png 768w",
            "https://blog.devart.com/wp-content/uploads/2021/10/backup-single-table.png 1000w, https://blog.devart.com/wp-content/uploads/2021/10/backup-single-table-300x176.png 300w, https://blog.devart.com/wp-content/uploads/2021/10/backup-single-table-768x451.png 768w",
            "https://blog.devart.com/wp-content/uploads/2021/10/mysql-workbench.png 1000w, https://blog.devart.com/wp-content/uploads/2021/10/mysql-workbench-300x196.png 300w, https://blog.devart.com/wp-content/uploads/2021/10/mysql-workbench-768x502.png 768w",
            "https://blog.devart.com/wp-content/uploads/2021/10/mysql-workbench.png 1000w, https://blog.devart.com/wp-content/uploads/2021/10/mysql-workbench-300x196.png 300w, https://blog.devart.com/wp-content/uploads/2021/10/mysql-workbench-768x502.png 768w",
            "https://blog.devart.com/wp-content/uploads/2023/04/select-backups.png 1001w, https://blog.devart.com/wp-content/uploads/2023/04/select-backups-300x196.png 300w, https://blog.devart.com/wp-content/uploads/2023/04/select-backups-768x502.png 768w, https://blog.devart.com/wp-content/uploads/2023/04/select-backups-150x98.png 150w, https://blog.devart.com/wp-content/uploads/2023/04/select-backups-696x455.png 696w",
            "https://blog.devart.com/wp-content/uploads/2023/04/select-backups.png",
            "https://blog.devart.com/wp-content/uploads/2021/10/general-backup-options.png 673w, https://blog.devart.com/wp-content/uploads/2021/10/general-backup-options-300x196.png 300w",
            "https://blog.devart.com/wp-content/uploads/2021/10/general-backup-options.png 673w, https://blog.devart.com/wp-content/uploads/2021/10/general-backup-options-300x196.png 300w",
            "https://blog.devart.com/wp-content/uploads/2021/10/backup-content.png 673w, https://blog.devart.com/wp-content/uploads/2021/10/backup-content-300x286.png 300w",
            "https://blog.devart.com/wp-content/uploads/2021/10/backup-content.png 673w, https://blog.devart.com/wp-content/uploads/2021/10/backup-content-300x286.png 300w",
            "https://blog.devart.com/wp-content/uploads/2021/10/set-options-studio.png 673w, https://blog.devart.com/wp-content/uploads/2021/10/set-options-studio-300x286.png 300w",
            "https://blog.devart.com/wp-content/uploads/2021/10/set-options-studio.png 673w, https://blog.devart.com/wp-content/uploads/2021/10/set-options-studio-300x286.png 300w",
            "https://blog.devart.com/wp-content/uploads/2021/10/view-restored-database.png 999w, https://blog.devart.com/wp-content/uploads/2021/10/view-restored-database-300x193.png 300w, https://blog.devart.com/wp-content/uploads/2021/10/view-restored-database-768x494.png 768w",
            "https://blog.devart.com/wp-content/uploads/2021/10/view-restored-database.png 999w, https://blog.devart.com/wp-content/uploads/2021/10/view-restored-database-300x193.png 300w, https://blog.devart.com/wp-content/uploads/2021/10/view-restored-database-768x494.png 768w",
            "https://blog.devart.com/wp-content/uploads/2023/02/avatar-dbforge-team.png 2x",
            "https://blog.devart.com/wp-content/uploads/2023/02/avatar-dbforge-team.png",
            "https://blog.devart.com/wp-content/uploads/2022/12/devart-logo.png",
            "https://blog.devart.com/wp-content/uploads/2022/12/devart-logo.png"
        ],
        "movies": [
            "https://blog.devart.com/wp-content/uploads/2024/02/download-studio-mysql-video.mp4",
            "https://www.youtube.com/embed/DD06e9XMTow?feature=oembed&enablejsapi=1&origin=https://blog.devart.com",
            "https://blog.devart.com/wp-content/uploads/2024/02/download-studio-mysql-video.mp4"
        ],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "dbForge Team"
        ],
        "publish_date": "2024-01-26T14:06:00+00:00",
        "summary": "",
        "meta_description": "In our new tutorial, we collect different ways on how to back up a full database, single or multiple tables, data, or structure only ➦ Check for examples!",
        "meta_lang": "en",
        "meta_favicon": "https://blog.devart.com/wp-content/uploads/2022/12/favicon.ico",
        "meta_site_name": "Devart Blog",
        "canonical_link": "https://blog.devart.com/mysql-backup-tutorial.html",
        "text": "The article provides an overview of the backup types available in MySQL and describes how-to examples of using the mysqldump command-line utility to take a backup of the database, tables, data, or schema and to restore the MySQL database.\n\nIn addition, you can view how to generate a database backup with MySQL Workbench and how simple and quick it is to perform the same task with the MySQL dump tool available in dbForge Studio for MySQL.\n\nContents\n\nTypes of Backup in MySQL\n\nBack up a MySQL database using the mysqldump command\n\nmysqldump to back up only data\n\nmysqldump to back up only structure\n\nmysqldump to back up all tables in the database\n\nmysqldump to back up a single table\n\nMySQL Workbench to back up a database\n\nHow to back up a database using dbForge Studio for MySQL\n\nRestore the database in MySQL from the file\n\nTypes of Backup in MySQL\n\nIn MySQL, there are different types of backup. Which backup strategy to choose depends on several factors, for example, data size, the hardware you use, performance you want to achieve, storage capacity of your database, etc. In addition, you should take into consideration how much time it will take to restore the backup.\n\nMySQL supports the following backup types:\n\nLogical backup outputs a database structure in a .sql file by generating the CREATE or INSERT statements. Later, this file can be restored with the help of the mysqldump utility. This type backs up only data without indexes, thus, has a small size. However, its recovery option is slower compared with its alternatives, because it should execute all statements one by one.\n\nPhysical backup copies database files in the same format, in which they are stored on the disk. It is faster than the logical type but can be restored only to the MySQL server from the same database engine.\n\nConsistent backup copies the files at the exact moment of time – only after the server stops running or is locked.\n\nIf there may happen some interruptions during a copying operation, backups can be divided into the following types:\n\nCold backup blocks access to data during the backup and does not allow making any changes to data. It is simple, fast, and does not impact performance.\n\nHot backup copies files while the database is running. Users can read and manipulate data.\n\nWarm backup makes a database copy while it is running. Users can read but cannot write data during the backup.\n\nWhether data should be fully or partially copied, backups can be classified into:\n\nFull backup copies all the data from the database. It can be logical or physical. The full backup can be restored on another server.\n\nDifferential backup copies all the changes that were made since the latest full backup. The differential backup can be restored only after the full backup was restored.\n\nIncremental backup copies all the data changes made since the previous backup (either full or differential).\n\nBack up a MySQL database using the mysqldump command\n\nTo back up a MySQL database, you can use either third-party tools or execute the mysqldump command from the command line.\n\nmysqldump is a command-line utility used to generate a MySQL logical database backup. It creates a single .sql file that contains a set of SQL statements. This file can be used to create tables, objects, and/or insert data that were copied from the database. With the utility, you can dump tables, one or several databases, or the entire server with all databases and tables along with their objects or migrate them to another server.\n\nIn addition, the mysqldump utility can output the dump to the CSV or XML file formats. It should be noted that mysqldump cannot dump a database or data to separate .sql files.\n\nTo restore the database, the utility executes all SQL statements to recreate the tables and populate them with data that, in turn, requires a lot of time.\n\nThe basic syntax of the mysqldump command includes the following parameters:\n\nmysqldump -u [user name] –p [password] -h [host name] [options] [database_name] [tablename] > [dumpfilename.sql]\n\n-u (or --user=[username]) is a username to connect to a MySQL server.\n\n-p is a password for the username you use to connect to the server.\n\n-h ( --host=[hostname] ) is the name of the server you want to connect to dump data from.\n\noptions are additional parameters to configure the backup.\n\ndatabase_name is the name of the database you want to back up.\n\ntablename is the table name that you want to back up.\n\n< or > refers to parameters indicating the process of database backup (>) or restore (<).\n\ndumpfilename.sql is a path to a dump file containing the database backup.\n\nNote: As a rule, mysqldump is located in the MySQL Server installation directory. For example, for MySQL 8.0, the path to the directory is C:\\Program Files\\MySQL\\MySQL Server 8.0\\bin. Thus, we recommend adding this directory to the mysqldump command.\n\nNext, let’s take a closer look at the examples describing how to take a backup of the MySQL database using the mysqldump command-line utility.\n\nFor demo purposes, we are going to connect to a remote server dbfmylast. That’s why we will add some additional information to the mysqldump command, such as --host and --port parameters.\n\nNote: See Backing up all MySQL server databases or only the required ones for more information.\n\nmysqldump to back up only data\n\nIf you want to take a backup of data without the database structure, execute the command with the –no-create-info parameter. For example, dump data for the sakila database.\n\nmysqldump --host=dbfmylast --user=root --port=3306 -p --no-create-info sakila > D:\\backup_data_only.sql\n\nThe file will output the script containing only dumping table data:\n\nmysqldump to back up only structure\n\nThere may be cases when you need to export the database or table structure without data. To get that done, run the command with the -no-data parameter.\n\nmysqldump --host=dbfmylast --user=root --port=3306 -p --no-data sakila > D:\\backup_database_structure_only.sql\n\nThe mysqldump command outputs only table structure to the file.\n\nmysqldump to back up all tables in the database\n\nThe mysqldump command can generate a backup of all or specific tables in the database by adding the selected table names to the command. Keep in mind that the names of the tables should be separated by a space. For example, dump the category, city, and country tables by running the following command:\n\nmysqldump --host=dbfmylast --user=root --port=3306 -p sakila city country category > D:\\backup_selected_tables.sql\n\nThe output is as follows:\n\nmysqldump to back up a single table\n\nTo take a backup of a single table in the database, indicate the name of the specific table in the mysqldump command. For example, dump the inventory table from the sakila database.\n\nmysqldump --host=dbfmylast --user=root --port=3306 -p sakila inventory > D:\\backup_single_table.sql\n\nThe backup script outputs structure and data only for the inventory table:\n\nMySQL Workbench to back up a database\n\nIn this part, we are going to examine how to make a database backup using the MySQL Workbench tool.\n\nTo create a database backup, do the following:\n\n1. On the Administration panel, click Data Export. The Administration – Data Export document opens.\n\n2. On the Object Select > Tables to Export tab, select the sakila schema.\n\n3. Under Export Options, select Export to Dump Project Folder if you want database tables to be stored to separate .sql files or Export to Self-Contained File to store the database dump in a single .sql file.\n\n4. To create a backup file, click Start Export. On the progress bar, you can view that the data was exported to the specified file.\n\nNote: With MySQL Workbench, it is not possible to automate or schedule a database backup.\n\nHow to back up a database using dbForge Studio for MySQL\n\nNow, let’s see how easy and fast it is to create a database backup using dbForge Studio for MySQL. It is a versatile MySQL GUI tool for developing, managing, and administering MariaDB and MySQL databases. This IDE can increase productivity, optimize query performance, efficiently compare and synchronize databases, automate and schedule database backups.\n\nWith the MySQL backup tool, built into dbForge Studio for MySQL, you can back up and restore MySQL databases in the most efficient and quickest way.\n\nTo create a backup for the database, open the tool and connect to the MySQL server. In Database Explorer, right-click the database you want to back up and select Backup and Restore > Backup Database.\n\nIn the Database Backup Wizard that opens, specify the connection, database, location to store the output file, and name for this file.\n\nOn the Backup content tab, select whether you want to back up a database structure or data, or both, and select database objects.\n\nOn the Options tab, set additional options that will handle the backup process.\n\nIf you want to configure error processing behavior and logging options, switch to the Errors handling tab and set up the options. To launch the database backup, click Backup. After the process is complete, you will see the corresponding notification and can close the wizard.\n\nWondering how to automate and schedule backups for a MySQL database? Elevate your workflow with the MySQL backup tool in dbForge Studio for MySQL!\n\nRestore the database in MySQL from the file\n\nNow, let’s restore the sakila database from the .sql output file using the mysqldump utility.\n\nFirst, you need to create an empty database on the target server and restore the database using the mysql command that will generate a schema with data.\n\nmysql --host=dbfmylast --user=root --port=3306 -p sakila < D:\\dumps\\sakila.sql\n\nwhere sakila is an empty database that will contain a database structure with data after the import from the sakila.sql backup file.\n\nNote: If there is a database with the same name on the target server, then first, you need to drop it and then create an empty database.\n\nTo view the list of tables located in the sakila database, execute the following mysql command:\n\nmysql> use sakila; ... mysql> show tables;\n\nConclusion\n\nIn the article, we have covered the backup types in MySQL, provided examples of how to take a backup of all databases, data or database structure, and tables, as well as how to restore the database using the mysqldump utility. In addition, we examined how to generate a database backup using MySQL Workbench and dbForge Studio for MySQL. Additionally, if you’re interested in learning how to duplicate tables in MySQL, feel free to read How to Copy Table in MySQL: Duplicate Structure, Data, and Indexes Correctly."
    }
}