{
    "id": "dbpedia_3927_2",
    "rank": 70,
    "data": {
        "url": "https://www.sqlservercentral.com/forums/topic/subquery-returned-more-than-1-value-4",
        "read_more_link": "",
        "language": "en",
        "title": "Subquery returned more than 1 value. – SQLServerCentral Forums",
        "top_image": "https://www.sqlservercentral.com/wp-content/uploads/2024/07/sb-pass-summit-become-sponsor-2024.png",
        "meta_img": "",
        "images": [
            "https://www.sqlservercentral.com/wp-content/themes/ssc-twentyeighteen/images/header/ssc-logo.svg?v=1669030349",
            "https://www.sqlservercentral.com/wp-content/themes/ssc-twentyeighteen/images/header/ssc.svg",
            "https://www.sqlservercentral.com/wp-content/uploads/2024/07/sb-pass-summit-become-sponsor-2024.png",
            "https://www.sqlservercentral.com/wp-content/themes/ssc-twentyeighteen/images/footer/redgate.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2010-10-12T15:51:13+00:00",
        "summary": "",
        "meta_description": "Subquery returned more than 1 value. Forum – Learn more on SQLServerCentral",
        "meta_lang": "en",
        "meta_favicon": "https://www.sqlservercentral.com/wp-content/uploads/2019/04/favicon.ico",
        "meta_site_name": "SQLServerCentral",
        "canonical_link": "https://www.sqlservercentral.com/forums/topic/subquery-returned-more-than-1-value-4",
        "text": "Hi Guys, I am getting below error. Ca someone please help me with this.\n\nError:\n\nSubquery returned more than 1 value. This is not permitted when the subquery follows =, !=, <, <= , >, >= or when the subquery is used as an expression.\n\ncreate procedure dbo.USP_USR_ADD_UPDATE_OMUNIT(\n\n@CURRENTAPPUSERID uniqueidentifier,\n\n@CHANGEAGENTID uniqueidentifier = null,\n\n@SITEKEY nvarchar(20),\n\n@PARTNERKEY nvarchar(20),\n\n@SHORTNAME nvarchar(100),--not using, using only @UNITNAME\n\n@STATUSCODE nvarchar(20),\n\n@UNITNAME nvarchar(100),\n\n@CAMPAIGNCODE nvarchar(20),--not dealt\n\n@UNITTYPECODE nvarchar(20),\n\n@COUNTRYCODEATTRIBUTE nvarchar(20),--not dealt\n\n@PRIMARYOFFICE nvarchar(2),-- 0 or 1\n\n@LOCALITY nvarchar(50),\n\n@STREETNAME nvarchar(50),\n\n@ADDRESS3 nvarchar(50),\n\n@CITY nvarchar(20),\n\n@COUNTY nvarchar(20),--state is passed\n\n@POSTALCODE nvarchar(20),\n\n@COUNTRYCODE nvarchar(20),\n\n@DATEEFFECTIVE nvarchar(20),--not dealt\n\n@DATEGOODUNTIL nvarchar(20),--not dealt\n\n@LOCATIONTYPE nvarchar(20),\n\n@SENDMAIL nvarchar(5),\n\n@EMAILADDRESS nvarchar(50),\n\n@TELEPHONE nvarchar(20),\n\n@EXTENSION nvarchar(6),--not dealt\n\n@FAX nvarchar(20),--not dealt\n\n@FAXEXTENSION nvarchar(6),--not dealt\n\n@UMPARENTUNITKEY nvarchar(20)\n\n)\n\nas\n\nbegin\n\nset nocount on;\n\nbegin try\n\n--check if the organization record is already added to BBEC\n\ndeclare @ID uniqueidentifier = (select dbo.USR_UFN_GETCONSTITUENTID(@PARTNERKEY,@SITEKEY))\n\ndeclare @CURRENTDATE datetime;\n\ndeclare @KEYNAME nvarchar(100);\n\ndeclare @KEYNAMEPREFIX nvarchar(20);\n\ndeclare @ALTERNATELOOKUPIDTYPECODEID uniqueidentifier;\n\ndeclare @PARENTCORPID uniqueidentifier;\n\ndeclare @INDUSTRYTYPECODEID uniqueidentifier = null;\n\ndeclare @ISINACTIVE bit;\n\ndeclare @ISPRIMARY bit;\n\nset @INDUSTRYTYPECODEID = dbo.USR_UFN_GETINDUSTRYTYPECODEID(@UNITTYPECODE)\n\nif(@INDUSTRYTYPECODEID = null)\n\nreturn 1;\n\nif @CHANGEAGENTID is null\n\nexec dbo.USP_CHANGEAGENT_GETORCREATECHANGEAGENT @CHANGEAGENTID output;\n\nset @PARENTCORPID=dbo.USR_UFN_GETCONSTITUENTID(@UMPARENTUNITKEY,@SITEKEY)\n\nset @CURRENTDATE = getdate();\n\nexec dbo.USP_PARSE_ORGANIZATION_NAME @UNITNAME, @KEYNAME output, @KEYNAMEPREFIX output;\n\nset @ISINACTIVE = dbo.USR_UFN_GETCONSTITUENTSTATUS(@STATUSCODE)\n\nset @ISPRIMARY =\n\ncase when @PRIMARYOFFICE = '1' then 1\n\nelse 0\n\nend\n\nif(@ID is null)--if org does not exist in BBEC then add\n\nbegin\n\nif @SITEKEY='2000000'\n\nset @ALTERNATELOOKUPIDTYPECODEID=(select ID from ALTERNATELOOKUPIDTYPECODE where DESCRIPTION = 'US Petra Partner Key')\n\nelse if @SITEKEY='29000000'\n\nset @ALTERNATELOOKUPIDTYPECODEID=(select ID from ALTERNATELOOKUPIDTYPECODE where DESCRIPTION = 'NL Petra Partner Key')\n\nset @ID=newid()\n\ninsert into dbo.CONSTITUENT\n\n(\n\nID,\n\nISORGANIZATION,\n\nKEYNAME,\n\nKEYNAMEPREFIX,\n\nISINACTIVE,\n\nADDEDBYID,\n\nCHANGEDBYID,\n\nDATEADDED,\n\nDATECHANGED\n\n)\n\nvalues\n\n(\n\n@ID,\n\n-1,\n\n@KEYNAME,\n\n@KEYNAMEPREFIX,\n\n@ISINACTIVE,\n\n@CHANGEAGENTID,\n\n@CHANGEAGENTID,\n\n@CURRENTDATE,\n\n@CURRENTDATE\n\n);\n\ninsert into dbo.ORGANIZATIONDATA\n\n(\n\nID,\n\nINDUSTRYCODEID,\n\nPARENTCORPID,\n\nADDEDBYID,\n\nCHANGEDBYID,\n\nDATEADDED,\n\nDATECHANGED,\n\nISPRIMARY\n\n)\n\nvalues\n\n(\n\n@ID,\n\n@INDUSTRYTYPECODEID,\n\n@PARENTCORPID,\n\n@CHANGEAGENTID,\n\n@CHANGEAGENTID,\n\n@CURRENTDATE,\n\n@CURRENTDATE,\n\n@ISPRIMARY\n\n);\n\ninsert into dbo.ALTERNATELOOKUPID\n\n(\n\nID,\n\nCONSTITUENTID,\n\nALTERNATELOOKUPIDTYPECODEID,\n\nALTERNATELOOKUPID,\n\nADDEDBYID,\n\nCHANGEDBYID,\n\nDATEADDED,\n\nDATECHANGED\n\n)\n\nvalues\n\n(\n\nnewid(),\n\n@ID,\n\n@ALTERNATELOOKUPIDTYPECODEID,\n\n@PARTNERKEY,\n\n@CHANGEAGENTID,\n\n@CHANGEAGENTID,\n\n@CURRENTDATE,\n\n@CURRENTDATE\n\n)\n\n/*Start Primary Address */\n\nif\n\n(\n\n(coalesce(@LOCALITY,'') <> '')\n\nor (coalesce(@STREETNAME,'') <> '')\n\nor (coalesce(@ADDRESS3,'') <> '')\n\nor (coalesce(@CITY,'') <> '')\n\nor (coalesce(@COUNTY,'') <> '')\n\nor (coalesce(@POSTALCODE,'') <> '')\n\nor (coalesce(@COUNTRYCODE,'') <> '')\n\nor (coalesce(@LOCATIONTYPE,'') <> '')\n\nor (coalesce(@SENDMAIL,'') <> '')\n\n)\n\nbegin\n\ndeclare @ADDRESSID uniqueidentifier = newid();\n\ndeclare @ADDRESSBLOCK nvarchar(150) = dbo.USR_UFN_BUILDADDRESSBLOCK(@LOCALITY,@STREETNAME,@ADDRESS3);\n\ndeclare @COUNTRYID uniqueidentifier = (select dbo.UFN_COUNTRY_GETID(@COUNTRYCODE,1));\n\ndeclare @STATEID uniqueidentifier = (select dbo.UFN_STATE_GETID(@COUNTRYID,@COUNTY,0));\n\ndeclare @DONOTMAIL bit;\n\nset @DONOTMAIL =\n\ncase when @SENDMAIL = 'yes' then 0\n\nwhen @SENDMAIL = 'no' then 1\n\nelse 0\n\nend\n\ndeclare @ADDRESSTYPECODEID uniqueidentifier = (select dbo.UFN_ADDRESSTYPECODE_GETID(@LOCATIONTYPE));\n\nif @ADDRESSTYPECODEID = null\n\nset @ADDRESSTYPECODEID = (select ID from ADDRESSTYPECODE where DESCRIPTION='Other')\n\ninsert into dbo.ADDRESS\n\n(\n\nID,\n\nCONSTITUENTID,\n\nADDRESSTYPECODEID,\n\nISPRIMARY,\n\nDONOTMAIL,\n\nCOUNTRYID,\n\nSTATEID,\n\nADDRESSBLOCK,\n\nCITY,\n\nPOSTCODE,\n\nADDEDBYID,\n\nCHANGEDBYID,\n\nDATEADDED,\n\nDATECHANGED\n\n)\n\nvalues\n\n(\n\n@ADDRESSID,\n\n@ID,\n\n@ADDRESSTYPECODEID,\n\n1,\n\n@DONOTMAIL,\n\n@COUNTRYID,\n\n@STATEID,\n\n@ADDRESSBLOCK,\n\n@CITY,\n\n@POSTALCODE,\n\n@CHANGEAGENTID,\n\n@CHANGEAGENTID,\n\n@CURRENTDATE,\n\n@CURRENTDATE\n\n);\n\nend\n\n/*End Primary Address */\n\n/*Start Primary Phone */\n\nif (coalesce(@TELEPHONE,'') <> '')\n\nbegin\n\ninsert into dbo.PHONE\n\n(\n\nID,\n\nCONSTITUENTID,\n\nISPRIMARY,\n\nNUMBER,\n\nCOUNTRYID,\n\nADDEDBYID,\n\nCHANGEDBYID,\n\nDATEADDED,\n\nDATECHANGED\n\n)\n\nvalues\n\n(\n\nnewid(),\n\n@ID,\n\n1,\n\n@TELEPHONE,\n\n@COUNTRYID,\n\n@CHANGEAGENTID,\n\n@CHANGEAGENTID,\n\n@CURRENTDATE,\n\n@CURRENTDATE\n\n);\n\nend\n\n/*End Primary Phone */\n\n/*Start Primary Email Address */\n\nif ((coalesce(@EMAILADDRESS,'') <> ''))\n\nbegin\n\ninsert into dbo.[EMAILADDRESS]\n\n(\n\nID,\n\n[CONSTITUENTID],\n\n[EMAILADDRESS],\n\n[ISPRIMARY],\n\n[ADDEDBYID],\n\n[CHANGEDBYID],\n\n[DATEADDED],\n\n[DATECHANGED]\n\n)\n\nvalues\n\n(\n\nnewid(),\n\n@ID,\n\n@EMAILADDRESS,\n\n1,\n\n@CHANGEAGENTID,\n\n@CHANGEAGENTID,\n\n@CURRENTDATE,\n\n@CURRENTDATE\n\n);\n\nend\n\n/*End Primary Email Address */\n\nend--end of org add if does not exist in BBEC\n\nelse--if org exists in BBEC then update\n\nbegin\n\nif(((coalesce(@KEYNAME,'') <> '') or\n\n(coalesce(@KEYNAMEPREFIX,'') <> '') or\n\n(coalesce(@STATUSCODE,'') <> '')) and\n\n((@KEYNAME <> (select KEYNAME from CONSTITUENT where ID = @ID)) or\n\n(@KEYNAMEPREFIX <> (select KEYNAMEPREFIX from CONSTITUENT where ID = @ID)) or\n\n(@ISINACTIVE <> (select ISINACTIVE from CONSTITUENT where ID = @ID))))\n\nbegin\n\nupdate dbo.CONSTITUENT\n\nset KEYNAME = @KEYNAME,\n\nKEYNAMEPREFIX = @KEYNAMEPREFIX,\n\nISINACTIVE = @ISINACTIVE,\n\nCHANGEDBYID = @CHANGEAGENTID,\n\nDATECHANGED = @CURRENTDATE\n\nwhere CONSTITUENT.ID = @ID\n\nend\n\nif(((@INDUSTRYTYPECODEID is not null) or\n\n(@PARENTCORPID is not null) or\n\n(coalesce(@PRIMARYOFFICE,'') <> '')) and\n\n((@INDUSTRYTYPECODEID <> (select INDUSTRYCODEID from ORGANIZATIONDATA where ID = @ID)) or\n\n(@ISPRIMARY <> (select ISPRIMARY from ORGANIZATIONDATA where ID = @ID)) or\n\n(@PARENTCORPID <> (select PARENTCORPID from ORGANIZATIONDATA where ID = @ID))))\n\nbegin\n\nupdate dbo.ORGANIZATIONDATA\n\nset INDUSTRYCODEID = @INDUSTRYTYPECODEID,\n\nPARENTCORPID = @PARENTCORPID,\n\nISPRIMARY = @ISPRIMARY,\n\nCHANGEDBYID = @CHANGEAGENTID,\n\nDATECHANGED = @CURRENTDATE\n\nwhere ORGANIZATIONDATA.ID = @ID\n\nend\n\n/*Start Primary Address */\n\nif\n\n(\n\n(coalesce(@LOCALITY,'') <> '')\n\nor (coalesce(@STREETNAME,'') <> '')\n\nor (coalesce(@ADDRESS3,'') <> '')\n\nor (coalesce(@CITY,'') <> '')\n\nor (coalesce(@COUNTY,'') <> '')\n\nor (coalesce(@POSTALCODE,'') <> '')\n\nor (coalesce(@COUNTRYCODE,'') <> '')\n\nor (coalesce(@LOCATIONTYPE,'') <> '')\n\nor (coalesce(@SENDMAIL,'') <> '')\n\n)\n\nbegin\n\ndeclare @ADDRESSBLOCK_UPD nvarchar(150) = dbo.USR_UFN_BUILDADDRESSBLOCK(@LOCALITY,@STREETNAME,@ADDRESS3);\n\ndeclare @COUNTRYID_UPD uniqueidentifier = (select dbo.UFN_COUNTRY_GETID(@COUNTRYCODE,1));\n\ndeclare @STATEID_UPD uniqueidentifier = (select dbo.UFN_STATE_GETID(@COUNTRYID,@COUNTY,0));\n\ndeclare @DONOTMAIL_UPD bit;\n\nset @DONOTMAIL_UPD =\n\ncase when @SENDMAIL = 'yes' then 0\n\nwhen @SENDMAIL = 'no' then 1\n\nelse 0\n\nend\n\ndeclare @ADDRESSTYPECODEID_UPD uniqueidentifier = (select dbo.UFN_ADDRESSTYPECODE_GETID(@LOCATIONTYPE));\n\nif @ADDRESSTYPECODEID_UPD = null\n\nset @ADDRESSTYPECODEID_UPD = (select ID from ADDRESSTYPECODE where DESCRIPTION='Other')\n\n--if Primary Address not there, then add else update\n\ndeclare @addressid_upd uniqueidentifier = (select ID from ADDRESS where CONSTITUENTID=@ID and ISPRIMARY=1)\n\nif(@addressid_upd is null)\n\nbegin\n\ninsert into dbo.ADDRESS\n\n(\n\nID,\n\nCONSTITUENTID,\n\nADDRESSTYPECODEID,--see how it is mapped to LOCATIONTYPE or default it to OTHER\n\nISPRIMARY,\n\nDONOTMAIL,\n\nCOUNTRYID,\n\nSTATEID,\n\nADDRESSBLOCK,\n\nCITY,\n\nPOSTCODE,\n\nADDEDBYID,\n\nCHANGEDBYID,\n\nDATEADDED,\n\nDATECHANGED\n\n)\n\nvalues\n\n(\n\nnewid(),\n\n@ID,\n\n@ADDRESSTYPECODEID,--see how it is mapped to @LOCATIONTYPE or default it to OTHER\n\n1,\n\n@DONOTMAIL_UPD,\n\n@COUNTRYID_UPD,\n\n@STATEID_UPD,\n\n@ADDRESSBLOCK_UPD,\n\n@CITY,\n\n@POSTALCODE,\n\n@CHANGEAGENTID,\n\n@CHANGEAGENTID,\n\n@CURRENTDATE,\n\n@CURRENTDATE\n\n);\n\nend\n\nelse if((@ADDRESSTYPECODEID_UPD <> (select ADDRESSTYPECODEID from ADDRESS where ID = @addressid_upd)) or\n\n(@DONOTMAIL_UPD <> (select DONOTMAIL from ADDRESS where ID = @addressid_upd)) or\n\n(@COUNTRYID_UPD <> (select COUNTRYID from ADDRESS where ID = @addressid_upd)) or\n\n(@STATEID_UPD <> (select STATEID from ADDRESS where ID = @addressid_upd)) or\n\n(@ADDRESSBLOCK_UPD <> (select ADDRESSBLOCK from ADDRESS where ID = @addressid_upd)) or\n\n(@CITY <> (select CITY from ADDRESS where ID = @addressid_upd)) or\n\n(@POSTALCODE <> (select POSTCODE from ADDRESS where ID = @addressid_upd)))\n\nbegin\n\nupdate dbo.ADDRESS\n\nset ADDRESSTYPECODEID = @ADDRESSTYPECODEID_UPD,\n\nDONOTMAIL = @DONOTMAIL_UPD,\n\nCOUNTRYID = @COUNTRYID_UPD,\n\nSTATEID = @STATEID_UPD,\n\nADDRESSBLOCK = @ADDRESSBLOCK_UPD,\n\nCITY = @CITY,\n\nPOSTCODE = @POSTALCODE,\n\nCHANGEDBYID = @CHANGEAGENTID,\n\nDATECHANGED = @CURRENTDATE\n\nwhere ADDRESS.ID = @addressid_upd\n\nend\n\nend\n\n/*End Primary Address */\n\n/*Start Primary Phone */\n\nif (coalesce(@TELEPHONE,'') <> '')\n\nbegin\n\n--if Primary Phone not there, then add else update\n\ndeclare @phoneid uniqueidentifier = (select ID from PHONE where CONSTITUENTID=@ID and ISPRIMARY=1)\n\nif(@phoneid is null)\n\nbegin\n\ninsert into dbo.PHONE\n\n(\n\nID,\n\nCONSTITUENTID,\n\nNUMBER,\n\nCOUNTRYID,\n\nADDEDBYID,\n\nCHANGEDBYID,\n\nDATEADDED,\n\nDATECHANGED\n\n)\n\nvalues\n\n(\n\nnewid(),\n\n@ID,\n\n@TELEPHONE,\n\n@COUNTRYID,\n\n@CHANGEAGENTID,\n\n@CHANGEAGENTID,\n\n@CURRENTDATE,\n\n@CURRENTDATE\n\n);\n\nend\n\nelse if((@TELEPHONE <> (select NUMBER from PHONE where ID = @phoneid)) or\n\n(@COUNTRYID <> (select COUNTRYID from PHONE where ID = @phoneid)))\n\nbegin\n\nupdate dbo.PHONE\n\nset NUMBER = @TELEPHONE,\n\nCOUNTRYID = @COUNTRYID,\n\nCHANGEDBYID = @CHANGEAGENTID,\n\nDATECHANGED = @CURRENTDATE\n\nwhere PHONE.ID = @phoneid\n\nend\n\nend\n\n/*End Primary Phone */\n\n/*Start Primary Email Address */\n\nif (coalesce(@EMAILADDRESS,'') <> '')\n\nbegin\n\n--if Primary Email Address not there, then add else update\n\ndeclare @emailaddressid uniqueidentifier = (select ID from EMAILADDRESS where CONSTITUENTID=@ID and ISPRIMARY=1)\n\nif(@emailaddressid is null)\n\nbegin\n\ninsert into dbo.EMAILADDRESS\n\n(\n\nID,\n\nCONSTITUENTID,\n\nEMAILADDRESS,\n\nADDEDBYID,\n\nCHANGEDBYID,\n\nDATEADDED,\n\nDATECHANGED\n\n)\n\nvalues\n\n(\n\nnewid(),\n\n@ID,\n\n@EMAILADDRESS,\n\n@CHANGEAGENTID,\n\n@CHANGEAGENTID,\n\n@CURRENTDATE,\n\n@CURRENTDATE\n\n);\n\nend\n\nelse if(@EMAILADDRESS <> (select EMAILADDRESS from EMAILADDRESS where ID = @emailaddressid))\n\nbegin\n\nupdate dbo.EMAILADDRESS\n\nset EMAILADDRESS = @EMAILADDRESS,\n\nCHANGEDBYID = @CHANGEAGENTID,\n\nDATECHANGED = @CURRENTDATE\n\nwhere EMAILADDRESS.ID = @emailaddressid\n\nend\n\nend\n\n/*End Primary Email Address */\n\nend--end of org update if it exists in BBEC\n\nend try\n\nbegin catch\n\nexec dbo.USP_RAISE_ERROR;\n\nreturn 1;\n\nend catch\n\nreturn 0;\n\nend\n\nThis is going to sound mean, but we can't help you with this one without having a copy of the database.\n\nThe error says exactly what it means, one of the multiple subqueries in the code structure is returning multiple rows, and you need singular for the comparison.\n\nLook for the lines such as AND (SELECT field FROM table WHERE x = @x) = '' )\n\n[Edit: Like this: if((@TELEPHONE <> (select NUMBER from PHONE where ID = @phoneid)) ]\n\nYou'll have to test each one of those with the necessary parameter settings and figure out which one is returning the multi-line data. The data is king here, it's not a coding issue, it's directly related to a data issue.\n\n- Craig Farrell\n\nNever stop learning, even if it hurts. Ego bruises are practically mandatory as you learn unless you've never risked enough to make a mistake.\n\nFor better assistance in answering your questions[/url] | Forum Netiquette\n\nFor index/tuning help, follow these directions.[/url] | Tally Tables[/url]\n\nTwitter: @AnyWayDBA\n\nWhen I run across a procedure like this, especially when it is generating an error, I start over. It is a great way to get a better handle on the process and make improvements along the way. I would suggest the following steps\n\n1) Figure out exactly what the procedure is intended to do.\n\n2) Break it down into logical components or steps.\n\n3) Write each step and test it, implementing your improvements along the way. For example, fewer variables, smaller/appropriate data types, clearer statements. Annotate each step as you write it for future reference.\n\n4) Look over the finished process and see if there are any places where you can consolidate, i.e. are there unnecessary steps?\n\nWhen you're done you'll have a process that works consisting of one or more procedures. You'll know it well and will have it documented so you or anyone else can go in and see what it does. You'll likely have made it run better than before you got the error.\n\n--------------------------------------\n\nWhen you encounter a problem, if the solution isn't readily evident go back to the start and check your assumptions.\n\n--------------------------------------\n\nIt’s unpleasantly like being drunk.\n\nWhat’s so unpleasant about being drunk?\n\nYou ask a glass of water. -- Douglas Adams\n\nSahasam (10/12/2010)\n\nHi Guys, I am getting below error. Ca someone please help me with this.\n\nError:\n\nSubquery returned more than 1 value. This is not permitted when the subquery follows =, !=, <, <= , >, >= or when the subquery is used as an expression.\n\nI have to agree with Stefan, this SP could do with reworking from the ground up (Celko is partly right too, but his offensive manner and his ad hominem attack on you are disgraceful, as is his inclusion of some wild personal prejudices that have nothing to do with the relational model or the SQL standard, and - like Brandie - I regard his post as unhelpful).\n\nHowever, it should be possible to find where this particular error is coming from quite easily. The clue is in the error message - just find the subqueries that are semantically constrained to return a single value (by looking for \"(select \" following an assignment or comparison operator) and it has to be one of those that is going wrong. It turns out that there are 21 distinct such queries using tables and 3 using UDFs in the SP:-\n\nselect ID from ALTERNATELOOKUPIDTYPECODE where DESCRIPTION = 'US Petra Partner Key'\n\nselect ID from ALTERNATELOOKUPIDTYPECODE where DESCRIPTION = 'NL Petra Partner Key'\n\nselect ID from ADDRESSTYPECODE where DESCRIPTION='Other'\n\nselect KEYNAME from CONSTITUENT where ID = @ID\n\nselect KEYNAMEPREFIX from CONSTITUENT where ID = @ID\n\nselect ISINACTIVE from CONSTITUENT where ID = @ID\n\nselect INDUSTRYCODEID from ORGANIZATIONDATA where ID = @ID\n\nselect ISPRIMARY from ORGANIZATIONDATA where ID = @ID\n\nselect PARENTCORPID from ORGANIZATIONDATA where ID = @ID\n\nselect ID from ADDRESS where CONSTITUENTID=@ID and ISPRIMARY=1\n\nselect ADDRESSTYPECODEID from ADDRESS where ID = @addressid_upd\n\nselect DONOTMAIL from ADDRESS where ID = @addressid_upd\n\nselect COUNTRYID from ADDRESS where ID = @addressid_upd\n\nselect ADDRESSBLOCK from ADDRESS where ID = @addressid_upd\n\nselect CITY from ADDRESS where ID = @addressid_upd\n\nselect POSTCODE from ADDRESS where ID = @addressid_upd\n\nselect ID from PHONE where CONSTITUENTID=@ID and ISPRIMARY=1\n\nselect NUMBER from PHONE where ID = @phoneid\n\nselect COUNTRYID from PHONE where ID = @phoneid\n\nselect ID from EMAILADDRESS where CONSTITUENTID=@ID and ISPRIMARY=1\n\nselect EMAILADDRESS from EMAILADDRESS where ID = @emailaddressid\n\nselect dbo.UFN_COUNTRY_GETID(@COUNTRYCODE,1)\n\nselect dbo.UFN_STATE_GETID(@COUNTRYID,@COUNTY,0)\n\nselect dbo.UFN_ADDRESSTYPECODE_GETID(@LOCATIONTYPE)\n\nbut in fact they don't all have to be checked: for example the three queries\n\nselect ID from PHONE where CONSTITUENTID=@ID and ISPRIMARY=1\n\nselect NUMBER from PHONE where ID = @phoneid\n\nselect COUNTRYID from PHONE where ID = @phoneid\n\ncan all be checked by a single statement, because which column is selected is irrelevant - it's the number of rows hit that counts, so a query like select * from (select ID, count(*)) from phone group by ID) G will check the database to see whether any of these three queries can be causing the problem (if it returns any rows, the phone table has duplicate IDs) so all the tables where duplicate ID is the potential issue can be checked with just 5 queries. The other three table queries need slightly different checks (because the selection isn't on the ID column) as do the UDFs (just look at thoose to see they are valid scalar functions). If none of these throws up the answer, the SP must be inserting two of something with a new id when it creates a new id - and that should be spottable by examination. (Celko is right when he says the DDL needs fixing as well as the SP, since all these checks should have been handled automatically by integrity constraints to prevent the tables ever getting duplicate IDs (or DESCRIPTIONs, as the case may be).\n\nWhen looking at code like this, remember (a) that conditions for an update generally belong in the where clause, not in an if statement; and (b) that where (a) doesn't eliminate some \"if\" statements a case statement is often better than a string of \"if\"s; and (c) where selection from a single table using a given conjunction of column equalities is required always to return at most one row this should be enforced by a UNIQUE constraint (or a PRIMARY KEY constraint). Changing the code and ddl to be like this may either eliminate or find the source of a problem like yours very quickly (eg adding a unique constraint may fail - and then you know which table has a data problem).\n\nedit: typos\n\nTom\n\nI agree with Jeff on this one - run it in steps as a script to find the area of the problem. That being said, there are only a few reasons why sub queries return more than 1 value (the values of more than 1 row).\n\n1. There is something you don't understand about the tables or relationships\n\nor there is something you overlooked about them.\n\n2. There really should be only 1 row that satisfies the query and you have bad\n\nor unexpected data in the table.\n\nRunning the queries to find where more will show you where the duplicates are.\n\nAs a previous post already gave you, the query:\n\nSELECT ID, COUNT(*) FROM PHONE\n\nGROUP BY ID HAVING COUNT(*) > 1\n\nshould be a good place to start.\n\nTodd Fifield"
    }
}