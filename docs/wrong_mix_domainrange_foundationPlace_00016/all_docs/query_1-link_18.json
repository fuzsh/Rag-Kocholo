{
    "id": "wrong_mix_domainrange_foundationPlace_00016_1",
    "rank": 18,
    "data": {
        "url": "https://groups.google.com/g/puppet-dev/c/3WP2W_43T1w",
        "read_more_link": "",
        "language": "en",
        "title": "Re: [Puppet-dev] (#5660) Puppet should handle port entries in /etc/services with a native type",
        "top_image": "https://www.gstatic.com/images/branding/product/1x/groups_32dp.png",
        "meta_img": "https://www.gstatic.com/images/branding/product/1x/groups_32dp.png",
        "images": [
            "https://fonts.gstatic.com/s/i/productlogos/groups/v9/web-48dp/logo_groups_color_1x_web_48dp.png",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjVnrSk7BDrgBkOm9R4wCpBGdmN2QoOh4btuD2RB80tv4vSU1RY=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXYsLv_uFegb_2oZyyTL7njS4XQLi-BCK4I78qTldbSl_47jVOI=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXzUoNV4ulDCsQW4HWWo0G2gyzLAjtUNJ02YEmaWq1oSoyUAPdr=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXYsLv_uFegb_2oZyyTL7njS4XQLi-BCK4I78qTldbSl_47jVOI=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXzUoNV4ulDCsQW4HWWo0G2gyzLAjtUNJ02YEmaWq1oSoyUAPdr=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXzUoNV4ulDCsQW4HWWo0G2gyzLAjtUNJ02YEmaWq1oSoyUAPdr=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXdAckrptGRuscfFUiHCqxn9bH29pnpfmMmIcUj4CeFIacabLaZ=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXYsLv_uFegb_2oZyyTL7njS4XQLi-BCK4I78qTldbSl_47jVOI=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXdAckrptGRuscfFUiHCqxn9bH29pnpfmMmIcUj4CeFIacabLaZ=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjUvqPEMC-TfMTCTLyszOVCiosuGHm4jUiotKXq4_Q5qw38gJA=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjUvqPEMC-TfMTCTLyszOVCiosuGHm4jUiotKXq4_Q5qw38gJA=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjUvqPEMC-TfMTCTLyszOVCiosuGHm4jUiotKXq4_Q5qw38gJA=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjUvqPEMC-TfMTCTLyszOVCiosuGHm4jUiotKXq4_Q5qw38gJA=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjUvqPEMC-TfMTCTLyszOVCiosuGHm4jUiotKXq4_Q5qw38gJA=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjUvqPEMC-TfMTCTLyszOVCiosuGHm4jUiotKXq4_Q5qw38gJA=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjUvqPEMC-TfMTCTLyszOVCiosuGHm4jUiotKXq4_Q5qw38gJA=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjUvqPEMC-TfMTCTLyszOVCiosuGHm4jUiotKXq4_Q5qw38gJA=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjUvqPEMC-TfMTCTLyszOVCiosuGHm4jUiotKXq4_Q5qw38gJA=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjUvqPEMC-TfMTCTLyszOVCiosuGHm4jUiotKXq4_Q5qw38gJA=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjUvqPEMC-TfMTCTLyszOVCiosuGHm4jUiotKXq4_Q5qw38gJA=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjUvqPEMC-TfMTCTLyszOVCiosuGHm4jUiotKXq4_Q5qw38gJA=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjUvqPEMC-TfMTCTLyszOVCiosuGHm4jUiotKXq4_Q5qw38gJA=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjUvqPEMC-TfMTCTLyszOVCiosuGHm4jUiotKXq4_Q5qw38gJA=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXzUoNV4ulDCsQW4HWWo0G2gyzLAjtUNJ02YEmaWq1oSoyUAPdr=s40-c"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "//www.gstatic.com/images/branding/product/1x/groups_32dp.png",
        "meta_site_name": "",
        "canonical_link": "https://groups.google.com/g/puppet-dev/c/3WP2W_43T1w",
        "text": "This new type \"port\" handles entries in /etc/services. It uses multiple\n\nkey_attributes (name and protocol), so you are able to add e.g.\n\nmultiple telnet lines for tcp and udp. Sample usage\n\nport { 'telnet':\n\nnumber => '23',\n\nprotocol => 'tcp',\n\ndescription => 'Telnet'\n\n}\n\nBecause the type makes use of the title_patterns function this can also\n\nbe written as\n\nport { 'telnet/tcp':\n\nnumber => '23',\n\ndescription => 'Telnet'\n\n}\n\nThis type only supports tcp and udp and might not work on OS X.\n\nlib/puppet/provider/port/parsed.rb | 219 +-\n\nlib/puppet/type/port.rb | 264 +-\n\nspec/fixtures/unit/provider/port/parsed/nonuniq | 6 +\n\n.../unit/provider/port/parsed/realworld_linux | 1179 ++\n\nspec/fixtures/unit/provider/port/parsed/uniq | 7 +\n\nspec/unit/provider/port/parsed_spec.rb | 277 +\n\nspec/unit/type/port_spec.rb | 220 +\n\ntest/data/types/port/1 | 533 -\n\ntest/data/types/port/darwin |11866 --------------------\n\ntest/ral/providers/port/parsed.rb | 232 -\n\ntest/ral/type/port.rb | 147 -\n\n11 files changed, 1884 insertions(+), 13066 deletions(-)\n\ncreate mode 100644 spec/fixtures/unit/provider/port/parsed/nonuniq\n\ncreate mode 100644 spec/fixtures/unit/provider/port/parsed/realworld_linux\n\ncreate mode 100644 spec/fixtures/unit/provider/port/parsed/uniq\n\ncreate mode 100644 spec/unit/provider/port/parsed_spec.rb\n\ncreate mode 100644 spec/unit/type/port_spec.rb\n\ndelete mode 100644 test/data/types/port/1\n\ndelete mode 100644 test/data/types/port/darwin\n\ndelete mode 100755 test/ral/providers/port/parsed.rb\n\ndelete mode 100755 test/ral/type/port.rb\n\ndiff --git a/lib/puppet/provider/port/parsed.rb b/lib/puppet/provider/port/parsed.rb\n\nindex 5c973b6..dfd0aa8 100755\n\n--- a/lib/puppet/provider/port/parsed.rb\n\n+++ b/lib/puppet/provider/port/parsed.rb\n\n@@ -1,173 +1,52 @@\n\nrequire 'puppet/provider/parsedfile'\n\n-#services = nil\n\n-#case Facter.value(:operatingsystem)\n\n-#when \"Solaris\"; services = \"/etc/inet/services\"\n\n-#else\n\n-# services = \"/etc/services\"\n\n-#end\n\n-#\n\n-#Puppet::Type.type(:port).provide(:parsed,\n\n-# :parent => Puppet::Provider::ParsedFile,\n\n-# :default_target => services,\n\n-# :filetype => :flat\n\n-#) do\n\n-# text_line :comment, :match => /^\\s*#/\n\n-# text_line :blank, :match => /^\\s*$/\n\n-#\n\n-# # We're cheating horribly here -- we don't support ddp, because it assigns\n\n-# # the same number to already-used names, and the same name to different\n\n-# # numbers.\n\n-# text_line :ddp, :match => /^\\S+\\s+\\d+\\/ddp/\n\n-#\n\n-# # Also, just ignore the lines on OS X that don't have service names.\n\n-# text_line :funky_darwin, :match => /^\\s+\\d+\\//\n\n-#\n\n-# # We have to manually parse the line, since it's so darn complicated.\n\n-# record_line :parsed, :fields => %w{name port protocols alias description},\n\n-# :optional => %w{alias description} do |line|\n\n-# if line =~ /\\/ddp/\n\n-# raise \"missed ddp in #{line}\"\n\n-# end\n\n-# # The record might contain multiple port lines separated by \\n.\n\n-# hashes = line.split(\"\\n\").collect { |l| parse_port(l) }\n\n-#\n\n-# # It's easy if there's just one hash.\n\n-# if hashes.length == 1\n\n-# return hashes.shift\n\n-# end\n\n-#\n\n-# # Else, merge the two records into one.\n\n-# return port_merge(*hashes)\n\n-# end\n\n-#\n\n-# # Override how we split into lines, so that we always treat both protocol\n\n-# # lines as a single line. This drastically simplifies merging the two lines\n\n-# # into one record.\n\n-# def self.lines(text)\n\n-# names = {}\n\n-# lines = []\n\n-#\n\n-# # We organize by number, because that's apparently how the ports work.\n\n-# # You'll never be able to use Puppet to manage multiple entries\n\n-# # with the same name but different numbers, though.\n\n-# text.split(\"\\n\").each do |line|\n\n-# if line =~ /^([-\\w]+)\\s+(\\d+)\\/[^d]/ # We want to skip ddp proto stuff\n\n-# names[$1] ||= []\n\n-# names[$1] << line\n\n-# lines << [:special, $1]\n\n-# else\n\n-# lines << line\n\n-# end\n\n-# end\n\n-#\n\n-# # Now, return each line in order, but join the ones with the same name\n\n-# lines.collect do |line|\n\n-# if line.is_a?(Array)\n\n-# name = line[1]\n\n-# if names[name]\n\n-# t = names[name].join(\"\\n\")\n\n-# names.delete(name)\n\n-# t\n\n-# end\n\n-# else\n\n-# line\n\n-# end\n\n-# end.reject { |l| l.nil? }\n\n-# end\n\n-#\n\n-# # Parse a single port line, returning a hash.\n\n-# def self.parse_port(line)\n\n-# hash = {}\n\n-# if line.sub!(/^(\\S+)\\s+(\\d+)\\/(\\w+)\\s*/, '')\n\n-# hash[:name] = $1\n\n-# hash[:number] = $2\n\n-# hash[:protocols] = [$3]\n\n-#\n\n-# unless line == \"\"\n\n-# line.sub!(/^([^#]+)\\s*/) do |value|\n\n-# aliases = $1\n\n-#\n\n-# # Remove any trailing whitespace\n\n-# aliases.strip!\n\n-# unless aliases =~ /^\\s*$/\n\n-# hash[:alias] = aliases.split(/\\s+/)\n\n-# end\n\n-#\n\n-# \"\"\n\n-# end\n\n-#\n\n-# line.sub!(/^\\s*#\\s*(.+)$/) do |value|\n\n-# desc = $1\n\n-# unless desc =~ /^\\s*$/\n\n-# hash[:description] = desc.sub(/\\s*$/, '')\n\n-# end\n\n-#\n\n-# \"\"\n\n-# end\n\n-# end\n\n-# else\n\n-# if line =~ /^\\s+\\d+/ and\n\n-# Facter[\"operatingsystem\"].value == \"Darwin\"\n\n-# #Puppet.notice \"Skipping wonky OS X port entry %s\" %\n\n-# # line.inspect\n\n-# next\n\n-# end\n\n-# Puppet.notice \"Ignoring unparseable line '#{line}' in #{self.target}\"\n\n-# end\n\n-#\n\n-# if hash.empty?\n\n-# return nil\n\n-# else\n\n-# return hash\n\n-# end\n\n-# end\n\n-#\n\n-# # Merge two records into one.\n\n-# def self.port_merge(one, two)\n\n-# keys = [one.keys, two.keys].flatten.uniq\n\n-#\n\n-# # We'll be returning the 'one' hash. so make any necessary modifications\n\n-# # to it.\n\n-# keys.each do |key|\n\n-# # The easy case\n\n-# if one[key] == two[key]\n\n-# next\n\n-# elsif one[key] and ! two[key]\n\n-# next\n\n-# elsif ! one[key] and two[key]\n\n-# one[key] = two[key]\n\n-# elsif one[key].is_a?(Array) and two[key].is_a?(Array)\n\n-# one[key] = [one[key], two[key]].flatten.uniq\n\n-# else\n\n-# # Keep the info from the first hash, so don't do anything\n\n-# #Puppet.notice \"Cannot merge %s in %s with %s\" %\n\n-# # [key, one.inspect, two.inspect]\n\n-# end\n\n-# end\n\n-#\n\n-# return one\n\n-# end\n\n-#\n\n-# # Convert the current object into one or more services entry.\n\n-# def self.to_line(hash)\n\n-# unless hash[:record_type] == :parsed\n\n-# return super\n\n-# end\n\n-#\n\n-# # Strangely, most sites seem to use tabs as separators.\n\n-# hash[:protocols].collect { |proto|\n\n-# str = \"#{hash[:name]}\\t\\t#{hash[:number]}/#{proto}\"\n\n-#\n\n-# if value = hash[:alias] and value != :absent\n\n-# str += \"\\t\\t#{value.join(\" \")}\"\n\n-# end\n\n-#\n\n-# if value = hash[:description] and value != :absent\n\n-# str += \"\\t# #{value}\"\n\n-# end\n\n-# str\n\n-# }.join(\"\\n\")\n\n-# end\n\n-#end\n\n+services = nil\n\n+case Facter.value(:operatingsystem)\n\n+when \"Solaris\"\n\n+ services = \"/etc/inet/services\"\n\n+else\n\n+ services = \"/etc/services\"\n\n+end\n\n+Puppet::Type.type(:port).provide(:parsed, :parent => Puppet::Provider::ParsedFile,\n\n+ :default_target => services, :filetype => :flat) do\n\n+\n\n+ text_line :comment, :match => /^\\s*#/\n\n+ text_line :blank, :match => /^\\s*$/\n\n+\n\n+ record_line :parsed, :fields => %w{name number protocol port_aliases description},\n\n+ :optional => %w{port_aliases description},\n\n+ :match => /^(\\S*)\\s+(\\d*)\\/(\\S*)\\s*(.*?)?\\s*(?:#\\s*(.*))?$/,\n\n+ :post_parse => proc { |hash|\n\n+ hash[:protocol] = hash[:protocol].intern if hash[:protocol]\n\n+ hash[:description] = '' if hash[:description].nil? or hash[:description] == :absent\n\n+ unless hash[:port_aliases].nil? or hash[:port_aliases] == :absent\n\n+ hash[:port_aliases].gsub!(/\\s+/,' ') # Change delimiter\n\n+ end\n\n+ },\n\n+ :to_line => proc { |hash|\n\n+ [:name, :number, :protocol].each do |n|\n\n+ raise Puppet::Error, \"#{n} is a required attribute for port but not included in #{hash.inspect}\" unless hash[n] and hash[n] != :absent\n\n+ end\n\n+\n\n+ str = \"#{hash[:name]}\\t#{hash[:number]}/#{hash[:protocol]}\"\n\n+ if hash.include? :port_aliases and !hash[:port_aliases].nil? and hash[:port_aliases] != :absent\n\n+ str += \"\\t#{hash[:port_aliases]}\"\n\n+ end\n\n+ if hash.include? :description and !hash[:description].empty?\n\n+ str += \"\\t# #{hash[:description]}\"\n\n+ end\n\n+ str\n\n+ }\n\n+\n\n+ # This method assumes that the resource hash passed to the prefetch\n\n+ # method and to this method is built with uniqueness_key as the hash\n\n+ # key. To find a matching resource for a record in /etc/services we\n\n+ # just have to calculate the uniqueness_key of that record.\n\n+ def self.match(record,resources)\n\n+ uniq_key = [record[:name], record[:protocol]]\n\n+end\n\ndiff --git a/lib/puppet/type/port.rb b/lib/puppet/type/port.rb\n\nindex e199885..9a57008 100755\n\n--- a/lib/puppet/type/port.rb\n\n+++ b/lib/puppet/type/port.rb\n\n@@ -1,119 +1,147 @@\n\n-#module Puppet\n\n-# newtype(:port) do\n\n-# @doc = \"Installs and manages port entries. For most systems, these\n\n-# entries will just be in /etc/services, but some systems (notably OS X)\n\n-# will have different solutions.\"\n\n-#\n\n-# ensurable\n\n-#\n\n-# newproperty(:protocols) do\n\n-# desc \"The protocols the port uses. Valid values are *udp* and *tcp*.\n\n-# Most services have both protocols, but not all. If you want\n\n-# both protocols, you must specify that; Puppet replaces the\n\n-# current values, it does not merge with them. If you specify\n\n-# multiple protocols they must be as an array.\"\n\n-#\n\n-# def is=(value)\n\n-# case value\n\n-# when String\n\n-# @is = value.split(/\\s+/)\n\n-# else\n\n-# @is = value\n\n-# end\n\n-# end\n\n-#\n\n-# def is\n\n-# @is\n\n-# end\n\n-#\n\n-# # We actually want to return the whole array here, not just the first\n\n-# # value.\n\n-# def should\n\n-# if defined?(@should)\n\n-# if @should[0] == :absent\n\n-# return :absent\n\n-# else\n\n-# return @should\n\n-# end\n\n-# else\n\n-# return nil\n\n-# end\n\n-# end\n\n-#\n\n-# validate do |value|\n\n-# valids = [\"udp\", \"tcp\", \"ddp\", :absent]\n\n-# unless valids.include? value\n\n-# raise Puppet::Error,\n\n-# \"Protocols can be either 'udp' or 'tcp', not #{value}\"\n\n-# end\n\n-# end\n\n-# end\n\n-#\n\n-# newproperty(:number) do\n\n-# desc \"The port number.\"\n\n-# end\n\n-#\n\n-# newproperty(:description) do\n\n-# desc \"The port description.\"\n\n-# end\n\n-#\n\n-# newproperty(:port_aliases) do\n\n-# desc 'Any aliases the port might have. Multiple values must be\n\n-# specified as an array. Note that this property is not the same as\n\n-# the \"alias\" metaparam; use this property to add aliases to a port\n\n-# in the services file, and \"alias\" to aliases for use in your Puppet\n\n-# scripts.'\n\n-#\n\n-# # We actually want to return the whole array here, not just the first\n\n-# # value.\n\n-# def should\n\n-# if defined?(@should)\n\n-# if @should[0] == :absent\n\n-# return :absent\n\n-# else\n\n-# return @should\n\n-# end\n\n-# else\n\n-# return nil\n\n-# end\n\n-# end\n\n-#\n\n-# validate do |value|\n\n-# if value.is_a? String and value =~ /\\s/\n\n-# raise Puppet::Error,\n\n-# \"Aliases cannot have whitespace in them: %s\" %\n\n-# value.inspect\n\n-# end\n\n-# end\n\n-#\n\n-# munge do |value|\n\n-# unless value == \"absent\" or value == :absent\n\n-# # Add the :alias metaparam in addition to the property\n\n-# @resource.newmetaparam(\n\n-# @resource.class.metaparamclass(:alias), value\n\n-# )\n\n-# end\n\n-# value\n\n-# end\n\n-# end\n\n-#\n\n-# newproperty(:target) do\n\n-# desc \"The file in which to store service information. Only used by\n\n-# those providers that write to disk.\"\n\n-#\n\n-# defaultto { if @resource.class.defaultprovider.ancestors.include?(Puppet::Provider::ParsedFile)\n\n-# @resource.class.defaultprovider.default_target\n\n-# else\n\n-# nil\n\n-# end\n\n-# }\n\n-# end\n\n-#\n\n-# newparam(:name) do\n\n-# desc \"The port name.\"\n\n-#\n\n-# isnamevar\n\n-# end\n\n-# end\n\n-#end\n\n+require 'puppet/property/ordered_list'\n\n+require 'puppet/provider/parsedfile'\n\n+module Puppet\n\n+ newtype(:port) do\n\n+ @doc = \"Installs and manages port entries. For most systems, these\n\n+ entries will just be in `/etc/services`, but some systems (notably OS X)\n\n+ will have different solutions.\n\n+\n\n+ This type uses a composite key of (port) `name` and (port) `number` to\n\n+ identify a resource. You are able to set both keys with the resource\n\n+ title if you seperate them with a slash. So instead of specifying protocol\n\n+ explicitly:\n\n+\n\n+ port { \\\"telnet\\\":\n\n+ protocol => tcp,\n\n+ number => 23,\n\n+ }\n\n+\n\n+ you can also specify both name and protocol implicitly through the title:\n\n+\n\n+ port { \\\"telnet/tcp\\\":\n\n+ number => 23,\n\n+ }\n\n+\n\n+ for such a port but the resource title still has to be unique.\n\n+\n\n+ Example: To make sure you have the telnet port in your `/etc/services`\n\n+ file you will now write:\n\n+\n\n+ port { \\\"telnet/tcp\\\":\n\n+ number => 23,\n\n+ }\n\n+ port { \\\"telnet/udp\\\":\n\n+ number => 23,\n\n+ }\n\n+\n\n+ Currently only tcp and udp are supported and recognised when setting\n\n+ the protocol via the title.\"\n\n+\n\n+ # when :protocol is not put in the parameter hash while initialising\n\n+ [\n\n+ /^(.*)\\/(tcp|udp)$/, # Set name and protocol\n\n+ [\n\n+ [ :protocol, lambda{ |x| x.intern } ]\n\n+ ]\n\n+ ]\n\n+ ]\n\n+ end\n\n+\n\n+ ensurable\n\n+\n\n+ newparam(:name) do\n\n+ desc \"The port name.\"\n\n+\n\n+ validate do |value|\n\n+ raise Puppet::Error, \"Port name must not contain whitespace: #{value}\" if value =~ /\\s/\n\n+ end\n\n+\n\n+ to set name and protocol at the same time (an example can be found\n\n+ in the documentation of the port resource itself).\"\n\n+ end\n\n+\n\n+\n\n+ newproperty(:number) do\n\n+ desc \"The port number.\"\n\n+\n\n+ validate do |value|\n\n+ raise Puppet::Error, \"number has to be numeric, not #{value}\" unless value =~ /^-?[0-9]+$/\n\n+ raise Puppet::Error, \"number #{value} out of range (0-65535)\" unless (0...2**16).include?(Integer(value))\n\n+ newproperty(:description) do\n\n+ desc \"The description for the port. The description will appear\"\n\n+ \"as a comment in the `/etc/services` file\"\n\n+ end\n\n+\n\n+ newproperty(:port_aliases, :parent => Puppet::Property::OrderedList) do\n\n+ desc \"Any aliases the port might have. Multiple values must be\n\n+ specified as an array.\"\n\n+\n\n+ def inclusive?\n\n+ true\n\n+ end\n\n+\n\n+ def delimiter\n\n+ \" \"\n\n+ end\n\n+\n\n+ validate do |value|\n\n+ newproperty(:target) do\n\n+ desc \"The file in which to store service information. Only used by\n\n+ those providers that write to disk.\"\n\n+\n\n+ defaultto do\n\n+ if @resource.class.defaultprovider.ancestors.include?(Puppet::Provider::ParsedFile)\n\n+ @resource.class.defaultprovider.default_target\n\n+ else\n\n+ nil\n\n+ end\n\n+ end\n\n+ end\n\n+\n\n+ validate do\n\n+ unless @parameters[:name] and @parameters[:protocol]\n\n+ raise Puppet::Error, \"Attributes 'name' and 'protocol' are mandatory\"\n\n+ end\n\n+end\n\ndiff --git a/spec/fixtures/unit/provider/port/parsed/nonuniq b/spec/fixtures/unit/provider/port/parsed/nonuniq\n\nnew file mode 100644\n\nindex 0000000..f13023e\n\n+telnets 992/udp\n\n+telnet 23/udp\n\ndiff --git a/spec/fixtures/unit/provider/port/parsed/realworld_linux b/spec/fixtures/unit/provider/port/parsed/realworld_linux\n\nnew file mode 100644\n\nindex 0000000..f7fd67d\n\n--- /dev/null\n\n+++ b/spec/fixtures/unit/provider/port/parsed/realworld_linux\n\n@@ -0,0 +1,1179 @@\n\n+# /etc/services\n\n+#\n\n+# Network services, Internet style\n\n+#\n\n+# Note that it is presently the policy of IANA to assign a single well-known\n\n+# port number for both TCP and UDP; hence, most entries here have two entries\n\n+# even if the protocol doesn't support UDP operations.\n\n+#\n\n+# Some References:\n\n+# http://www.iana.org/assignments/port-numbers\n\n+# http://www.freebsd.org/cgi/cvsweb.cgi/src/etc/services\n\n+#\n\n+# Each line describes one service, and is of the form:\n\n+# service-name port/protocol [aliases ...] [# comment]\n\n+#\n\n+# See services(5) for more info.\n\n+#\n\n+\n\n+#\n\n+# IANA Assignments [Well Known Ports]\n\n+# The Well Known Ports are assigned by the IANA and on most systems can\n\n+# only be used by system (or root) processes or by programs executed by\n\n+# privileged users.\n\n+# The range for assigned ports managed by the IANA is 0-1023.\n\n+#\n\n+tcpmux 1/tcp # TCP port service multiplexer\n\n+tcpmux 1/udp\n\n+compressnet 2/tcp # Management Utility\n\n+compressnet 2/udp\n\n+compressnet 3/tcp # Compression Process\n\n+compressnet 3/udp\n\n+rje 5/tcp # Remote Job Entry\n\n+rje 5/udp\n\n+echo 7/tcp # Echo\n\n+echo 7/udp\n\n+discard 9/tcp sink null # Discard\n\n+discard 9/udp sink null\n\n+systat 11/tcp users # Active Users\n\n+systat 11/udp users\n\n+daytime 13/tcp # Daytime (RFC 867)\n\n+daytime 13/udp\n\n+#netstat 15/tcp # (was once asssigned, no more)\n\n+qotd 17/tcp quote # Quote of the Day\n\n+qotd 17/udp quote\n\n+msp 18/tcp # Message Send Protocol\n\n+msp 18/udp\n\n+chargen 19/tcp ttytst source # Character Generator\n\n+chargen 19/udp ttytst source\n\n+ftp-data 20/tcp # File Transfer [Default Data]\n\n+ftp-data 20/udp\n\n+ftp 21/tcp # File Transfer [Control]\n\n+ftp 21/udp fsp fspd\n\n+ssh 22/tcp # SSH Remote Login Protocol\n\n+ssh 22/udp\n\n+telnet 23/tcp # Telnet\n\n+telnet 23/udp\n\n+# private 24/tcp # any private mail system\n\n+# private 24/udp\n\n+smtp 25/tcp mail # Simple Mail Transfer\n\n+smtp 25/udp\n\n+nsw-fe 27/tcp # NSW User System FE\n\n+nsw-fe 27/udp\n\n+msg-icp 29/tcp # MSG ICP\n\n+msg-icp 29/udp\n\n+msg-auth 31/tcp # MSG Authentication\n\n+msg-auth 31/udp\n\n+dsp 33/tcp # Display Support Protocol\n\n+dsp 33/udp\n\n+# private 35/tcp # any private printer server\n\n+# private 35/udp\n\n+time 37/tcp timserver\n\n+time 37/udp timserver\n\n+rap 38/tcp # Route Access Protocol\n\n+rap 38/udp\n\n+rlp 39/tcp resource # Resource Location Protocol\n\n+rlp 39/udp resource\n\n+graphics 41/tcp # Graphics\n\n+graphics 41/udp\n\n+nameserver 42/tcp name # Host Name Server\n\n+nameserver 42/udp name\n\n+nicname 43/tcp whois # Who Is\n\n+nicname 43/udp whois\n\n+mpm-flags 44/tcp # MPM FLAGS Protocol\n\n+mpm-flags 44/udp\n\n+mpm 45/tcp # Message Processing Module [recv]\n\n+mpm 45/udp\n\n+mpm-snd 46/tcp # MPM [default send]\n\n+mpm-snd 46/udp\n\n+ni-ftp 47/tcp # NI FTP\n\n+ni-ftp 47/udp\n\n+auditd 48/tcp # Digital Audit Daemon\n\n+auditd 48/udp\n\n+tacacs 49/tcp # Login Host Protocol (TACACS)\n\n+tacacs 49/udp\n\n+re-mail-ck 50/tcp # Remote Mail Checking Protocol\n\n+re-mail-ck 50/udp\n\n+domain 53/tcp # Domain Name Server\n\n+domain 53/udp\n\n+xns-ch 54/tcp # XNS Clearinghouse\n\n+xns-ch 54/udp\n\n+isi-gl 55/tcp # ISI Graphics Language\n\n+isi-gl 55/udp\n\n+xns-auth 56/tcp # XNS Authentication\n\n+xns-auth 56/udp\n\n+# private 57/tcp # any private terminal access\n\n+# private 57/udp\n\n+xns-mail 58/tcp # XNS Mail\n\n+xns-mail 58/udp\n\n+# private 59/tcp # any private file service\n\n+# private 59/udp\n\n+ni-mail 61/tcp # NI MAIL\n\n+ni-mail 61/udp\n\n+acas 62/tcp # ACA Services\n\n+acas 62/udp\n\n+whois++ 63/tcp # whois++\n\n+whois++ 63/udp\n\n+covia 64/tcp # Communications Integrator (CI)\n\n+covia 64/udp\n\n+tacacs-ds 65/tcp # TACACS-Database Service\n\n+tacacs-ds 65/udp\n\n+sql*net 66/tcp # Oracle SQL*NET\n\n+sql*net 66/udp\n\n+bootps 67/tcp # Bootstrap Protocol Server (BOOTP)\n\n+bootps 67/udp\n\n+bootpc 68/tcp # Bootstrap Protocol Client (BOOTP)\n\n+bootpc 68/udp\n\n+tftp 69/tcp # Trivial File Transfer\n\n+tftp 69/udp\n\n+gopher 70/tcp # Gopher\n\n+gopher 70/udp\n\n+netrjs-1 71/tcp # Remote Job Service\n\n+netrjs-1 71/udp\n\n+netrjs-2 72/tcp\n\n+netrjs-2 72/udp\n\n+netrjs-3 73/tcp\n\n+netrjs-3 73/udp\n\n+netrjs-4 74/tcp\n\n+netrjs-4 74/udp\n\n+# private 75/tcp # any private dial out service\n\n+# private 75/udp\n\n+deos 76/tcp # Distributed External Object Store\n\n+deos 76/udp\n\n+# private 77/tcp # any private RJE service\n\n+# private 77/udp\n\n+vettcp 78/tcp # vettcp\n\n+vettcp 78/udp\n\n+finger 79/tcp # Finger\n\n+finger 79/udp\n\n+http 80/tcp www www-http # World Wide Web HTTP\n\n+http 80/udp www www-http\n\n+hosts2-ns 81/tcp # HOSTS2 Name Server\n\n+hosts2-ns 81/udp\n\n+xfer 82/tcp # XFER Utility\n\n+xfer 82/udp\n\n+mit-ml-dev 83/tcp # MIT ML Device\n\n+mit-ml-dev 83/udp\n\n+ctf 84/tcp # Common Trace Facility\n\n+ctf 84/udp\n\n+mit-ml-dev 85/tcp # MIT ML Device\n\n+mit-ml-dev 85/udp\n\n+mfcobol 86/tcp # Micro Focus Cobol\n\n+mfcobol 86/udp\n\n+# private 87/tcp # any private terminal link\n\n+# private 87/udp\n\n+kerberos 88/tcp kerberos5 krb5 # Kerberos\n\n+kerberos 88/udp kerberos5 krb5\n\n+su-mit-tg 89/tcp # SU/MIT Telnet Gateway\n\n+su-mit-tg 89/udp\n\n+dnsix 90/tcp # DNSIX Securit Attribute Token Map\n\n+dnsix 90/udp\n\n+mit-dov 91/tcp # MIT Dover Spooler\n\n+mit-dov 91/udp\n\n+npp 92/tcp # Network Printing Protocol\n\n+npp 92/udp\n\n+dcp 93/tcp # Device Control Protocol\n\n+dcp 93/udp\n\n+objcall 94/tcp # Tivoli Object Dispatcher\n\n+objcall 94/udp\n\n+supdup 95/tcp # SUPDUP\n\n+supdup 95/udp\n\n+dixie 96/tcp # DIXIE Protocol Specification\n\n+dixie 96/udp\n\n+swift-rvf 97/tcp # Swift Remote Virtural File Protocol\n\n+swift-rvf 97/udp\n\n+tacnews 98/tcp linuxconf # TAC News\n\n+tacnews 98/udp\n\n+metagram 99/tcp # Metagram Relay\n\n+metagram 99/udp\n\n+#newacct 100/tcp # [unauthorized use]\n\n+hostname 101/tcp hostnames # NIC Host Name Server\n\n+hostname 101/udp hostnames\n\n+iso-tsap 102/tcp tsap # ISO-TSAP Class 0\n\n+iso-tsap 102/udp tsap\n\n+gppitnp 103/tcp # Genesis Point-to-Point Trans Net\n\n+gppitnp 103/udp\n\n+acr-nema 104/tcp # ACR-NEMA Digital Imag. & Comm. 300\n\n+acr-nema 104/udp\n\n+cso 105/tcp csnet-ns cso-ns # CCSO name server protocol\n\n+cso 105/udp csnet-ns cso-ns\n\n+3com-tsmux 106/tcp poppassd # 3COM-TSMUX\n\n+3com-tsmux 106/udp poppassd # Eudora: Unauthorized use by insecure poppassd protocol\n\n+rtelnet 107/tcp # Remote Telnet Service\n\n+rtelnet 107/udp\n\n+snagas 108/tcp # SNA Gateway Access Server\n\n+snagas 108/udp\n\n+pop2 109/tcp pop-2 postoffice # Post Office Protocol - Version 2\n\n+pop2 109/udp pop-2\n\n+pop3 110/tcp pop-3 # Post Office Protocol - Version 3\n\n+pop3 110/udp pop-3\n\n+sunrpc 111/tcp portmapper rpcbind # SUN Remote Procedure Call\n\n+sunrpc 111/udp portmapper rpcbind\n\n+mcidas 112/tcp # McIDAS Data Transmission Protocol\n\n+mcidas 112/udp\n\n+auth 113/tcp authentication tap ident # Authentication Service\n\n+auth 113/udp\n\n+sftp 115/tcp # Simple File Transfer Protocol\n\n+sftp 115/udp\n\n+ansanotify 116/tcp # ANSA REX Notify\n\n+ansanotify 116/udp\n\n+uucp-path 117/tcp # UUCP Path Service\n\n+uucp-path 117/udp\n\n+sqlserv 118/tcp # SQL Services\n\n+sqlserv 118/udp\n\n+nntp 119/tcp readnews untp # Network News Transfer Protocol\n\n+nntp 119/udp readnews untp\n\n+cfdptkt 120/tcp # CFDPTKT\n\n+cfdptkt 120/udp\n\n+erpc 121/tcp # Encore Expedited Remote Pro.Call\n\n+erpc 121/udp\n\n+smakynet 122/tcp # SMAKYNET\n\n+smakynet 122/udp\n\n+ntp 123/tcp # Network Time Protocol\n\n+ntp 123/udp\n\n+ansatrader 124/tcp # ANSA REX Trader\n\n+ansatrader 124/udp\n\n+locus-map 125/tcp # Locus PC-Interface Net Map Ser\n\n+locus-map 125/udp\n\n+nxedit 126/tcp unitary # NXEdit\n\n+nxedit 126/udp unitary # Unisys Unitary Login\n\n+locus-con 127/tcp # Locus PC-Interface Conn Server\n\n+locus-con 127/udp\n\n+gss-xlicen 128/tcp # GSS X License Verification\n\n+gss-xlicen 128/udp\n\n+pwdgen 129/tcp # Password Generator Protocol\n\n+pwdgen 129/udp\n\n+cisco-fna 130/tcp # cisco FNATIVE\n\n+cisco-fna 130/udp\n\n+cisco-tna 131/tcp # cisco TNATIVE\n\n+cisco-tna 131/udp\n\n+cisco-sys 132/tcp # cisco SYSMAINT\n\n+cisco-sys 132/udp\n\n+statsrv 133/tcp # Statistics Service\n\n+statsrv 133/udp\n\n+ingres-net 134/tcp # INGRES-NET Service\n\n+ingres-net 134/udp\n\n+epmap 135/tcp loc-srv # DCE endpoint resolution\n\n+epmap 135/udp loc-srv\n\n+profile 136/tcp # PROFILE Naming System\n\n+profile 136/udp\n\n+netbios-ns 137/tcp # NETBIOS Name Service\n\n+netbios-ns 137/udp\n\n+netbios-dgm 138/tcp # NETBIOS Datagram Service\n\n+netbios-dgm 138/udp\n\n+netbios-ssn 139/tcp # NETBIOS Session Service\n\n+netbios-ssn 139/udp\n\n+emfis-data 140/tcp # EMFIS Data Service\n\n+emfis-data 140/udp\n\n+emfis-cntl 141/tcp # EMFIS Control Service\n\n+emfis-cntl 141/udp\n\n+imap 143/tcp imap2 # Internet Message Access Protocol\n\n+imap 143/udp imap2\n\n+uma 144/tcp # Universal Management Architecture\n\n+uma 144/udp\n\n+uaac 145/tcp # UAAC Protocol\n\n+uaac 145/udp\n\n+iso-tp0 146/tcp # ISO-TP0\n\n+iso-tp0 146/udp\n\n+iso-ip 147/tcp # ISO-IP\n\n+iso-ip 147/udp\n\n+jargon 148/tcp # Jargon\n\n+jargon 148/udp\n\n+aed-512 149/tcp # AED 512 Emulation Service\n\n+aed-512 149/udp\n\n+sql-net 150/tcp # SQL-NET\n\n+sql-net 150/udp\n\n+hems 151/tcp # HEMS\n\n+hems 151/udp\n\n+bftp 152/tcp # Background File Transfer Program\n\n+bftp 152/udp\n\n+sgmp 153/tcp # SGMP\n\n+sgmp 153/udp\n\n+netsc-prod 154/tcp # NETSC\n\n+netsc-prod 154/udp\n\n+netsc-dev 155/tcp\n\n+netsc-dev 155/udp\n\n+sqlsrv 156/tcp # SQL Service\n\n+sqlsrv 156/udp\n\n+knet-cmp 157/tcp # KNET/VM Command/Message Protocol\n\n+knet-cmp 157/udp\n\n+pcmail-srv 158/tcp # PCMail Server\n\n+pcmail-srv 158/udp\n\n+nss-routing 159/tcp # NSS-Routing\n\n+nss-routing 159/udp\n\n+sgmp-traps 160/tcp # SGMP-TRAPS\n\n+sgmp-traps 160/udp\n\n+snmp 161/tcp # Simple Net Mgmt Proto\n\n+snmp 161/udp\n\n+snmptrap 162/tcp snmp-trap # Traps for SNMP\n\n+snmptrap 162/udp snmp-trap\n\n+cmip-man 163/tcp # CMIP/TCP Manager\n\n+cmip-man 163/udp\n\n+cmip-agent 164/tcp # CMIP/TCP Agent\n\n+cmip-agent 164/udp\n\n+xns-courier 165/tcp # Xerox\n\n+xns-courier 165/udp\n\n+s-net 166/tcp # Sirius Systems\n\n+s-net 166/udp\n\n+namp 167/tcp # NAMP\n\n+namp 167/udp\n\n+rsvd 168/tcp # RSVD\n\n+rsvd 168/udp\n\n+send 169/tcp # SEND\n\n+send 169/udp\n\n+print-srv 170/tcp # Network PostScript\n\n+print-srv 170/udp\n\n+multiplex 171/tcp # Network Innovations Multiplex\n\n+multiplex 171/udp\n\n+cl/1 172/tcp # Network Innovations CL/1\n\n+cl/1 172/udp\n\n+xyplex-mux 173/tcp # Xyplex\n\n+xyplex-mux 173/udp\n\n+mailq 174/tcp # Mailer transport queue for Zmailer\n\n+mailq 174/udp\n\n+vmnet 175/tcp # VMNET\n\n+vmnet 175/udp\n\n+genrad-mux 176/tcp # GENRAD-MUX\n\n+genrad-mux 176/udp\n\n+xdmcp 177/tcp # X Display Manager Control Protocol\n\n+xdmcp 177/udp\n\n+nextstep 178/tcp NeXTStep NextStep # NextStep Window Server\n\n+nextstep 178/udp NeXTStep NextStep\n\n+bgp 179/tcp # Border Gateway Protocol\n\n+bgp 179/udp\n\n+ris 180/tcp # Intergraph\n\n+ris 180/udp\n\n+unify 181/tcp # Unify\n\n+unify 181/udp\n\n+audit 182/tcp # Unisys Audit SITP\n\n+audit 182/udp\n\n+ocbinder 183/tcp # OCBinder\n\n+ocbinder 183/udp\n\n+ocserver 184/tcp # OCServer\n\n+ocserver 184/udp\n\n+remote-kis 185/tcp # Remote-KIS\n\n+remote-kis 185/udp\n\n+kis 186/tcp # KIS Protocol\n\n+kis 186/udp\n\n+aci 187/tcp # Application Communication Interface\n\n+aci 187/udp\n\n+mumps 188/tcp # Plus Five's MUMPS\n\n+mumps 188/udp\n\n+qft 189/tcp # Queued File Transport\n\n+qft 189/udp\n\n+gacp 190/tcp # Gateway Access Control Protocol\n\n+gacp 190/udp\n\n+prospero 191/tcp # Prospero Directory Service\n\n+prospero 191/udp\n\n+osu-nms 192/tcp # OSU Network Monitoring System\n\n+osu-nms 192/udp\n\n+srmp 193/tcp # Spider Remote Monitoring Protocol\n\n+srmp 193/udp\n\n+irc 194/tcp # Internet Relay Chat Protocol\n\n+irc 194/udp\n\n+dn6-nlm-aud 195/tcp # DNSIX Network Level Module Audit\n\n+dn6-nlm-aud 195/udp\n\n+dn6-smm-red 196/tcp # DNSIX Session Mgt Module Audit Redir\n\n+dn6-smm-red 196/udp\n\n+dls 197/tcp # Directory Location Service\n\n+dls 197/udp\n\n+dls-mon 198/tcp # Directory Location Service Monitor\n\n+dls-mon 198/udp\n\n+smux 199/tcp # SNMP Unix Multiplexer\n\n+smux 199/udp\n\n+src 200/tcp # IBM System Resource Controller\n\n+src 200/udp\n\n+at-rtmp 201/tcp # AppleTalk Routing Maintenance\n\n+at-rtmp 201/udp\n\n+at-nbp 202/tcp # AppleTalk Name Binding\n\n+at-nbp 202/udp\n\n+at-echo 204/tcp # AppleTalk Echo\n\n+at-echo 204/udp\n\n+at-zis 206/tcp # AppleTalk Zone Information\n\n+at-zis 206/udp\n\n+qmtp 209/tcp # The Quick Mail Transfer Protocol\n\n+qmtp 209/udp\n\n+z39.50 210/tcp wais z3950 # ANSI Z39.50\n\n+z39.50 210/udp wais z3950\n\n+914c/g 211/tcp # Texas Instruments 914C/G Terminal\n\n+914c/g 211/udp\n\n+anet 212/tcp # ATEXSSTR\n\n+anet 212/udp\n\n+ipx 213/tcp # IPX\n\n+ipx 213/udp\n\n+imap3 220/tcp # Interactive Mail Access\n\n+imap3 220/udp\n\n+link 245/tcp # ttylink\n\n+link 245/udp\n\n+pawserv 345/tcp # Perf Analysis Workbench\n\n+pawserv 345/udp\n\n+zserv 346/tcp # Zebra server\n\n+zserv 346/udp\n\n+fatserv 347/tcp # Fatmen Server\n\n+fatserv 347/udp\n\n+scoi2odialog 360/tcp # scoi2odialog\n\n+scoi2odialog 360/udp\n\n+semantix 361/tcp # Semantix\n\n+semantix 361/udp\n\n+srssend 362/tcp # SRS Send\n\n+srssend 362/udp\n\n+rsvp_tunnel 363/tcp # RSVP Tunnel\n\n+rsvp_tunnel 363/udp\n\n+aurora-cmgr 364/tcp # Aurora CMGR\n\n+aurora-cmgr 364/udp\n\n+dtk 365/tcp # Deception Tool Kit\n\n+dtk 365/udp\n\n+odmr 366/tcp # ODMR\n\n+odmr 366/udp\n\n+rpc2portmap 369/tcp # Coda portmapper\n\n+rpc2portmap 369/udp\n\n+codaauth2 370/tcp # Coda authentication server\n\n+codaauth2 370/udp\n\n+clearcase 371/tcp # Clearcase\n\n+clearcase 371/udp\n\n+ulistproc 372/tcp ulistserv # UNIX Listserv\n\n+ulistproc 372/udp ulistserv\n\n+ldap 389/tcp # Lightweight Directory Access Protocol\n\n+ldap 389/udp\n\n+imsp 406/tcp # Interactive Mail Support Protocol\n\n+imsp 406/udp\n\n+svrloc 427/tcp # Server Location\n\n+svrloc 427/udp\n\n+mobileip-agent 434/tcp # MobileIP-Agent\n\n+mobileip-agent 434/udp\n\n+mobilip-mn 435/tcp # MobilIP-MN\n\n+mobilip-mn 435/udp\n\n+https 443/tcp # MCom\n\n+https 443/udp\n\n+snpp 444/tcp # Simple Network Paging Protocol\n\n+snpp 444/udp\n\n+microsoft-ds 445/tcp Microsoft-DS\n\n+microsoft-ds 445/udp Microsoft-DS\n\n+kpasswd 464/tcp kpwd # Kerberos \"passwd\"\n\n+kpasswd 464/udp kpwd\n\n+urd 465/tcp smtps ssmtp # URL Rendesvous Directory for SSM / smtp protocol over TLS/SSL\n\n+igmpv3lite 465/udp smtps ssmtp # IGMP over UDP for SSM\n\n+photuris 468/tcp\n\n+photuris 468/udp\n\n+rcp 469/tcp # Radio Control Protocol\n\n+rcp 469/udp\n\n+saft 487/tcp # Simple Asynchronous File Transfer\n\n+saft 487/udp\n\n+gss-http 488/tcp\n\n+gss-http 488/udp\n\n+pim-rp-disc 496/tcp\n\n+pim-rp-disc 496/udp\n\n+isakmp 500/tcp # IPsec - Internet Security Association and Key Management Protocol\n\n+isakmp 500/udp\n\n+exec 512/tcp # remote process execution\n\n+comsat 512/udp biff # notify users of new mail received\n\n+login 513/tcp # remote login a la telnet\n\n+who 513/udp whod # who's logged in to machines\n\n+shell 514/tcp cmd # no passwords used\n\n+syslog 514/udp\n\n+printer 515/tcp spooler # line printer spooler\n\n+printer 515/udp spooler\n\n+videotex 516/tcp\n\n+videotex 516/udp\n\n+talk 517/tcp # like tenex link\n\n+talk 517/udp\n\n+ntalk 518/tcp\n\n+ntalk 518/udp\n\n+utime 519/tcp unixtime\n\n+utime 519/udp unixtime\n\n+efs 520/tcp # extended file name server\n\n+router 520/udp route routed # local routing process\n\n+ripng 521/tcp\n\n+ripng 521/udp\n\n+ulp 522/tcp\n\n+ulp 522/udp\n\n+ibm-db2 523/tcp\n\n+ibm-db2 523/udp\n\n+ncp 524/tcp\n\n+ncp 524/udp\n\n+timed 525/tcp timeserver\n\n+timed 525/udp timeserver\n\n+tempo 526/tcp newdate\n\n+tempo 526/udp newdate\n\n+courier 530/tcp rpc\n\n+courier 530/udp rpc\n\n+conference 531/tcp chat\n\n+conference 531/udp chat\n\n+netnews 532/tcp readnews\n\n+netnews 532/udp readnews\n\n+netwall 533/tcp # -for emergency broadcasts\n\n+netwall 533/udp\n\n+mm-admin 534/tcp # MegaMedia Admin\n\n+mm-admin 534/udp\n\n+iiop 535/tcp\n\n+iiop 535/udp\n\n+opalis-rdv 536/tcp\n\n+opalis-rdv 536/udp\n\n+nmsp 537/tcp # Networked Media Streaming Protocol\n\n+nmsp 537/udp\n\n+gdomap 538/tcp # GNUstep distributed objects\n\n+gdomap 538/udp\n\n+uucp 540/tcp uucpd # uucp daemon\n\n+uucp 540/udp uucpd\n\n+klogin 543/tcp # Kerberized `rlogin' (v5)\n\n+klogin 543/udp\n\n+kshell 544/tcp krcmd # Kerberized `rsh' (v5)\n\n+kshell 544/udp krcmd\n\n+appleqtcsrvr 545/tcp\n\n+appleqtcsrvr 545/udp\n\n+dhcpv6-client 546/tcp # DHCPv6 Client\n\n+dhcpv6-client 546/udp\n\n+dhcpv6-server 547/tcp # DHCPv6 Server\n\n+dhcpv6-server 547/udp\n\n+afpovertcp 548/tcp # AFP over TCP\n\n+afpovertcp 548/udp\n\n+rtsp 554/tcp # Real Time Stream Control Protocol\n\n+rtsp 554/udp\n\n+dsf 555/tcp\n\n+dsf 555/udp\n\n+remotefs 556/tcp rfs_server rfs # Brunhoff remote filesystem\n\n+remotefs 556/udp rfs_server rfs\n\n+nntps 563/tcp snntp # NNTP over SSL\n\n+nntps 563/udp snntp\n\n+9pfs 564/tcp # plan 9 file service\n\n+9pfs 564/udp\n\n+whoami 565/tcp\n\n+whoami 565/udp\n\n+submission 587/tcp # mail message submission\n\n+submission 587/udp\n\n+http-alt 591/tcp # FileMaker, Inc. - HTTP Alternate\n\n+http-alt 591/udp\n\n+nqs 607/tcp # Network Queuing system\n\n+nqs 607/udp\n\n+npmp-local 610/tcp dqs313_qmaster # npmp-local / DQS\n\n+npmp-local 610/udp dqs313_qmaster\n\n+npmp-gui 611/tcp dqs313_execd # npmp-gui / DQS\n\n+npmp-gui 611/udp dqs313_execd\n\n+hmmp-ind 612/tcp dqs313_intercell # HMMP Indication / DQS\n\n+hmmp-ind 612/udp dqs313_intercell\n\n+cryptoadmin 624/tcp # Crypto Admin\n\n+cryptoadmin 624/udp\n\n+dec_dlm 625/tcp # DEC DLM\n\n+dec_dlm 625/udp\n\n+asia 626/tcp\n\n+asia 626/udp\n\n+passgo-tivoli 627/tcp # PassGo Tivoli\n\n+passgo-tivoli 627/udp\n\n+qmqp 628/tcp # Qmail QMQP\n\n+qmqp 628/udp\n\n+3com-amp3 629/tcp\n\n+3com-amp3 629/udp\n\n+rda 630/tcp\n\n+rda 630/udp\n\n+ipp 631/tcp # Internet Printing Protocol\n\n+ipp 631/udp\n\n+ldaps 636/tcp # LDAP over SSL\n\n+ldaps 636/udp\n\n+tinc 655/tcp # TINC control port\n\n+tinc 655/udp\n\n+acap 674/tcp # Application Configuration Access Protocol\n\n+acap 674/udp\n\n+asipregistry 687/tcp\n\n+asipregistry 687/udp\n\n+realm-rusd 688/tcp # ApplianceWare managment protocol\n\n+realm-rusd 688/udp\n\n+nmap 689/tcp # Opensource Network Mapper\n\n+nmap 689/udp\n\n+ha-cluster 694/tcp # Heartbeat HA-cluster\n\n+ha-cluster 694/udp\n\n+epp 700/tcp # Extensible Provisioning Protocol\n\n+epp 700/udp\n\n+iris-beep 702/tcp # IRIS over BEEP\n\n+iris-beep 702/udp\n\n+silc 706/tcp # SILC\n\n+silc 706/udp\n\n+kerberos-adm 749/tcp # Kerberos `kadmin' (v5)\n\n+kerberos-adm 749/udp\n\n+kerberos-iv 750/tcp kerberos4 kdc # Kerberos (server)\n\n+kerberos-iv 750/udp kerberos4 kdc\n\n+pump 751/tcp kerberos_master\n\n+pump 751/udp kerberos_master # Kerberos authentication\n\n+qrh 752/tcp passwd_server\n\n+qrh 752/udp passwd_server # Kerberos passwd server\n\n+rrh 753/tcp\n\n+rrh 753/udp\n\n+tell 754/tcp send krb_prop krb5_prop # Kerberos slave propagation\n\n+tell 754/udp send\n\n+nlogin 758/tcp\n\n+nlogin 758/udp\n\n+con 759/tcp\n\n+con 759/udp\n\n+ns 760/tcp krbupdate kreg # Kerberos registration\n\n+ns 760/udp\n\n+webster 765/tcp # Network dictionary\n\n+webster 765/udp\n\n+phonebook 767/tcp # Network phonebook\n\n+phonebook 767/udp\n\n+rsync 873/tcp # rsync\n\n+rsync 873/udp\n\n+ftps-data 989/tcp # ftp protocol, data, over TLS/SSL\n\n+ftps-data 989/udp\n\n+ftps 990/tcp # ftp protocol, control, over TLS/SSL\n\n+ftps 990/udp\n\n+nas 991/tcp # Netnews Administration System\n\n+nas 991/udp\n\n+telnets 992/udp\n\n+imaps 993/tcp # imap4 protocol over TLS/SSL\n\n+imaps 993/udp\n\n+ircs 994/tcp # irc protocol over TLS/SSL\n\n+ircs 994/udp\n\n+pop3s 995/tcp # pop3 protocol over TLS/SSL\n\n+pop3s 995/udp\n\n+\n\n+#\n\n+# IANA Assignments [Registered Ports]\n\n+#\n\n+# The Registered Ports are listed by the IANA and on most systems can be\n\n+# used by ordinary user processes or programs executed by ordinary\n\n+# users.\n\n+# Ports are used in the TCP [RFC793] to name the ends of logical\n\n+# connections which carry long term conversations. For the purpose of\n\n+# providing services to unknown callers, a service contact port is\n\n+# defined. This list specifies the port used by the server process as\n\n+# its contact port.\n\n+# The IANA registers uses of these ports as a convenience to the\n\n+# community.\n\n+# To the extent possible, these same port assignments are used with the\n\n+# UDP [RFC768].\n\n+# The Registered Ports are in the range 1024-49151.\n\n+#\n\n+imgames 1077/tcp\n\n+imgames 1077/udp\n\n+socks 1080/tcp # socks proxy server\n\n+socks 1080/udp\n\n+rmiregistry 1099/tcp # Java RMI Registry\n\n+rmiregistry 1099/udp\n\n+bnetgame 1119/tcp # Battle.net Chat/Game Protocol\n\n+bnetgame 1119/udp\n\n+bnetfile 1120/tcp # Battle.net File Transfer Protocol\n\n+bnetfile 1120/udp\n\n+hpvmmcontrol 1124/tcp # HP VMM Control\n\n+hpvmmcontrol 1124/udp\n\n+hpvmmagent 1125/tcp # HP VMM Agent\n\n+hpvmmagent 1125/udp\n\n+hpvmmdata 1126/tcp # HP VMM Agent\n\n+hpvmmdata 1126/udp\n\n+resacommunity 1154/tcp # Community Service\n\n+resacommunity 1154/udp\n\n+3comnetman 1181/tcp # 3Com Net Management\n\n+3comnetman 1181/udp\n\n+mysql-cluster 1186/tcp # MySQL Cluster Manager\n\n+mysql-cluster 1186/udp\n\n+alias 1187/tcp # Alias Service\n\n+alias 1187/udp\n\n+openvpn 1194/tcp # OpenVPN\n\n+openvpn 1194/udp\n\n+kazaa 1214/tcp # KAZAA\n\n+kazaa 1214/udp\n\n+bvcontrol 1236/tcp rmtcfg # Gracilis Packeten remote config server\n\n+bvcontrol 1236/udp rmtcfg\n\n+nessus 1241/tcp # Nessus vulnerability assessment scanner\n\n+nessus 1241/udp\n\n+h323hostcallsc 1300/tcp # H323 Host Call Secure\n\n+h323hostcallsc 1300/udp\n\n+lotusnote 1352/tcp # Lotus Note\n\n+lotusnote 1352/udp\n\n+ms-sql-s 1433/tcp # Microsoft-SQL-Server\n\n+ms-sql-s 1433/udp\n\n+ms-sql-m 1434/tcp # Microsoft-SQL-Monitor\n\n+ms-sql-m 1434/udp\n\n+ica 1494/tcp # Citrix ICA Client\n\n+ica 1494/udp\n\n+wins 1512/tcp # Microsoft's Windows Internet Name Service\n\n+wins 1512/udp\n\n+ingreslock 1524/tcp\n\n+ingreslock 1524/udp\n\n+prospero-np 1525/tcp # Prospero non-privileged\n\n+prospero-np 1525/udp\n\n+datametrics 1645/tcp old-radius # datametrics / old radius entry\n\n+datametrics 1645/udp old-radius\n\n+sa-msg-port 1646/tcp old-radacct # sa-msg-port / old radacct entry\n\n+sa-msg-port 1646/udp old-radacct\n\n+rsap 1647/tcp\n\n+rsap 1647/udp\n\n+concurrent-lm 1648/tcp\n\n+concurrent-lm 1648/udp\n\n+kermit 1649/tcp\n\n+kermit 1649/udp\n\n+l2tp 1701/tcp\n\n+l2tp 1701/udp\n\n+h323gatedisc 1718/tcp\n\n+h323gatedisc 1718/udp\n\n+h323gatestat 1719/tcp\n\n+h323gatestat 1719/udp\n\n+h323hostcall 1720/tcp\n\n+h323hostcall 1720/udp\n\n+iberiagames 1726/tcp\n\n+iberiagames 1726/udp\n\n+gamegen1 1738/tcp\n\n+gamegen1 1738/udp\n\n+tftp-mcast 1758/tcp\n\n+tftp-mcast 1758/udp\n\n+hello 1789/tcp\n\n+hello 1789/udp\n\n+radius 1812/tcp # Radius\n\n+radius 1812/udp\n\n+radius-acct 1813/tcp radacct # Radius Accounting\n\n+radius-acct 1813/udp radacct\n\n+mtp 1911/tcp # Starlight Networks Multimedia Transport Protocol\n\n+mtp 1911/udp\n\n+egs 1926/tcp # Evolution Game Server\n\n+egs 1926/udp\n\n+unix-status 1957/tcp # remstats unix-status server\n\n+unix-status 1957/udp\n\n+hsrp 1985/tcp # Hot Standby Router Protocol\n\n+hsrp 1985/udp\n\n+licensedaemon 1986/tcp # cisco license management\n\n+licensedaemon 1986/udp\n\n+tr-rsrb-p1 1987/tcp # cisco RSRB Priority 1 port\n\n+tr-rsrb-p1 1987/udp\n\n+tr-rsrb-p2 1988/tcp # cisco RSRB Priority 2 port\n\n+tr-rsrb-p2 1988/udp\n\n+tr-rsrb-p3 1989/tcp # cisco RSRB Priority 3 port\n\n+tr-rsrb-p3 1989/udp\n\n+stun-p1 1990/tcp # cisco STUN Priority 1 port\n\n+stun-p1 1990/udp\n\n+stun-p2 1991/tcp # cisco STUN Priority 2 port\n\n+stun-p2 1991/udp\n\n+stun-p3 1992/tcp # cisco STUN Priority 3 port\n\n+stun-p3 1992/udp\n\n+snmp-tcp-port 1994/tcp # cisco SNMP TCP port\n\n+snmp-tcp-port 1994/udp\n\n+stun-port 1995/tcp # cisco serial tunnel port\n\n+stun-port 1995/udp\n\n+perf-port 1996/tcp # cisco Remote SRB port\n\n+perf-port 1996/udp\n\n+gdp-port 1997/tcp # cisco Gateway Discovery Protocol\n\n+gdp-port 1997/udp\n\n+x25-svc-port 1998/tcp # cisco X.25 service (XOT)\n\n+x25-svc-port 1998/udp\n\n+tcp-id-port 1999/tcp # cisco identification port\n\n+tcp-id-port 1999/udp\n\n+cisco-sccp 2000/tcp sieve # Cisco SCCP\n\n+cisco-sccp 2000/udp sieve\n\n+nfs 2049/tcp # Network File System\n\n+nfs 2049/udp\n\n+radsec 2083/tcp # Secure Radius Service\n\n+radsec 2083/udp\n\n+gnunet 2086/tcp # GNUnet\n\n+gnunet 2086/udp\n\n+rtcm-sc104 2101/tcp # RTCM SC-104\n\n+rtcm-sc104 2101/udp\n\n+zephyr-srv 2102/tcp # Zephyr server\n\n+zephyr-srv 2102/udp\n\n+zephyr-clt 2103/tcp # Zephyr serv-hm connection\n\n+zephyr-clt 2103/udp\n\n+zephyr-hm 2104/tcp # Zephyr hostmanager\n\n+zephyr-hm 2104/udp\n\n+eyetv 2170/tcp # EyeTV Server Port\n\n+eyetv 2170/udp\n\n+msfw-storage 2171/tcp # MS Firewall Storage\n\n+msfw-storage 2171/udp\n\n+msfw-s-storage 2172/tcp # MS Firewall SecureStorage\n\n+msfw-s-storage 2172/udp\n\n+msfw-replica 2173/tcp # MS Firewall Replication\n\n+msfw-replica 2173/udp\n\n+msfw-array 2174/tcp # MS Firewall Intra Array\n\n+msfw-array 2174/udp\n\n+airsync 2175/tcp # Microsoft Desktop AirSync Protocol\n\n+airsync 2175/udp\n\n+rapi 2176/tcp # Microsoft ActiveSync Remote API\n\n+rapi 2176/udp\n\n+qwave 2177/tcp # qWAVE Bandwidth Estimate\n\n+qwave 2177/udp\n\n+tivoconnect 2190/tcp # TiVoConnect Beacon\n\n+tivoconnect 2190/udp\n\n+tvbus 2191/tcp # TvBus Messaging\n\n+tvbus 2191/udp\n\n+mysql-im 2273/tcp # MySQL Instance Manager\n\n+mysql-im 2273/udp\n\n+dict-lookup 2289/tcp # Lookup dict server\n\n+dict-lookup 2289/udp\n\n+redstorm_join 2346/tcp # Game Connection Port\n\n+redstorm_join 2346/udp\n\n+redstorm_find 2347/tcp # Game Announcement and Location\n\n+redstorm_find 2347/udp\n\n+redstorm_info 2348/tcp # Information to query for game status\n\n+redstorm_info 2348/udp\n\n+cvspserver 2401/tcp # CVS client/server operations\n\n+cvspserver 2401/udp\n\n+venus 2430/tcp # codacon port\n\n+venus 2430/udp\n\n+venus-se 2431/tcp # tcp side effects\n\n+venus-se 2431/udp\n\n+codasrv 2432/tcp # not used\n\n+codasrv 2432/udp\n\n+codasrv-se 2433/tcp # tcp side effects\n\n+codasrv-se 2433/udp\n\n+netadmin 2450/tcp\n\n+netadmin 2450/udp\n\n+netchat 2451/tcp\n\n+netchat 2451/udp\n\n+snifferclient 2452/tcp\n\n+snifferclient 2452/udp\n\n+ppcontrol 2505/tcp # PowerPlay Control\n\n+ppcontrol 2505/udp\n\n+lstp 2559/tcp\n\n+lstp 2559/udp\n\n+mon 2583/tcp\n\n+mon 2583/udp\n\n+hpstgmgr 2600/tcp zebrasrv\n\n+hpstgmgr 2600/udp zebrasrv\n\n+discp-client 2601/tcp zebra # discp client\n\n+discp-client 2601/udp zebra\n\n+discp-server 2602/tcp ripd # discp server\n\n+discp-server 2602/udp ripd\n\n+servicemeter 2603/tcp ripngd # Service Meter\n\n+servicemeter 2603/udp ripngd\n\n+nsc-ccs 2604/tcp ospfd # NSC CCS\n\n+nsc-ccs 2604/udp ospfd\n\n+nsc-posa 2605/tcp bgpd # NSC POSA\n\n+nsc-posa 2605/udp bgpd\n\n+netmon 2606/tcp ospf6d # Dell Netmon\n\n+netmon 2606/udp ospf6d\n\n+connection 2607/tcp # Dell Connection\n\n+connection 2607/udp\n\n+wag-service 2608/tcp # Wag Service\n\n+wag-service 2608/udp\n\n+dict 2628/tcp # Dictionary server\n\n+dict 2628/udp\n\n+exce 2769/tcp # eXcE\n\n+exce 2769/udp\n\n+dvr-esm 2804/tcp # March Networks Digital Video Recorders and Enterprise Service Manager products\n\n+dvr-esm 2804/udp\n\n+corbaloc 2809/tcp # CORBA LOC\n\n+corbaloc 2809/udp\n\n+ndtp 2882/tcp # Network Dictionary Transfer Protocol\n\n+ndtp 2882/udp\n\n+gamelobby 2914/tcp # Game Lobby\n\n+gamelobby 2914/udp\n\n+gds_db 3050/tcp # InterBase server\n\n+gds_db 3050/udp\n\n+xbox 3074/tcp # Xbox game port\n\n+xbox 3074/udp\n\n+icpv2 3130/tcp icp # Internet Cache Protocol (Squid)\n\n+icpv2 3130/udp icp\n\n+nm-game-admin 3148/tcp # NetMike Game Administrator\n\n+nm-game-admin 3148/udp\n\n+nm-game-server 3149/tcp # NetMike Game Server\n\n+nm-game-server 3149/udp\n\n+mysql 3306/tcp # MySQL\n\n+mysql 3306/udp\n\n+sftu 3326/tcp\n\n+sftu 3326/udp\n\n+trnsprntproxy 3346/tcp # Transparent Proxy\n\n+trnsprntproxy 3346/udp\n\n+ms-wbt-server 3389/tcp rdp # MS WBT Server\n\n+ms-wbt-server 3389/udp rdp # Microsoft Remote Desktop Protocol\n\n+prsvp 3455/tcp # RSVP Port\n\n+prsvp 3455/udp\n\n+nut 3493/tcp # Network UPS Tools\n\n+nut 3493/udp\n\n+ironstorm 3504/tcp # IronStorm game server\n\n+ironstorm 3504/udp\n\n+cctv-port 3559/tcp # CCTV control port\n\n+cctv-port 3559/udp\n\n+iw-mmogame 3596/tcp # Illusion Wireless MMOG\n\n+iw-mmogame 3596/udp\n\n+distcc 3632/tcp # Distributed Compiler\n\n+distcc 3632/udp\n\n+daap 3689/tcp # Digital Audio Access Protocol\n\n+daap 3689/udp\n\n+svn 3690/tcp # Subversion\n\n+svn 3690/udp\n\n+blizwow 3724/tcp # World of Warcraft\n\n+blizwow 3724/udp\n\n+netboot-pxe 3928/tcp pxe # PXE NetBoot Manager\n\n+netboot-pxe 3928/udp pxe\n\n+smauth-port 3929/tcp # AMS Port\n\n+smauth-port 3929/udp\n\n+treehopper 3959/tcp # Tree Hopper Networking\n\n+treehopper 3959/udp\n\n+cobraclient 3970/tcp # Cobra Client\n\n+cobraclient 3970/udp\n\n+cobraserver 3971/tcp # Cobra Server\n\n+cobraserver 3971/udp\n\n+pxc-spvr-ft 4002/tcp pxc-spvr-ft\n\n+pxc-spvr-ft 4002/udp pxc-spvr-ft\n\n+pxc-splr-ft 4003/tcp pxc-splr-ft rquotad\n\n+pxc-splr-ft 4003/udp pxc-splr-ft rquotad\n\n+pxc-roid 4004/tcp pxc-roid\n\n+pxc-roid 4004/udp pxc-roid\n\n+pxc-pin 4005/tcp pxc-pin\n\n+pxc-pin 4005/udp pxc-pin\n\n+pxc-spvr 4006/tcp pxc-spvr\n\n+pxc-spvr 4006/udp pxc-spvr\n\n+pxc-splr 4007/tcp pxc-splr\n\n+pxc-splr 4007/udp pxc-splr\n\n+xgrid 4111/tcp # Mac OS X Server Xgrid\n\n+xgrid 4111/udp\n\n+bzr 4155/tcp # Bazaar Version Control System\n\n+bzr 4155/udp # Bazaar version control system\n\n+rwhois 4321/tcp # Remote Who Is\n\n+rwhois 4321/udp\n\n+epmd 4369/tcp # Erlang Port Mapper Daemon\n\n+epmd 4369/udp\n\n+krb524 4444/tcp\n\n+krb524 4444/udp\n\n+ipsec-nat-t 4500/tcp # IPsec NAT-Traversal\n\n+ipsec-nat-t 4500/udp\n\n+hylafax 4559/tcp # HylaFAX client-server protocol (new)\n\n+hylafax 4559/udp\n\n+piranha1 4600/tcp\n\n+piranha1 4600/udp\n\n+playsta2-app 4658/tcp # PlayStation2 App Port\n\n+playsta2-app 4658/udp\n\n+playsta2-lob 4659/tcp # PlayStation2 Lobby Port\n\n+playsta2-lob 4659/udp\n\n+snap 4752/tcp # Simple Network Audio Protocol\n\n+snap 4752/udp\n\n+radmin-port 4899/tcp # RAdmin Port\n\n+radmin-port 4899/udp\n\n+rfe 5002/tcp # Radio Free Ethernet\n\n+rfe 5002/udp\n\n+ita-agent 5051/tcp # ITA Agent\n\n+ita-agent 5051/udp\n\n+sdl-ets 5081/tcp # SDL - Ent Trans Server\n\n+sdl-ets 5081/udp\n\n+bzflag 5154/tcp # BZFlag game server\n\n+bzflag 5154/udp\n\n+aol 5190/tcp # America-Online\n\n+aol 5190/udp\n\n+xmpp-client 5222/tcp # XMPP Client Connection\n\n+xmpp-client 5222/udp\n\n+caevms 5251/tcp # CA eTrust VM Service\n\n+caevms 5251/udp\n\n+xmpp-server 5269/tcp # XMPP Server Connection\n\n+xmpp-server 5269/udp\n\n+cfengine 5308/tcp # CFengine\n\n+cfengine 5308/udp\n\n+nat-pmp 5351/tcp # NAT Port Mapping Protocol\n\n+nat-pmp 5351/udp\n\n+dns-llq 5352/tcp # DNS Long-Lived Queries\n\n+dns-llq 5352/udp\n\n+mdns 5353/tcp # Multicast DNS\n\n+mdns 5353/udp\n\n+mdnsresponder 5354/tcp noclog # Multicast DNS Responder IPC\n\n+mdnsresponder 5354/udp noclog # noclogd with TCP (nocol)\n\n+llmnr 5355/tcp hostmon # Link-Local Multicast Name Resolution\n\n+llmnr 5355/udp hostmon # hostmon uses TCP (nocol)\n\n+dj-ice 5419/tcp\n\n+dj-ice 5419/udp\n\n+beyond-remote 5424/tcp # Beyond Remote\n\n+beyond-remote 5424/udp\n\n+br-channel 5425/tcp # Beyond Remote Command Channel\n\n+br-channel 5425/udp\n\n+postgresql 5432/tcp # POSTGRES\n\n+postgresql 5432/udp\n\n+sgi-eventmond 5553/tcp # SGI Eventmond Port\n\n+sgi-eventmond 5553/udp\n\n+sgi-esphttp 5554/tcp # SGI ESP HTTP\n\n+sgi-esphttp 5554/udp\n\n+cvsup 5999/tcp # CVSup\n\n+cvsup 5999/udp\n\n+x11 6000/tcp # X Window System\n\n+x11 6000/udp\n\n+kftp-data 6620/tcp # Kerberos V5 FTP Data\n\n+kftp-data 6620/udp\n\n+kftp 6621/tcp # Kerberos V5 FTP Control\n\n+kftp 6621/udp\n\n+ktelnet 6623/tcp # Kerberos V5 Telnet\n\n+ktelnet 6623/udp\n\n+gnutella-svc 6346/tcp\n\n+gnutella-svc 6346/udp\n\n+gnutella-rtr 6347/tcp\n\n+gnutella-rtr 6347/udp\n\n+sane-port 6566/tcp # SANE Network Scanner Control Port\n\n+sane-port 6566/udp\n\n+parsec-game 6582/tcp # Parsec Gameserver\n\n+parsec-game 6582/udp\n\n+afs3-fileserver 7000/tcp bbs # file server itself\n\n+afs3-fileserver 7000/udp bbs\n\n+afs3-callback 7001/tcp # callbacks to cache managers\n\n+afs3-callback 7001/udp\n\n+afs3-prserver 7002/tcp # users & groups database\n\n+afs3-prserver 7002/udp\n\n+afs3-vlserver 7003/tcp # volume location database\n\n+afs3-vlserver 7003/udp\n\n+afs3-kaserver 7004/tcp # AFS/Kerberos authentication\n\n+afs3-kaserver 7004/udp\n\n+afs3-volser 7005/tcp # volume managment server\n\n+afs3-volser 7005/udp\n\n+afs3-errors 7006/tcp # error interpretation service\n\n+afs3-errors 7006/udp\n\n+afs3-bos 7007/tcp # basic overseer process\n\n+afs3-bos 7007/udp\n\n+afs3-update 7008/tcp # server-to-server updater\n\n+afs3-update 7008/udp\n\n+afs3-rmtsys 7009/tcp # remote cache manager service\n\n+afs3-rmtsys 7009/udp\n\n+font-service 7100/tcp xfs # X Font Service\n\n+font-service 7100/udp xfs\n\n+sncp 7560/tcp # Sniffer Command Protocol\n\n+sncp 7560/udp\n\n+soap-http 7627/tcp # SOAP Service Port\n\n+soap-http 7627/udp\n\n+http-alt 8008/tcp # HTTP Alternate\n\n+http-alt 8008/udp\n\n+http-alt 8080/tcp webcache # HTTP Alternate\n\n+http-alt 8080/udp webcache # WWW caching service\n\n+sunproxyadmin 8081/tcp tproxy # Sun Proxy Admin Service\n\n+sunproxyadmin 8081/udp tproxy # Transparent Proxy\n\n+pichat 9009/tcp # Pichat Server\n\n+pichat 9009/udp\n\n+bacula-dir 9101/tcp # Bacula Director\n\n+bacula-dir 9101/udp\n\n+bacula-fd 9102/tcp # Bacula File Daemon\n\n+bacula-fd 9102/udp\n\n+bacula-sd 9103/tcp # Bacula Storage Daemon\n\n+bacula-sd 9103/udp\n\n+dddp 9131/tcp # Dynamic Device Discovery\n\n+dddp 9131/udp\n\n+wap-wsp 9200/tcp # WAP connectionless session service\n\n+wap-wsp 9200/udp\n\n+wap-wsp-wtp 9201/tcp # WAP session service\n\n+wap-wsp-wtp 9201/udp\n\n+wap-wsp-s 9202/tcp # WAP secure connectionless session service\n\n+wap-wsp-s 9202/udp\n\n+wap-wsp-wtp-s 9203/tcp # WAP secure session service\n\n+wap-wsp-wtp-s 9203/udp\n\n+wap-vcard 9204/tcp # WAP vCard\n\n+wap-vcard 9204/udp\n\n+wap-vcal 9205/tcp # WAP vCal\n\n+wap-vcal 9205/udp\n\n+wap-vcard-s 9206/tcp # WAP vCard Secure\n\n+wap-vcard-s 9206/udp\n\n+wap-vcal-s 9207/tcp # WAP vCal Secure\n\n+wap-vcal-s 9207/udp\n\n+git 9418/tcp # git pack transfer service\n\n+git 9418/udp\n\n+cba8 9593/tcp # LANDesk Management Agent\n\n+cba8 9593/udp\n\n+davsrc 9800/tcp # WebDav Source Port\n\n+davsrc 9800/udp\n\n+sd 9876/tcp # Session Director\n\n+sd 9876/udp\n\n+cyborg-systems 9888/tcp # CYBORG Systems\n\n+cyborg-systems 9888/udp\n\n+monkeycom 9898/tcp # MonkeyCom\n\n+monkeycom 9898/udp\n\n+sctp-tunneling 9899/tcp # SCTP TUNNELING\n\n+sctp-tunneling 9899/udp\n\n+domaintime 9909/tcp # domaintime\n\n+domaintime 9909/udp\n\n+amanda 10080/tcp # amanda backup services\n\n+amanda 10080/udp\n\n+vce 11111/tcp # Viral Computing Environment (VCE)\n\n+vce 11111/udp\n\n+smsqp 11201/tcp # Alamin SMS gateway\n\n+smsqp 11201/udp\n\n+hkp 11371/tcp # OpenPGP HTTP Keyserver\n\n+hkp 11371/udp\n\n+h323callsigalt 11720/tcp # h323 Call Signal Alternate\n\n+h323callsigalt 11720/udp\n\n+rets-ssl 12109/tcp # RETS over SSL\n\n+rets-ssl 12109/udp\n\n+cawas 12168/tcp # CA Web Access Service\n\n+cawas 12168/udp\n\n+bprd 13720/tcp # BPRD Protocol (VERITAS NetBackup)\n\n+bprd 13720/udp\n\n+bpdbm 13721/tcp # BPDBM Protocol (VERITAS NetBackup)\n\n+bpdbm 13721/udp\n\n+bpjava-msvc 13722/tcp # BP Java MSVC Protocol\n\n+bpjava-msvc 13722/udp\n\n+vnetd 13724/tcp # Veritas Network Utility\n\n+vnetd 13724/udp\n\n+bpcd 13782/tcp # VERITAS NetBackup\n\n+bpcd 13782/udp\n\n+vopied 13783/tcp # VOPIED Protocol\n\n+vopied 13783/udp\n\n+xpilot 15345/tcp # XPilot Contact Port\n\n+xpilot 15345/udp\n\n+wnn6 22273/tcp # wnn6\n\n+wnn6 22273/udp\n\n+binkp 24554/tcp # Bink fidonet protocol\n\n+binkp 24554/udp\n\n+quake 26000/tcp # Quake @!#\n\n+quake 26000/udp\n\n+wnn6-ds 26208/tcp\n\n+wnn6-ds 26208/udp\n\n+tetrinet 31457/tcp # TetriNET Protocol\n\n+tetrinet 31457/udp\n\n+gamesmith-port 31765/tcp # GameSmith Port\n\n+gamesmith-port 31765/udp\n\n+traceroute 33434/tcp # traceroute use\n\n+traceroute 33434/udp\n\n+candp 42508/tcp # Computer Associates network discovery protocol\n\n+candp 42508/udp\n\n+candrp 42509/tcp # CA discovery response\n\n+candrp 42509/udp\n\n+caerpc 42510/tcp # CA eTrust RPC\n\n+caerpc 42510/udp\n\n+\n\n+#=========================================================================\n\n+# The remaining port numbers are not as allocated by IANA.\n\n+\n\n+# Kerberos (Project Athena/MIT) services\n\n+# Note that these are for Kerberos v4, and are unofficial\n\n+kpop 1109/tcp # Pop with Kerberos\n\n+knetd 2053/tcp # Kerberos de-multiplexor\n\n+eklogin 2105/tcp # Kerberos encrypted rlogin\n\n+\n\n+# CVSup support http://www.cvsup.org/\n\n+supfilesrv 871/tcp # SUP server\n\n+supfiledbg 1127/tcp # SUP debugging\n\n+\n\n+# Datagram Delivery Protocol services\n\n+rtmp 1/ddp # Routing Table Maintenance Protocol\n\n+nbp 2/ddp # Name Binding Protocol\n\n+echo 4/ddp # AppleTalk Echo Protocol\n\n+zip 6/ddp # Zone Information Protocol\n\n+\n\n+# Many services now accepted as 'standard'\n\n+swat 901/tcp # Samba configuration tool\n\n+rndc 953/tcp # rndc control sockets (BIND 9)\n\n+rndc 953/udp\n\n+skkserv 1178/tcp # SKK Japanese input method\n\n+xtel 1313/tcp # french minitel\n\n+support 1529/tcp # GNATS\n\n+cfinger 2003/tcp lmtp # GNU Finger\n\n+ninstall 2150/tcp # ninstall service\n\n+ninstall 2150/udp\n\n+afbackup 2988/tcp # Afbackup system\n\n+afbackup 2988/udp\n\n+fax 4557/tcp # FAX transmission service (old)\n\n+rplay 5555/tcp # RPlay audio service\n\n+rplay 5555/udp\n\n+canna 5680/tcp # Canna (Japanese Input)\n\n+x11-ssh 6010/tcp x11-ssh-offset\n\n+x11-ssh 6010/udp x11-ssh-offset\n\n+ircd 6667/tcp # Internet Relay Chat\n\n+ircd 6667/udp\n\n+jetdirect 9100/tcp # HP JetDirect card\n\n+jetdirect 9100/udp\n\n+mandelspawn 9359/udp mandelbrot # network mandelbrot\n\n+kamanda 10081/tcp # amanda backup services (Kerberos)\n\n+kamanda 10081/udp\n\n+amandaidx 10082/tcp # amanda backup services\n\n+amidxtape 10083/tcp # amanda backup services\n\n+isdnlog 20011/tcp # isdn logging system\n\n+isdnlog 20011/udp\n\n+vboxd 20012/tcp # voice box system\n\n+vboxd 20012/udp\n\n+wnn4_Cn 22289/tcp wnn6_Cn # Wnn (Chinese input)\n\n+wnn4_Kr 22305/tcp wnn6_Kr # Wnn (Korean input)\n\n+wnn4_Tw 22321/tcp wnn6_Tw # Wnn (Taiwanse input)\n\n+asp 27374/tcp # Address Search Protocol\n\n+asp 27374/udp\n\n+tfido 60177/tcp # Ifmail\n\n+tfido 60177/udp\n\n+fido 60179/tcp # Ifmail\n\n+fido 60179/udp\n\n+\n\n+# Local services\n\ndiff --git a/spec/fixtures/unit/provider/port/parsed/uniq b/spec/fixtures/unit/provider/port/parsed/uniq\n\nnew file mode 100644\n\nindex 0000000..8ed670f\n\n--- /dev/null\n\n+++ b/spec/fixtures/unit/provider/port/parsed/uniq\n\n@@ -0,0 +1,7 @@\n\n+ftp-data 20/tcp # File Transfer [Default Data]\n\n+ftp 21/tcp # File Transfer [Control]\n\n+# One comment in the middle\n\n+x11-ssh 6010/tcp x11-ssh-offset # alias test\n\n+baz 100/tcp alias1 alias # Multiple test\n\ndiff --git a/spec/unit/provider/port/parsed_spec.rb b/spec/unit/provider/port/parsed_spec.rb\n\nnew file mode 100644\n\nindex 0000000..c8167e1\n\n--- /dev/null\n\n+++ b/spec/unit/provider/port/parsed_spec.rb\n\n@@ -0,0 +1,277 @@\n\n+require 'shared_behaviours/all_parsedfile_providers'\n\n+require 'puppet_spec/files'\n\n+\n\n+provider_class = Puppet::Type.type(:port).provider(:parsed)\n\n+\n\n+describe provider_class do\n\n+ before do\n\n+ @host_class = Puppet::Type.type(:port)\n\n+ @provider = @host_class.provider(:parsed)\n\n+ @servicesfile = tmpfile('services')\n\n+ @provider.stubs(:default_target).returns @servicesfile\n\n+ @provider.any_instance.stubs(:target).returns @servicesfile\n\n+ end\n\n+\n\n+ after :each do\n\n+ @provider.initvars\n\n+ end\n\n+\n\n+ def mkport(args)\n\n+ portresource = Puppet::Type::Port.new(:name => args[:name], :protocol => args[:protocol])\n\n+ portresource.stubs(:should).with(:target).returns @servicesfile\n\n+\n\n+ # Using setters of provider\n\n+ port = @provider.new(portresource)\n\n+ args.each do |property,value|\n\n+ value = value.join(' ') if property == :port_aliases and value.is_a?(Array)\n\n+ port.send(\"#{property}=\", value)\n\n+ end\n\n+ port\n\n+ end\n\n+\n\n+ def genport(port)\n\n+ @provider.stubs(:filetype).returns(Puppet::Util::FileType::FileTypeRam)\n\n+ File.stubs(:chown)\n\n+ File.stubs(:chmod)\n\n+ Puppet::Util::SUIDManager.stubs(:asuser).yields\n\n+ port.flush\n\n+ @provider.target_object(@servicesfile).read\n\n+ end\n\n+\n\n+ describe \"when parsing a line with name port and protocol\" do\n\n+\n\n+ before do\n\n+ @example_line = \"telnet \\t 23/udp\"\n\n+ end\n\n+\n\n+ it \"should extract name from the first field\" do\n\n+ end\n\n+\n\n+ it \"should extract number from second field\" do\n\n+ @provider.parse_line(@example_line)[:number].should == '23'\n\n+ end\n\n+\n\n+ it \"should extract protocol udp from third field\" do\n\n+ @provider.parse_line(@example_line)[:protocol].should == :udp\n\n+ end\n\n+\n\n+ it \"should extract protocol tcp from third field\" do\n\n+ @provider.parse_line('telnet 23/tcp')[:protocol].should == :tcp\n\n+ end\n\n+\n\n+ it \"should drop trailing spaces\" do\n\n+ @provider.parse_line('telnet 23/tcp ')[:protocol].should == :tcp\n\n+ end\n\n+\n\n+ it \"should handle different delimiters\" do\n\n+ @result = ['telnet','23',:tcp ]\n\n+ [\n\n+ \"telnet 23/tcp\",\n\n+ \"telnet\\t23/tcp\",\n\n+ \"telnet \\t23/tcp\",\n\n+ \"telnet\\t 23/tcp\",\n\n+ \"telnet \\t 23/tcp\\t\\t\"\n\n+ ].each do |sample|\n\n+ hash = @provider.parse_line(sample)\n\n+ hash[:name].should == @result[0]\n\n+ hash[:number].should == @result[1]\n\n+ hash[:protocol].should == @result[2]\n\n+ hash[:description].should == ''\n\n+ end\n\n+\n\n+ describe \"when parsing a line with name, port, protocol, description\" do\n\n+\n\n+ before do\n\n+ @example_line = \"telnet \\t 23/udp # Telnet\"\n\n+ end\n\n+\n\n+ it \"should extract name from the first field\" do\n\n+ end\n\n+\n\n+ it \"should extract number from second field\" do\n\n+ @provider.parse_line(@example_line)[:number].should == '23'\n\n+ end\n\n+\n\n+ it \"should extract protocol from third field\" do\n\n+ @provider.parse_line(@example_line)[:protocol].should == :udp\n\n+ end\n\n+\n\n+ it \"should extract description after the first #\" do\n\n+ @provider.parse_line(@example_line)[:description].should == 'Telnet'\n\n+ end\n\n+\n\n+ it \"should correctly set description with multiple #\" do\n\n+ @provider.parse_line('telnet 23/udp # My # desc')[:description].should == 'My # desc'\n\n+ end\n\n+\n\n+ it \"should handle different delimiters\" do\n\n+ @result = ['telnet', '23', :udp, 'My # desc' ]\n\n+ [\n\n+ \"telnet 23/udp # My # desc\",\n\n+ \"telnet\\t 23/udp\\t# My # desc\",\n\n+ \"telnet \\t23/udp #\\tMy # desc\",\n\n+ \"telnet \\t \\t 23/udp \\t \\t# \\tMy # desc\"\n\n+ ].each do |sample|\n\n+ hash = @provider.parse_line(sample)\n\n+ hash[:name].should == @result[0]\n\n+ hash[:number].should == @result[1]\n\n+ hash[:protocol].should == @result[2]\n\n+ hash[:description].should == @result[3]\n\n+ describe \"when parsing a line with name, number, procotol and aliases\" do\n\n+\n\n+ before do\n\n+ @example_line = \"telnet \\t 23/udp alias1 alias2\"\n\n+ end\n\n+\n\n+ it \"should extract name from the first field\" do\n\n+ end\n\n+\n\n+ it \"should extract number from second field\" do\n\n+ @provider.parse_line(@example_line)[:number].should == '23'\n\n+ end\n\n+\n\n+ it \"should extract protocol from third field\" do\n\n+ @provider.parse_line(@example_line)[:protocol].should == :udp\n\n+ end\n\n+\n\n+ it \"should extract single alias\" do\n\n+ @example_line = \"telnet \\t 23/udp alias1\"\n\n+ @provider.parse_line(@example_line)[:port_aliases].should == 'alias1'\n\n+ end\n\n+\n\n+ it \"should extract multiple aliases\" do\n\n+ @provider.parse_line(@example_line)[:port_aliases].should == 'alias1 alias2'\n\n+ end\n\n+\n\n+ it \"should convert delimiter to single space\" do\n\n+ @provider.parse_line(\"telnet 23/udp alias1\\t\\t alias2\\talias3 alias4\")[:port_aliases].should == 'alias1 alias2 alias3 alias4'\n\n+ end\n\n+\n\n+ it \"should set port_aliases to :absent if there is none\" do\n\n+ @provider.parse_line(\"telnet 23/udp\")[:port_aliases].should == :absent\n\n+ @provider.parse_line(\"telnet 23/udp \")[:port_aliases].should == :absent\n\n+ @provider.parse_line(\"telnet 23/udp # Bazinga!\")[:port_aliases].should == :absent\n\n+ describe \"when parsing a line with name, number, protocol, aliases and description\" do\n\n+\n\n+ before do\n\n+ @example_line = \"telnet \\t 23/udp alias1 alias2 # Tel#net\"\n\n+ @result = ['telnet','23',:udp,'alias1 alias2','Tel#net']\n\n+ end\n\n+\n\n+ it \"should extract name from the first field\" do\n\n+ end\n\n+\n\n+ it \"should extract number from second field\" do\n\n+ @provider.parse_line(@example_line)[:number].should == @result[1]\n\n+ end\n\n+\n\n+ it \"should extract protocol from third field\" do\n\n+ @provider.parse_line(@example_line)[:protocol].should == @result[2]\n\n+ end\n\n+\n\n+ it \"should extract aliases from forth field\" do\n\n+ @provider.parse_line(@example_line)[:port_aliases].should == @result[3]\n\n+ end\n\n+\n\n+ it \"should extract description from the fifth field\" do\n\n+ @provider.parse_line(@example_line)[:description].should == @result[4]\n\n+ describe \"when operating on /etc/services like files\" do\n\n+\n\n+ it_should_behave_like \"all parsedfile providers\", provider_class\n\n+\n\n+ end\n\n+\n\n+ it \"should be able to generate a simple services entry\" do\n\n+ port = mkport(\n\n+ genport(port).should == \"telnet\\t23/tcp\\n\"\n\n+ end\n\n+\n\n+ :name => 'pcx-pin',\n\n+ :protocol => :tcp,\n\n+ :port_aliases => 'single_alias',\n\n+ genport(port).should == \"pcx-pin\\t4005/tcp\\tsingle_alias\\n\"\n\n+ end\n\n+\n\n+ :name => 'pcx-splr-ft',\n\n+ :protocol => :udp,\n\n+ :port_aliases => [ 'mult_alias', 'rquotad' ],\n\n+ genport(port).should == \"pcx-splr-ft\\t4003/udp\\tmult_alias rquotad\\n\"\n\n+ end\n\n+\n\n+ it \"should be able to generate a simple hostfile entry with comments\" do\n\n+ port = mkport(\n\n+ :description => 'Fancy # comment',\n\n+ genport(port).should == \"telnet\\t23/tcp\\t# Fancy # comment\\n\"\n\n+ end\n\n+\n\n+ it \"should be able to generate an entry with one alias and a comment\" do\n\n+ port = mkport(\n\n+ :name => 'foo',\n\n+ :protocol => :tcp,\n\n+ :number => '1',\n\n+ :description => 'Bazinga!',\n\n+ genport(port).should == \"foo\\t1/tcp\\tbar\\t# Bazinga!\\n\"\n\n+ end\n\n+\n\n+ :name => 'foo',\n\n+ :protocol => :udp,\n\n+ :description => 'Bazinga!',\n\n+\n\n+end\n\ndiff --git a/spec/unit/type/port_spec.rb b/spec/unit/type/port_spec.rb\n\nnew file mode 100644\n\nindex 0000000..915b1c2\n\n--- /dev/null\n\n+++ b/spec/unit/type/port_spec.rb\n\n@@ -0,0 +1,220 @@\n\n+require 'puppet/property/ordered_list'\n\n+\n\n+port = Puppet::Type.type(:port)\n\n+\n\n+describe port do\n\n+ before do\n\n+ @class = port\n\n+ @provider_class = stub 'provider_class', :name => 'fake', :ancestors => [], :suitable? => true, :supports_parameter? => true\n\n+ @class.stubs(:defaultprovider).returns @provider_class\n\n+ @class.stubs(:provider).returns @provider_class\n\n+\n\n+ @provider = stub 'provider', :class => @provider_class, :clean => nil, :exists? => false\n\n+ @resource = stub 'resource', :resource => nil, :provider => @provider\n\n+\n\n+ @provider.stubs(:port_aliases).returns :absent\n\n+\n\n+ @provider_class.stubs(:new).returns(@provider)\n\n+ @catalog = Puppet::Resource::Catalog.new\n\n+ end\n\n+\n\n+ it \"should have a title pattern that splits name and protocol\" do\n\n+ regex = @class.title_patterns[0][0]\n\n+ regex.match(\"telnet/tcp\").captures.should == ['telnet','tcp' ]\n\n+ regex.match(\"telnet/udp\").captures.should == ['telnet','udp' ]\n\n+ regex.match(\"telnet/baz\").should == nil\n\n+ end\n\n+\n\n+ it \"should have a second title pattern that will set only name\" do\n\n+ regex = @class.title_patterns[1][0]\n\n+ regex.match(\"telnet/tcp\").captures.should == ['telnet/tcp' ]\n\n+ regex.match(\"telnet/udp\").captures.should == ['telnet/udp' ]\n\n+ regex.match(\"telnet/baz\").captures.should == ['telnet/baz' ]\n\n+ end\n\n+\n\n+ @class.key_attributes.should == [:name, :protocol]\n\n+ end\n\n+\n\n+ describe \"when validating attributes\" do\n\n+\n\n+ [:name, :provider, :protocol].each do |param|\n\n+ it \"should have a #{param} parameter\" do\n\n+ @class.attrtype(param).should == :param\n\n+ [:ensure, :port_aliases, :description, :number].each do |property|\n\n+ it \"should have #{property} property\" do\n\n+ @class.attrtype(property).should == :property\n\n+ end\n\n+\n\n+ describe \"when validating values\" do\n\n+\n\n+ it \"should support present as a value for ensure\" do\n\n+ lambda { @class.new(:name => \"whev\", :protocol => :tcp, :ensure => :present) }.should_not raise_error\n\n+ end\n\n+\n\n+ it \"should support absent as a value for ensure\" do\n\n+ proc { @class.new(:name => \"whev\", :protocol => :tcp, :ensure => :absent) }.should_not raise_error\n\n+ end\n\n+\n\n+ it \"should support :tcp as a value for protocol\" do\n\n+ proc { @class.new(:name => \"whev\", :protocol => :tcp) }.should_not raise_error\n\n+ end\n\n+\n\n+ it \"should support :udp as a value for protocol\" do\n\n+ proc { @class.new(:name => \"whev\", :protocol => :udp) }.should_not raise_error\n\n+ end\n\n+\n\n+ proc { @class.new(:name => \"whev\", :protocol => :tcpp) }.should raise_error(Puppet::Error, /Invalid value/)\n\n+ end\n\n+\n\n+ it \"should use tcp as default protocol\" do\n\n+ port_test = @class.new(:name => \"whev\")\n\n+ port_test[:protocol].should == :tcp\n\n+ end\n\n+\n\n+ it \"should support valid portnumbers\" do\n\n+ proc { @class.new(:name => \"whev\", :protocol => :tcp, :number => '0') }.should_not raise_error\n\n+ proc { @class.new(:name => \"whev\", :protocol => :tcp, :number => '1') }.should_not raise_error\n\n+ proc { @class.new(:name => \"whev\", :protocol => :tcp, :number => \"#{2**16-1}\") }.should_not raise_error\n\n+ end\n\n+\n\n+ proc { @class.new(:name => \"whev\", :protocol => :tcp, :number => \"aa\") }.should raise_error(Puppet::Error, /has to be numeric/)\n\n+ proc { @class.new(:name => \"whev\", :protocol => :tcp, :number => \"22a\") }.should raise_error(Puppet::Error, /has to be numeric/)\n\n+ proc { @class.new(:name => \"whev\", :protocol => :tcp, :number => \"a22\") }.should raise_error(Puppet::Error, /has to be numeric/)\n\n+ end\n\n+\n\n+ proc { @class.new(:name => \"whev\", :protocol => :tcp, :number => \"-1\") }.should raise_error(Puppet::Error, /number .* out of range/)\n\n+ proc { @class.new(:name => \"whev\", :protocol => :tcp, :number => \"#{2**16}\") }.should raise_error(Puppet::Error, /number .* out of range/)\n\n+ end\n\n+\n\n+ it \"should support single port_alias\" do\n\n+ proc { @class.new(:name => \"foo\", :protocol => :tcp, :port_aliases => 'bar') }.should_not raise_error\n\n+ end\n\n+\n\n+ it \"should support multiple port_aliases\" do\n\n+ proc { @class.new(:name => \"foo\", :protocol => :tcp, :port_aliases => ['bar','bar2']) }.should_not raise_error\n\n+ end\n\n+\n\n+ proc { @class.new(:name => \"whev\", :protocol => :tcp, :port_aliases => ['bar','fo o']) }.should raise_error(Puppet::Error, /must not contain whitespace/)\n\n+ end\n\n+\n\n+ proc { @class.new(:name => \"foo bar\", :protocol => :tcp) }.should raise_error(Puppet::Error, /must not contain whitespace/)\n\n+ end\n\n+\n\n+ # puppet catches a missing name before our validate method can complain about it\n\n+ # proc { @class.new(:protocol => :tcp) }.should raise_error(Puppet::Error, /Attribute.*name.*mandatory/)\n\n+\n\n+ proc { @class.new(:protocol => :tcp) }.should raise_error(Puppet::Error, /Title or name must be provided/)\n\n+ end\n\n+\n\n+ end\n\n+\n\n+ proc { @class.new(:name => \"foo\") }.should raise_error(Puppet::Error, /Attribute.*protocol.*mandatory/)\n\n+ end\n\n+\n\n+ it \"should extract name and protocol from title if not explicitly set\" do\n\n+ res = @class.new(:title => 'telnet/tcp', :number => '23')\n\n+ res[:number].should == '23'\n\n+ res[:name].should == 'telnet'\n\n+ res[:protocol].should == :tcp\n\n+ end\n\n+\n\n+ it \"should not extract name from title if explicitly set\" do\n\n+ res = @class.new(:title => 'telnet/tcp', :name => 'ssh', :number => '23')\n\n+ res[:number].should == '23'\n\n+ res[:name].should == 'ssh'\n\n+ res[:protocol].should == :tcp\n\n+ end\n\n+\n\n+ it \"should not extract protocol from title if explicitly set\" do\n\n+ res = @class.new(:title => 'telnet/tcp', :protocol => :udp, :number => '23')\n\n+ res[:number].should == '23'\n\n+ res[:name].should == 'telnet'\n\n+ res[:protocol].should == :udp\n\n+ end\n\n+\n\n+ it \"should not extract name and protocol from title when they are explicitly set\" do\n\n+ res = @class.new(:title => 'foo/udp', :name => 'bar', :protocol => :tcp, :number => '23')\n\n+ res[:number].should == '23'\n\n+ res[:name].should == 'bar'\n\n+ res[:protocol].should == :tcp\n\n+ end\n\n+\n\n+ end\n\n+\n\n+ describe \"when syncing\" do\n\n+\n\n+ it \"should send the joined array to the provider for port_aliases property\" do\n\n+ port_aliases = @class.attrclass(:port_aliases).new(:resource => @resource, :should => %w{foo bar})\n\n+ @provider.expects(:port_aliases=).with 'foo bar'\n\n+ port_aliases.sync\n\n+ end\n\n+\n\n+ it \"should care about the order of port_aliases\" do\n\n+ port_aliases = @class.attrclass(:port_aliases).new(:resource => @resource, :should => %w{a z b})\n\n+ port_aliases.insync?(%w{a z b}).should == true\n\n+ port_aliases.insync?(%w{a b z}).should == false\n\n+ port_aliases.insync?(%w{b a z}).should == false\n\n+ port_aliases.insync?(%w{z a b}).should == false\n\n+ port_aliases.insync?(%w{z b a}).should == false\n\n+ port_aliases.insync?(%w{b z a}).should == false\n\n+ describe \"when comparing uniqueness_key of two ports\" do\n\n+\n\n+ it \"should be equal if name and protocol are the same\" do\n\n+ foo_tcp1 = @class.new(:name => \"foo\", :protocol => :tcp, :number => '23')\n\n+ foo_tcp2 = @class.new(:name => \"foo\", :protocol => :tcp, :number => '23')\n\n+ foo_tcp1.uniqueness_key.should == ['foo', :tcp ]\n\n+ foo_tcp2.uniqueness_key.should == ['foo', :tcp ]\n\n+ foo_tcp1.uniqueness_key.should == foo_tcp2.uniqueness_key\n\n+ end\n\n+\n\n+ it \"should not be equal if protocol differs\" do\n\n+ foo_tcp = @class.new(:name => \"foo\", :protocol => :tcp, :number => '23')\n\n+ foo_udp = @class.new(:name => \"foo\", :protocol => :udp, :number => '23')\n\n+ foo_tcp.uniqueness_key.should == [ 'foo', :tcp ]\n\n+ foo_udp.uniqueness_key.should == [ 'foo', :udp ]\n\n+ foo_tcp.uniqueness_key.should_not == foo_udp.uniqueness_key\n\n+ end\n\n+\n\n+ it \"should not be equal if name differs\" do\n\n+ foo_tcp = @class.new(:name => \"foo\", :protocol => :tcp, :number => '23')\n\n+ bar_tcp = @class.new(:name => \"bar\", :protocol => :tcp, :number => '23')\n\n+ foo_tcp.uniqueness_key.should == [ 'foo', :tcp ]\n\n+ bar_tcp.uniqueness_key.should == [ 'bar', :tcp ]\n\n+ foo_tcp.uniqueness_key.should_not == bar_tcp.uniqueness_key\n\n+ end\n\n+\n\n+ it \"should not be equal if both name and protocol differ\" do\n\n+ foo_tcp = @class.new(:name => \"foo\", :protocol => :tcp, :number => '23')\n\n+ bar_udp = @class.new(:name => \"bar\", :protocol => :udp, :number => '23')\n\n+ foo_tcp.uniqueness_key.should == [ 'foo', :tcp ]\n\n+ bar_udp.uniqueness_key.should == [ 'bar', :udp ]\n\n+ foo_tcp.uniqueness_key.should_not == bar_udp.uniqueness_key"
    }
}