{
    "id": "dbpedia_8285_0",
    "rank": 64,
    "data": {
        "url": "https://www.bmc.com/blogs/lua-programming-language/",
        "read_more_link": "",
        "language": "en",
        "title": "The Lua Programming Language Beginner’s Guide",
        "top_image": "https://s7280.pcdn.co/wp-content/uploads/2021/06/Colorful_Optics_Abstract-300x150.jpg.optimal.jpg",
        "meta_img": "https://s7280.pcdn.co/wp-content/uploads/2021/06/Colorful_Optics_Abstract-300x150.jpg.optimal.jpg",
        "images": [
            "https://dev.blogs.bmc.com/wp-content/themes/voice-child/images/bmc-logo.svg",
            "https://dev.blogs.bmc.com/wp-content/themes/voice-child/images/bmc-logo.svg",
            "https://s7280.pcdn.co/wp-content/uploads/2018/08/BMCblogs_Logo.svg",
            "https://s7280.pcdn.co/wp-content/uploads/2018/08/BMCblogs_Logo.svg",
            "https://s7280.pcdn.co/wp-content/uploads/2018/08/BMCblogs_Logo.svg",
            "https://s7280.pcdn.co/wp-content/uploads/2018/08/BMCblogs_Logo.svg",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Colorful_Optics_Abstract-810x405.jpg.optimal.jpg 810w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Colorful_Optics_Abstract-300x150.jpg.optimal.jpg 300w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Colorful_Optics_Abstract-1024x512.jpg.optimal.jpg 1024w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Colorful_Optics_Abstract-768x384.jpg.optimal.jpg 768w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Colorful_Optics_Abstract-1140x570.jpg.optimal.jpg 1140w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Colorful_Optics_Abstract-24x12.jpg.optimal.jpg 24w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Colorful_Optics_Abstract-36x18.jpg.optimal.jpg 36w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Colorful_Optics_Abstract-48x24.jpg.optimal.jpg 48w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Colorful_Optics_Abstract.jpg.optimal.jpg 1400w",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Colorful_Optics_Abstract-810x405.jpg.optimal.jpg",
            "https://s7280.pcdn.co/wp-content/uploads/2020/09/Shanika-Wickramasinghe_avatar_1600761728-200x200.jpg.optimal.jpg 2x",
            "https://s7280.pcdn.co/wp-content/uploads/2020/09/Shanika-Wickramasinghe_avatar_1600761728-100x100.jpg.optimal.jpg",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/lua-150x150.png 150w, https://s7280.pcdn.co/wp-content/uploads/2021/06/lua-24x24.png 24w, https://s7280.pcdn.co/wp-content/uploads/2021/06/lua-36x36.png 36w, https://s7280.pcdn.co/wp-content/uploads/2021/06/lua-48x48.png 48w",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/lua-150x150.png",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Key-Features-Of-Lua.png 503w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Key-Features-Of-Lua-291x300.png 291w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Key-Features-Of-Lua-24x24.png 24w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Key-Features-Of-Lua-36x36.png 36w",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Key-Features-Of-Lua.png",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Common-Programming-Languages-Comparison.png 772w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Common-Programming-Languages-Comparison-278x300.png 278w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Common-Programming-Languages-Comparison-768x828.png 768w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Common-Programming-Languages-Comparison-22x24.png 22w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Common-Programming-Languages-Comparison-33x36.png 33w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Common-Programming-Languages-Comparison-45x48.png 45w",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Common-Programming-Languages-Comparison.png",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Download.png 602w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Download-277x300.png 277w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Download-22x24.png 22w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Download-33x36.png 33w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Download-44x48.png 44w",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Download.png",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Binaries.png 960w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Binaries-277x300.png 277w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Binaries-945x1024.png 945w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Binaries-768x832.png 768w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Binaries-810x878.png 810w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Binaries-22x24.png 22w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Binaries-33x36.png 33w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Binaries-44x48.png 44w",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Binaries.png",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Sourceforge-Lua.png 960w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Sourceforge-Lua-277x300.png 277w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Sourceforge-Lua-945x1024.png 945w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Sourceforge-Lua-768x832.png 768w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Sourceforge-Lua-810x878.png 810w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Sourceforge-Lua-22x24.png 22w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Sourceforge-Lua-33x36.png 33w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Sourceforge-Lua-44x48.png 44w",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Sourceforge-Lua.png",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Folder.png 980w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Folder-300x180.png 300w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Folder-768x461.png 768w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Folder-810x486.png 810w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Folder-24x14.png 24w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Folder-36x22.png 36w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Folder-48x29.png 48w",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Folder.png",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Environment-Variables.png 980w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Environment-Variables-300x180.png 300w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Environment-Variables-768x461.png 768w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Environment-Variables-810x486.png 810w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Environment-Variables-24x14.png 24w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Environment-Variables-36x22.png 36w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Environment-Variables-48x29.png 48w",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Environment-Variables.png",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Advanced-System-Settings.png 1200w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Advanced-System-Settings-300x233.png 300w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Advanced-System-Settings-1024x795.png 1024w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Advanced-System-Settings-768x596.png 768w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Advanced-System-Settings-810x629.png 810w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Advanced-System-Settings-1140x885.png 1140w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Advanced-System-Settings-24x19.png 24w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Advanced-System-Settings-36x28.png 36w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Advanced-System-Settings-48x37.png 48w",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Advanced-System-Settings.png",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/EV1.png 618w, https://s7280.pcdn.co/wp-content/uploads/2021/06/EV1-300x284.png 300w, https://s7280.pcdn.co/wp-content/uploads/2021/06/EV1-24x24.png 24w, https://s7280.pcdn.co/wp-content/uploads/2021/06/EV1-36x34.png 36w, https://s7280.pcdn.co/wp-content/uploads/2021/06/EV1-48x45.png 48w",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/EV1.png",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/EV2.png 527w, https://s7280.pcdn.co/wp-content/uploads/2021/06/EV2-300x285.png 300w, https://s7280.pcdn.co/wp-content/uploads/2021/06/EV2-24x24.png 24w, https://s7280.pcdn.co/wp-content/uploads/2021/06/EV2-36x34.png 36w, https://s7280.pcdn.co/wp-content/uploads/2021/06/EV2-48x46.png 48w",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/EV2.png",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Hello-Lua.png 1019w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Hello-Lua-300x169.png 300w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Hello-Lua-768x432.png 768w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Hello-Lua-810x455.png 810w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Hello-Lua-24x13.png 24w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Hello-Lua-36x20.png 36w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Hello-Lua-48x27.png 48w",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Hello-Lua.png",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Basic.png 1197w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Basic-300x187.png 300w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Basic-1024x637.png 1024w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Basic-768x478.png 768w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Basic-810x504.png 810w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Basic-1140x710.png 1140w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Basic-24x15.png 24w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Basic-36x22.png 36w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Basic-48x30.png 48w",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Lua-Basic.png",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Build-Task.png 1205w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Build-Task-300x187.png 300w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Build-Task-1024x638.png 1024w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Build-Task-768x479.png 768w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Build-Task-810x505.png 810w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Build-Task-1140x710.png 1140w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Build-Task-24x15.png 24w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Build-Task-36x22.png 36w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Build-Task-48x30.png 48w",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Build-Task.png",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Configure-Build-Task.png 1205w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Configure-Build-Task-300x54.png 300w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Configure-Build-Task-1024x183.png 1024w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Configure-Build-Task-768x137.png 768w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Configure-Build-Task-810x145.png 810w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Configure-Build-Task-1140x203.png 1140w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Configure-Build-Task-24x4.png 24w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Configure-Build-Task-36x6.png 36w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Configure-Build-Task-48x9.png 48w",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Configure-Build-Task.png",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Create-tasks.png 1205w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Create-tasks-300x56.png 300w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Create-tasks-1024x191.png 1024w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Create-tasks-768x143.png 768w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Create-tasks-810x151.png 810w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Create-tasks-1140x213.png 1140w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Create-tasks-24x4.png 24w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Create-tasks-36x7.png 36w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Create-tasks-48x9.png 48w",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Create-tasks.png",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Other.png 1205w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Other-300x52.png 300w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Other-1024x177.png 1024w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Other-768x133.png 768w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Other-810x140.png 810w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Other-1140x197.png 1140w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Other-24x4.png 24w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Other-36x6.png 36w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Other-48x8.png 48w",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Other.png",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/tasks-json.png 1205w, https://s7280.pcdn.co/wp-content/uploads/2021/06/tasks-json-300x121.png 300w, https://s7280.pcdn.co/wp-content/uploads/2021/06/tasks-json-1024x415.png 1024w, https://s7280.pcdn.co/wp-content/uploads/2021/06/tasks-json-768x311.png 768w, https://s7280.pcdn.co/wp-content/uploads/2021/06/tasks-json-810x328.png 810w, https://s7280.pcdn.co/wp-content/uploads/2021/06/tasks-json-1140x462.png 1140w, https://s7280.pcdn.co/wp-content/uploads/2021/06/tasks-json-24x10.png 24w, https://s7280.pcdn.co/wp-content/uploads/2021/06/tasks-json-36x15.png 36w, https://s7280.pcdn.co/wp-content/uploads/2021/06/tasks-json-48x19.png 48w",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/tasks-json.png",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Run-Build.png 1205w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Run-Build-300x187.png 300w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Run-Build-1024x637.png 1024w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Run-Build-768x478.png 768w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Run-Build-810x504.png 810w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Run-Build-1140x710.png 1140w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Run-Build-24x15.png 24w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Run-Build-36x22.png 36w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Run-Build-48x30.png 48w",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Run-Build.png",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Compile-File.png 1205w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Compile-File-300x167.png 300w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Compile-File-1024x569.png 1024w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Compile-File-768x427.png 768w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Compile-File-810x450.png 810w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Compile-File-1140x634.png 1140w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Compile-File-24x13.png 24w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Compile-File-36x20.png 36w, https://s7280.pcdn.co/wp-content/uploads/2021/06/Compile-File-48x27.png 48w",
            "https://s7280.pcdn.co/wp-content/uploads/2021/06/Compile-File.png",
            "https://s7280.pcdn.co/wp-content/uploads/2017/09/ScaledAgileFrameworkSAFeExplained_Final-145x100.png 145w, https://s7280.pcdn.co/wp-content/uploads/2017/09/ScaledAgileFrameworkSAFeExplained_Final-380x260.png 380w",
            "https://s7280.pcdn.co/wp-content/uploads/2017/09/ScaledAgileFrameworkSAFeExplained_Final-145x100.png",
            "https://s7280.pcdn.co/wp-content/uploads/2020/08/state-of-kubernetes-145x100.png 145w, https://s7280.pcdn.co/wp-content/uploads/2020/08/state-of-kubernetes-380x260.png 380w",
            "https://s7280.pcdn.co/wp-content/uploads/2020/08/state-of-kubernetes-145x100.png",
            "https://s7280.pcdn.co/wp-content/uploads/2021/02/SHipping-Containers-Cargo-Colorful_1400x700px-145x100.jpg.optimal.jpg 145w, https://s7280.pcdn.co/wp-content/uploads/2021/02/SHipping-Containers-Cargo-Colorful_1400x700px-380x260.jpg.optimal.jpg 380w, https://s7280.pcdn.co/wp-content/uploads/2021/02/SHipping-Containers-Cargo-Colorful_1400x700px-634x433.jpg.optimal.jpg 634w",
            "https://s7280.pcdn.co/wp-content/uploads/2021/02/SHipping-Containers-Cargo-Colorful_1400x700px-145x100.jpg.optimal.jpg",
            "https://s7280.pcdn.co/wp-content/uploads/2020/06/three-things-to-consider-when-considering-a-digital-business-automation-solution_final-700x400-1-145x100.jpg.optimal.jpg 145w, https://s7280.pcdn.co/wp-content/uploads/2020/06/three-things-to-consider-when-considering-a-digital-business-automation-solution_final-700x400-1-380x260.jpg.optimal.jpg 380w",
            "https://s7280.pcdn.co/wp-content/uploads/2020/06/three-things-to-consider-when-considering-a-digital-business-automation-solution_final-700x400-1-145x100.jpg.optimal.jpg",
            "https://s7280.pcdn.co/wp-content/uploads/2020/09/Good_Best_Better_Street-Sign-145x100.jpg.optimal.jpg 145w, https://s7280.pcdn.co/wp-content/uploads/2020/09/Good_Best_Better_Street-Sign-380x260.jpg.optimal.jpg 380w, https://s7280.pcdn.co/wp-content/uploads/2020/09/Good_Best_Better_Street-Sign-634x433.jpg.optimal.jpg 634w",
            "https://s7280.pcdn.co/wp-content/uploads/2020/09/Good_Best_Better_Street-Sign-145x100.jpg.optimal.jpg",
            "https://s7280.pcdn.co/wp-content/uploads/2019/01/faas-serverless-145x100.jpg.optimal.jpg 145w, https://s7280.pcdn.co/wp-content/uploads/2019/01/faas-serverless-380x260.jpg.optimal.jpg 380w",
            "https://s7280.pcdn.co/wp-content/uploads/2019/01/faas-serverless-145x100.jpg.optimal.jpg",
            "https://s7280.pcdn.co/wp-content/uploads/2020/09/Shanika-Wickramasinghe_avatar_1600761728-224x224.jpg.optimal.jpg 2x",
            "https://s7280.pcdn.co/wp-content/uploads/2020/09/Shanika-Wickramasinghe_avatar_1600761728-112x112.jpg.optimal.jpg",
            "https://s7280.pcdn.co/wp-content/uploads/2022/09/see-try-learn-ads-230x450-1.png",
            "https://s7280.pcdn.co/wp-content/uploads/2022/09/see-try-learn-ads-230x450-1.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "https://www.bmc.com/etc/clientlibs/bmc/head/favicon.ico",
        "meta_site_name": "BMC Blogs",
        "canonical_link": "https://www.bmc.com/blogs/lua-programming-language/",
        "text": "In this article, we’ll cover the basics of the Lua programming language, including:\n\nWhat it is\n\nMain components\n\nKey features\n\nPros & cons\n\nUse cases\n\nLua vs other languages\n\nInstalling Lua in a Windows environment\n\nGetting it up and running\n\nLet’s get started.\n\nWhat is Lua?\n\nLua is a robust, lightweight, and embeddable scripting language that supports multiple programming methods, including procedural, object-oriented, functional, and data-driven programming.\n\nAs the primary focus on Lua is for scripting, it is rarely used as a standalone programming language. Instead, it is used as a scripting language that can be integrated (embedded) into other programs written in mainly C and C++. It also supports other programming languages via third-party plugins (NLua/KeraLua for .NET/C#).\n\nPopular use cases for Lua include:\n\nAs a popular component in video game and game engine development. For example, Warframe, World of Warcraft, and CRYENGINE all use Lua.\n\nAs a programming language in many network programs, like CISCO Systems, Nmap, and ModSecurity.\n\nAs a programming language in industrial programs such as Adobe Lightroom and MySQL Workbench.\n\nAs a library that developers can integrate with their programs to enable scripting functionality.\n\nBeing a scripting language, Lua does not have its own main application. Instead, it acts exclusively as an embedded part of the host application.\n\n(Explore the most popular programming languages.)\n\nHow Lua works\n\nThere are two main components of Lua:\n\nThe Lua interpreter\n\nThe Lua virtual machine (VM)\n\nLua is not directly interpreted through a Lua file like other languages such as Python. Instead, it uses the Lua interpreter to compile a Lua file to bytecode. The Lua interpreter is written in ANSI C, making it highly portable and capable of running on a multitude of devices.\n\nUsually, the compilation is done at the runtime. However, sometimes it can be done before the runtime to increase load times. Then the Lua virtual machine will run this compiled bytecode. The register-based architecture of the Lua virtual machine closely resembles actual hardware architectures, and it will increase the overall performance of the program.\n\nKey features of Lua\n\nSo, what’s so great about Lua? These are the defining features:\n\nSpeed\n\nLua is considered one of the fastest programming languages among interpreted scripting languages. In particular, Lua can perform large task orders faster than most other programming languages in both benchmarking and real-world scenarios.\n\nFor more speed, an independent implementation of Lua called LuaJIT uses a just-in-time compiler that makes Lua even faster.\n\nSize\n\nLua has a considerably smaller footprint than other programming languages, with its complete source code and documentation taking a mere 1.3 MB. The Lua interpreter with all the standard libraries takes 278K, while the complete Lua library takes only 466K.\n\nThis small size is ideal when integrating Lua into multiple platforms, from embedded devices to massive game engines, where every byte is valuable.\n\nPortability & embeddability\n\nWith its small size, the portability of Lua is nearly unlimited; any platform that supports the standard C compiler can run Lua out of the box. Lua’s speed and size become huge advantages when embedding Lua with another programming language. That’s because they can help increase the speed of the program without hindering any existing functionality.\n\nImportantly, Lua does not require complex rewrites to be compatible with other programming languages. Lua can be used with primary programming languages like C, C++, Java, C#, etc.. and other scripting languages like Perl and Ruby, further extending its usability.\n\nSimplicity\n\nLua is simple in design yet provides powerful functionality. One of the core features of Lua is meta-mechanisms which enable developers to implement features—rather than providing a bunch of features directly in the language itself.\n\nLua also comes with incremental garbage collection, reducing memory usage and implementation complexity. Its sandboxing feature can be used to isolate functions and resources. This increases the security of the program and provides coroutines for multitasking.\n\nAll these features come with a simple syntax and easily understandable format so that anyone can easily pick up Lua and use it in their programs.\n\nLicense\n\nLua is free and open-source software distributed under the MIT license. This means anyone can use Lua for any purpose without paying any licensing or royalty fees.\n\nAdvantages & drawbacks\n\nLike any language, Lua has its pros and cons.\n\nAdvantages of Lua\n\nEasy app integration. Its high performance and small size make it easy to integrate Lua into applications.\n\nSimple syntax. Relatively simple syntax structure with around 20 dedicated keywords, which helps to dive into Lua programming easily.\n\nFlexibility. Without standard libraries, you can customize Lua to meet any need.\n\nCross-platform compatibility and support for the standard C compiler allows Lua to run virtually anywhere.\n\nDynamic variables in Lua allow defining variables without defining types, and the type is determined automatically at the runtime.\n\nEasy debugging. Simple and powerful debug library.\n\nPlenty of documentation. Comprehensive documentation to get Lua projects up and running quickly and the active community.\n\nDisadvantages of Lua\n\nLimited error handling support can lead to longer debug times to identify the exact errors in a Lua script.\n\nAll variables are created as global variables (global scope), which can lead to errors in variable assignments.\n\nLimited pattern matching support.\n\nWhen to use Lua\n\nAs a scripting language without major limitations, you can use Lua for any scenario, from a simple backend script in a web server to complex game development.\n\nLua is highly prevalent in video game development as it can be used to create functionality without contaminating the overall performance while also keeping everything separate.\n\nAnother area that Lua excels is embedded programming, where size and performance are major concerns. Lua can be used in everyday applications to extend the existing functionality or create new features and functions.\n\nSome popular games, programs, and services that use Lua are Dark Souls, Fable II, Garry’s Mod, Wireshark, VLC, Apache, and Nginx Web Servers.\n\nLua vs other languages\n\nHow does Lua stack up against other languages?\n\nHere’s a look at the differences between the high-level general programming language Python, the high-level object-oriented Java, and web-focused Javascript—all compared to Lua.\n\nInstalling Lua\n\nNow, let’s see how to set up a development environment in Windows. First, we’ll install Lua.\n\nStep 1\n\nNavigate to the Lua.org download page. Here, we will be using a precompiled binary to install Lua in windows. So, click on “get a binary link” as shown in the below screenshot.\n\nStep 2\n\nClick “Download” on the LuaBinaries page, and you will be redirected to a page with a list of precompiled binaries. Select the appropriate version from that list.\n\nWe will be using the latest Lua version for Windows 64 bit.\n\nThis will direct the user to a SourceForge page, where the binary will be downloaded.\n\nStep 3\n\nMove the downloaded Zip file to any location to store the binaries permanently.\n\nHere, we will be using the “D:\\Program Files\\Lua” as the location. After moving the Zip file, simply extract its content using any compression utility (Ex: Windows Explorer, 7zip, WinRar).\n\nStep 4\n\nWe need to add the location of Lua binaries to the system PATH so that Windows can call Lua from anywhere in the system.\n\nStep 4.1. Navigate to Environment Variables. (Open Windows Explorer, right-click on This PC, and select properties.)\n\nStep 4.2. Click on “Advanced System Settings” in the screen that appears and then click on “Environment Variables”.\n\nStep 4.3. In the system variables section, add the location of the Lua executables as a new entry for the Path variable.\n\nStep 5\n\nCheck if the system identifies Lua by opening up a command prompt or a PowerShell window and typing the Lua command (Lua with the version – lua54).\n\nSetting up a Lua development environment\n\nNow that we have installed Lua in the system, we need a development environment to go ahead with coding. For that, we can choose between:\n\nA dedicated Lua IDE like ZeroBrane Studio\n\nA general IDE like VSCode\n\nWe will be using VSCode for this instance.\n\nStep 1\n\nLet’s create a file called “lua_basic.lua” in VSCode and save that file in the desired location. Then we will type some print statements there like the following.\n\nprint(\"Hello Lua\") print(10*10) print(\"We have multiplied 10 by 10\")\n\nStep 2\n\nOur Lua program needs to be compiled before running, so we need to create a Build Task. To do that, click on Terminal Menu, then Run Built Task and select the Configure Build Task Option.\n\n( There will be different build task templates depending on the VSCode configuration. Select “Create tasks.json from template” and finally the “Others” option to define a custom build task.)\n\nRun Build Task\n\nConfigure Build Task\n\nCreate tasks.json from template\n\nOther\n\nStep 2.1. We will add the following code block to configure the task. In that code block, we have defined a task called “Run Lua” that will run on the shell with the command “lua54”. That command will take the current file as the argument and carry out a build operation.\n\n{ \"version\": \"2.0.0\", \"tasks\": [ { \"label\": \"Run Lua\", \"type\": \"shell\", \"command\": \"lua54\", \"args\": [ \"${file}\" ], \"group\": { \"kind\": \"build\", \"isDefault\": true } } ] }\n\ntask.json\n\nStep 3\n\nOpen up the “lua_basic.lua” file again. Then go to the “Terminal” again and click on “Run Build Task” or use the shortcut Ctrl+Shift+B.\n\nThis will compile the file and provide us with the output.\n\nThat’s it! Now we have a working Lua development environment that can be used to create Lua scripts. We can use the official Lua reference manual to explore the Lua language further.\n\nLua is powerful\n\nLua is a powerful scripting language that has limitless potential to add functionality to any program on a multitude of platforms to suit any use case.\n\nRelated reading\n\nBMC DevOps Blog\n\nTop 5 Best Practices for Software Development\n\nJava vs Go: What’s The Difference?\n\nPython Development Tools: Your Python Starter Kit\n\nDevOps Engineer Roles & Responsibilities\n\nAPI/Developer Portals: How To Create Great API Portals\n\nThese postings are my own and do not necessarily represent BMC's position, strategies, or opinion."
    }
}