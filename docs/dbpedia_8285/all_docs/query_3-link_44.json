{
    "id": "dbpedia_8285_3",
    "rank": 44,
    "data": {
        "url": "https://www.greengeeks.com/tutorials/restore-a-mysql-database-from-a-backup-with-mysql-workbench/",
        "read_more_link": "",
        "language": "en",
        "title": "How to Restore a MySQL Database From a Backup With MySQL Workbench",
        "top_image": "https://www.greengeeks.com/tutorials/wp-content/uploads/2019/04/MySQL-Workbench-database-restore-01.png",
        "meta_img": "https://www.greengeeks.com/tutorials/wp-content/uploads/2019/04/MySQL-Workbench-database-restore-01.png",
        "images": [
            "https://www.greengeeks.com/tutorials/wp-content/uploads/2021/07/cropped-greengeeks-tuts-logo-191x64.png",
            "https://www.greengeeks.com/tutorials/wp-content/uploads/2021/07/cropped-greengeeks-tuts-logo-191x64.png",
            "https://www.greengeeks.com/tutorials/wp-content/uploads/2019/04/MySQL-Workbench-database-restore-01.png",
            "https://www.greengeeks.com/tutorials/wp-content/uploads/2019/04/MySQL-Workbench-database-restore-02.png",
            "https://www.greengeeks.com/tutorials/wp-content/uploads/2019/04/MySQL-Workbench-database-restore-03.png",
            "https://www.greengeeks.com/tutorials/wp-content/uploads/2019/04/MySQL-Workbench-database-restore-04.png",
            "https://www.greengeeks.com/tutorials/wp-content/uploads/2019/04/MySQL-Workbench-database-restore-05.png",
            "https://www.greengeeks.com/tutorials/wp-content/uploads/2019/04/MySQL-Workbench-database-restore-06.png",
            "https://www.greengeeks.com/tutorials/wp-content/uploads/2019/04/MySQL-Workbench-database-restore-07.png",
            "https://www.greengeeks.com/tutorials/wp-content/uploads/2019/04/MySQL-Workbench-database-restore-07a.png",
            "https://www.greengeeks.com/tutorials/wp-content/uploads/2019/04/MySQL-Workbench-database-restore-08x.png",
            "https://www.greengeeks.com/tutorials/wp-content/uploads/2019/04/MySQL-Workbench-database-restore-09.png",
            "https://www.greengeeks.com/tutorials/wp-content/uploads/2019/04/MySQL-Workbench-database-restore-10.png",
            "https://www.greengeeks.com/tutorials/wp-content/uploads/2019/04/MySQL-Workbench-database-restore-11.png",
            "https://www.greengeeks.com/tutorials/wp-content/uploads/2021/12/wordpress-hosting-speedup.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Michael Phillips",
            "Kaumil Patel"
        ],
        "publish_date": "2019-04-23T14:00:41+00:00",
        "summary": "",
        "meta_description": "All the necessary steps to restore a MySQL database from a backup, including the necessary configuration to connect to your database with MySQL Workbench.",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "GreenGeeks",
        "canonical_link": "https://www.greengeeks.com/tutorials/restore-a-mysql-database-from-a-backup-with-mysql-workbench/",
        "text": "Share via:\n\nIf you perform your own database backups, it’s also possible to do your own database restoration without relying on a host or third party. Let’s see what it takes to restore a MySQL database with Workbench.\n\nBefore we get started, our tutorial, “Making a MySQL Database Backup With MySQL Workbench,” covers the backup part of the equation (using MySQL Workbench).\n\nIn this tutorial, we will go through the steps to restore a database from a backup. We will also cover the necessary configuration to connect to your database with MySQL Workbench. This will cover everything for you in one spot, in case you’ve never done so.\n\nConfiguring MySQL Workbench to Connect to Your Database\n\nMany commercial hosts block outside database connections, so you may have to add your home or office IP address to a remote access list. Check with your host to see what their requirements are. If your website uses cPanel, you can set up a remote connection in Databases > Remote MySQL.\n\nOpen MySQL Workbench and click the + icon to start a new database connection.\n\nComplete the five connection and authorization fields underlined below.\n\nGive the connection a name.\n\nChoose “Standard (TCP/IP) as the “Connection Method” (SSH connection configuration is available if your host requires it).\n\nEnter the MySQL server hostname or IP address.\n\nEnter the MySQL database username.\n\nClick the “Store in Vault…” button to enter the database password (if you don’t want to store the password, skip this field).\n\nClick the “Test Connection” button.\n\nIf you get a “Cannot Connect to Database Server” error, check your entries in the connection fields.\n\nIf everything is correct, you’ll see the successful connection box. Click the “OK” button and move on from there.\n\nNow click the “OK” button in “Manage Server Connections” to close the connection test window.\n\nConfiguring MySQL Workbench to Restore (Import) Your Database\n\nClick the box for the database connection that you just set up.\n\nClick the “Data Import/Restore” link.\n\nFor this tutorial, we’re assuming you are restoring a “Self-Contained File” backup. See “Making a MySQL Database Backup With MySQL Workbench,” for an explanation of the difference between a self-contained file and a dump project folder.\n\nSelect “Import from Self-Contained File,” and locate the backup file that will be used for restoration.\n\nSelect the “Default Target Schema” from the drop-down. The drop-down should be pre-populated with the schema name from the backup file.\n\nSince we are restoring the entire database from a self-contained file, “Select Database Objects to Import” is left blank because there is no need to select specific tables.\n\nMake sure “Dump Structure and Data” is selected from the dropdown.\n\nClick the “Import Progress” tab.\n\nClick the “Start Import” button.\n\nWhen the restoration is complete, you’ll see an “Import Completed” dialog.\n\nThat’s it! You have successfully restored a MySQL database from a backup with MySQL Workbench.\n\nWhile you’re here, let’s talk a bit about what MySQL is and its interesting history.\n\nWhat is MySQL?\n\nOften pronounced “my sequel,” let’s take a quick look at where this came from. A Swedish company called MySQL AB that originally developed the open-source MySQL all the way back in 1994. The correct pronunciation is “MY-ES-KYOO-EL.” MySQL is considered open source, even though sometimes it feels like it isn’t.\n\nAs years went by, a United States tech company by the name of Sun Microsystems took full ownership when they bought MySQL AB back in 2008. After that, the massive US tech giant Oracle acquired Sun Microsystems itself, and MySQL has been owned by Oracle ever since.\n\nNow that you have a little history on it, let’s take a look at the actual definition. Essentially, MySQL is an open-source relational database management system (RDBMS) with a client-server model. RDBMS is actually software that is used to create and manage databases on a relational model.\n\nIf you work with something like WordPress, then you will be at least a little familiar with a MySQL database. If you are still having a little trouble with some of the terms above, let’s take a quick look at them together.\n\nDatabase\n\nA database is a collection of structured data. In order to break it down into a very simple way to think about it let’s use an example.\n\nIf you take a video with your phone, that video is the data. Your phone’s video gallery would be the database. The database is the area where the data is stored and organized. In this case the video is the data, and it is being stored and organized by the gallery on your phone.\n\nOpen Source\n\nSimply put, open-source means that anyone is free to use, add, subtract, and modify. Anyone can install t and use it for free. You can also learn to customize the source code.\n\nOpen source is a way to allow people to contribute and have input while keeping something strong in place.\n\nClient-Server Model\n\nComputers that install and run the above mentioned RDBMS software are called “clients.” Whenever they have to access data, they connect to the RDBMS server. That’s the “client-server” side of the term above.\n\nMySQL is actually just one of many RDBMS software options. Many people think they are actually the same thing because of the popularity of MySQL. It actually seems like everyone is running it these days.\n\nLarge entities that we all know like Facebook, Twitter, YouTube, Google, and Yahoo use MySQL for data storage purposes. When it was first created, MySQL was built for limited usage. However, it is now compatible with many important computing platforms such as Linux, macOS, Microsoft Windows, and Ubuntu.\n\nMySQL and SQL Differences\n\nA little understanding can go a long way to help you restore a MySQL database. It is important to remember that MySQL and SQL are not the same and there are some very key differences. Before I show you how to restore a MySQL database from a backup, let’s take a quick look at the differences between SQL and MySQL.\n\nSQL is the language that is used to operate the database. MySQL is one of the first open-source databases that are available to use.\n\nThe SQL is the way to access, update, and manipulate data. MySQL is an RDBMS that allows keeping the data that exists in a database organized, as described some above in video and phone example.\n\nSQL is a “Structured Query Language.” MySQL is an RDBMS to store, retrieve, modify, and administrate a database.\n\nSQL is a query language. MySQL is database software.\n\nFinal Thoughts\n\nIf you are someone who deals with your own database backups and restorations, then the Workbench tool we talk about above is going to be very helpful to you. It gives you the ability to do all sorts of things, including creating and restoring MySQL databases.\n\nI hope this tutorial has given you a clear and easy way to restore a MySQL database. The Workbench tool can be very useful and is not too difficult to use. Performing the steps above should give you exactly what you need in just a few minutes. Remember, MySQL is extremely popular, so if you are dealing with a database, there is a good chance is MySQL.\n\nHave you ever had to restore a database from a backup? Do you use backups for development purposes?"
    }
}