{
    "id": "dbpedia_8285_3",
    "rank": 77,
    "data": {
        "url": "https://five.co/blog/from-mysql-gui-to-application/",
        "read_more_link": "",
        "language": "en",
        "title": "From MySQL GUI to Application: 2 Ways to Build & Deploy Apps on a MySQL Database",
        "top_image": "https://five.co/wp-content/uploads/2023/03/Five.Co-MySQL-GUI-Online_-2-Ways-to-Build-Deploy-Apps-on-a-MySQL-Database.png",
        "meta_img": "https://five.co/wp-content/uploads/2023/03/Five.Co-MySQL-GUI-Online_-2-Ways-to-Build-Deploy-Apps-on-a-MySQL-Database.png",
        "images": [
            "https://five.co/wp-content/themes/five-theme/assets/img/five-logo.svg",
            "https://five.co/wp-content/themes/five-theme/assets/img/five-logo.svg",
            "https://five.co/wp-content/uploads/2021/03/profile-dominik-44x44.jpg",
            "https://five.co/wp-content/uploads/2023/03/Five.Co-How-to-go-from-MySQL-database-to-web-application.png",
            "https://five.co/wp-content/uploads/2023/02/Five.Co-Database-Popularity-Stack-Overflow-Survey-2017-2022.png",
            "https://five.co/wp-content/uploads/2023/03/Five.Co-MySQL-Command-Line-Client-MySQL-GUI-1.png",
            "https://five.co/wp-content/uploads/2023/03/Five.Co-MySQL-Workbench-MySQL-GUI.png",
            "https://five.co/wp-content/uploads/2023/03/Five.Co-phpMyAdmin-MySQL-GUI.png",
            "https://five.co/wp-content/uploads/2023/03/Five.Co-Database-Modeler.png",
            "https://five.co/wp-content/uploads/2023/03/Five.Co-Code-Editor.png",
            "https://five.co/wp-content/uploads/2023/03/Five.Co-Pre-Built-UI.png",
            "https://five.co/wp-content/uploads/2023/03/Five.Co-One-Click-Deployment.png",
            "https://five.co/wp-content/uploads/2024/08/Five.Co-How-to-Perform-a-Random-Select-in-MySQL-768x432.png",
            "https://five.co/wp-content/uploads/2024/08/Five.Co-How-to-Declare-a-Variable-in-MySQL-768x432.png",
            "https://five.co/wp-content/uploads/2024/08/Five.Co-MySQL-Loops-A-Comprehensive-Guide-768x432.png",
            "https://five.co/wp-content/themes/five-theme/assets/img/five-logo.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Dominik Keller"
        ],
        "publish_date": "2023-03-23T10:16:30+08:00",
        "summary": "",
        "meta_description": "Creating a web application on a MySQL database requires a variety of tools, such as a MySQL GUI, an IDE and a database server.",
        "meta_lang": "en",
        "meta_favicon": "https://five.co/wp-content/themes/five-theme/assets/img/favicon.ico",
        "meta_site_name": "Five",
        "canonical_link": "https://five.co/blog/from-mysql-gui-to-application/",
        "text": "What is a MySQL GUI?\n\nNow let’s speak about MySQL tooling: MySQL GUIs or MySQL IDEs.\n\nGUI = Graphical User Interface\n\nIDE = Integrated Development Environment\n\nThese two terms are sometimes used interchangeably. But for the sake of consistency, we will stick with MySQL GUI in this article.\n\nWhat is a MySQL GUI? A MySQL GUI is a visual interface designed to let developers create and manage a MySQL database. The standard functionality of any MySQL GUI includes creating new databases and tables; writing and executing SQL queries to inspect data; creating joins or inserting new records into a table; as well as visually modeling Entity-Relationship Diagrams (ERDs), for example.\n\nUsing the MySQL Command Line Client\n\nSome developers recommend using the MySQL command line client, instead of a MySQL GUI.\n\nWhen using the MySQL command line client, developers can execute queries directly using command-line syntax, such as\n\nCREATE DATABASE dbname;\n\nUSE dbname;\n\nDROP dbname;\n\nFor a full list of the MySQL command-line syntax, check out the official MySQL documentation.\n\nThe MySQL Command Line Client is the “no-frills” way of administering a MySQL database: it is designed to run SQL commands from the CLI only. Some developers love the simplicity of it and find more advanced MySQL GUIs to be bloated.\n\nUsing a MySQL GUI\n\nA MySQL GUI replaces some of the commands run in the command-line client with a point-and-click or WYSIWYG interface. They are a more user-friendly way of administering a MySQL database than using the command line interface (CLI) as a MySQL client.\n\nOftentimes, developers ask: What is the best GUI for MySQL? There is no clear answer: different developers prefer different MySQL GUIs and there is a large selection of different GUIs available. We limit ourselves to two of the more popular choices for a MySQL GUI in this article: MySQL Workbench and phpMyAdmin.\n\nMySQL Workbench and phpMyAdmin are free and open-source MySQL GUIs with robust and rich functionality. Visit their websites – free download of MySQL Workbench and free download of phpMyAdmin – to get started with these tools.\n\nSimilarities and Differences between MySQL Workbench and phpMyAdmin\n\nBoth MySQL Workbench and phpMyAdmin are free and open-source database administration tools. And both offer a comprehensive suite of features to manage and create MySQL databases.\n\nBoth MySQL GUIs can be used to administer a MySQL database or to write and run queries, inspect data, and alter tables.\n\nBoth MySQL GUIs also offer visual database modeling capabilities, such as an Entity Relationship Diagram (ERD) modeler, and come packed with handy features, such as syntax highlighting. The visual ERD modeler is a useful tool for beginners and experts alike. It lets developers create and edit a database schema visually, and then export the diagram as MySQL code. This helps understand table relationships or discuss database structures with business analysts or data scientists.\n\nThere is an important difference between MySQL Workbench and phpMyAdmin, however. Only one of the two is an online MySQL GUI.\n\nMySQL Workbench is not available as a web-based tool. It needs to be installed on your operating system of choice. phpMyAdmin, on the other hand, is a portable web application that can be accessed from any browser. This means your MySQL client is accessible from anywhere. The drawback is database security. When using phpMyAdmin, the advice is to secure your SQL client and the databases.\n\nIt’s also important to understand what these two MySQL GUIs are not: they are not interfaces that you would ever want your end users to ever see, touch, or have access to. They are just GUIs designed to replace the command-line client for MySQL. That’s why these tools alone are not enough to build a full-stack application on a MySQL database.\n\nTwo Ways of Building and Deploying an Application on a MySQL Database\n\nA MySQL GUI, such as MySQL Workbench or phpMyAdmin, is just one of the tools required to build an application on a MySQL database. The other tools & technologies required are:\n\nA database server.\n\nA front-end, created in an IDE.\n\nOptionally, a mock-up using a web design tool such as Figma.\n\n1. From MySQL GUI to Application: Traditional Development\n\nTo connect a database to a web application and create a MySQL database application with a web front-end for end users to create, read, update, or delete (CRUD), the following steps are required.\n\nChoose a database management system (DBMS): Select a DBMS that suits your application’s requirements, such as MySQL, PostgreSQL, MongoDB, or SQLite. Consider factors like scalability, data structure, security, and compatibility with your development stack.\n\nSet up the database: Install and configure the chosen DBMS on your server or use a cloud-based database service, such as AWS, Azure, or GCP.\n\nThere are also some free options, such as Free Remote MySQL but these usually come with size or usage limitations, such as keeping databases under 100 MB. Create the necessary tables, define relationships between entities, and set up indexes or constraints as needed\n\nConnect to the database: In your web application’s backend code, establish a connection to the database using appropriate credentials. The specific process may vary depending on the programming language and framework you’re using to build your application. Most frameworks provide libraries or modules to simplify database connectivity. This has to be done from inside your Integrated Development Environment, such Visual Studio Code.\n\nTo set up a new database connection from inside your MySQL GUI, provide the hostname (endpoint), port, and username. This information is provided by the database instance that you are connecting to. Beyond that, the cloud providers also give you configuration options to manage your database, such as back-ups, availability, or picking volume types.\n\nExecute database operations: Use SQL (Structured Query Language) or an ORM (Object-Relational Mapping) tool to interact with the database. SQL allows you to perform operations like SELECT, INSERT, UPDATE, and DELETE to fetch, insert, modify, or delete data. ORMs provide an abstraction layer, allowing you to work with objects instead of writing raw SQL queries.\n\nHandle database queries: Write queries or use ORM methods to retrieve data from the database based on specific criteria, such as filtering, sorting, or joining tables. Process the query results and format the data to suit your application’s needs.\n\nManage database transactions: When performing multiple database operations as part of a single logical unit, it’s important to handle transactions. Transactions ensure data consistency by allowing you to commit changes as a single atomic operation or roll back changes if an error occurs.\n\nImplement data validation and security: Validate user inputs to prevent malicious data from entering the database. Sanitize input to avoid SQL injection attacks. Implement access controls, authentication, and authorization mechanisms to secure the database and control user permissions.\n\nOptimize database performance: Design efficient database schemas, create appropriate indexes, and use caching mechanisms to optimize query performance. Regularly analyze query execution plans and optimize slow-performing queries to improve overall application performance.\n\nHandle database migrations and versioning: As your web application evolves, you may need to modify the database schema or add new features. Use database migration tools or scripts to manage and track changes to the database schema across different application versions.\n\nIn a traditional development process, the different tasks described above (creating a database, hosting the database, writing the code, creating and designing a front end) are usually managed by a team of back-end and front-end developers, as well as web designers. Some full-stack developers are capable of executing all steps, but this is a rare exception, especially for more complex applications.\n\n2. From MySQL GUI to Application: Using Five’s Low-Code IDE\n\nAn alternative way of creating a full-stack web application on a MySQL database is using Five, an IDE that covers all steps from data modeling to application deployment.\n\nFive combines the functionality of the different tools described above. It gives developers an integrated development environment that includes (some) functionality of a traditional MySQL GUI, a Visual Studio-like code editor, as well as application theming options using CSS.\n\nFive also simplifies the hosting of the application. Every application that is developed using Five comes with a pre-configured development, testing, and production environment hosted on the cloud. The production environment is supported by a fully provisioned, cloud-hosted MySQL database. Because Five handles deployment, no cloud expertise is required to set up a database server or connect Five to a MySQL database.\n\nLet’s go through each step one by one to compare Five against the traditional development process:\n\nUsing Five as a MySQL GUI,\n\nUsing Five to write code,\n\nUsing Five to create the user interface, and\n\nUsing Five to deploy the application to the cloud\n\nStep 1: Using Five as a MySQL GUI"
    }
}