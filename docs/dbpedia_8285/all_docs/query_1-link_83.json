{
    "id": "dbpedia_8285_1",
    "rank": 83,
    "data": {
        "url": "https://fossies.org/linux/mysql-workbench/INSTALL",
        "read_more_link": "",
        "language": "en",
        "title": "MySQL Workbench: INSTALL",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://fossies.org/warix/forest1.gif",
            "https://fossies.org/warix/forest2.gif",
            "https://fossies.org/delta_answer_10.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "\"Fossies\" - the Fresh Open Source Software Archive\n\nMember \"mysql-workbench-community-8.0.38-src/INSTALL\" (17 Jun 2024, 4182 Bytes) of package /linux/misc/mysql-workbench-community-8.0.38-src.tar.gz:\n\nAs a special service \"Fossies\" has tried to format the requested text file into HTML format (style: standard) with prefixed line numbers. Alternatively you can here view or download the uninterpreted source code file. See also the last Fossies \"Diffs\" side-by-side code changes report for \"INSTALL\": 8.0.15_vs_8.0.16.\n\n1 MySQL Workbench 8.0 2 ------------------- 3 4 MySQL Workbench is a complete database modeling, administration and development program for MySQL. 5 6 7 This tree contains the source files for the MySQL Workbench 8.0. 8 9 MySQL Workbench is an extensible visual database design tool. 10 11 12 Buiding on Linux 13 ---------------- 14 15 To build MySQL Workbench on Ubuntu and other Debian based distros: 16 17 - Remove iodbc, if necessary 18 19 $> sudo apt-get remove iodbc 20 21 - Install dependencies 22 23 $> sudo apt-get install build-essential cmake cmake-data autoconf automake pkg-config libtool libzip-dev libxml2-dev \\ 24 libsigc++-2.0-dev libglade2-dev libglu1-mesa-dev libgl1-mesa-glx \\ 25 mesa-common-dev libmysqlclient-dev libmysqlcppconn-dev uuid-dev libpixman-1-dev libpcre3-dev \\ 26 libpango1.0-dev libcairo2-dev python-dev \\ 27 libboost-dev mysql-client python-pysqlite2 libsqlite3-dev \\ 28 swig libvsqlitepp-dev libgdal-dev libgtk-3-dev libgtkmm-3.0-dev libssl-dev \\ 29 libsecret-1-dev libproj-dev 30 31 * X - put the proper value for your system 32 33 - Extract the sources into a directory 34 35 $> tar xvf mysql-workbench-community-<version>-src.tar.gz 36 37 - Go to the project and create a build directory 38 39 $> cd mysql-workbench-community-<version>-src 40 $> mkdir wb-build 41 $> cd wb-build 42 43 - Build and install the project, and optionaly set the install prefix (should default to /usr/local) 44 45 $> cmake [-DCMAKE_INSTALL_PREFIX=/usr] .. 46 $> make 47 $> sudo make install 48 49 - If you don't have permissions, you may install it on the current directory 50 51 $> make install DESTDIR=. 52 53 54 For complete and up-to-date instructions, visit http://wb.mysql.com/?page_id=152 55 56 Note about swig: 57 - You will need swig 3.0 to build WB 58 59 Note about ANTLR: 60 - ANTLR 4.7 is required to generate the files for the MySQL Parser. Download antlr-4.7.2-complete.jar from http://www.antlr.org/download.html. 61 Then you'll need to pass it as cmake argument: 62 -DWITH_ANTLR_JAR=<path_to_your_antlr_complete_file> 63 64 Note about iodbc: 65 - Instead of iodbc you can use unixodbc. To do that you need to install unixodbc and add -DUSE_UNIXODBC=True to cmake. 66 67 Note about gdal: 68 - Ubuntu Packages require unixodbc, so if you're using it, there won't be any problem. If you want to use iodbc, you'll need to build it from source. 69 70 Building on Windows 71 ------------------- 72 73 To build on Windows, you need Visual Studio 2017 with C++ and C# support. 74 You also need to prepare pre-compiled binaries for all the 3rd party libraries that Workbench 75 depends on. You can use a C++ package manager for Windows, Linux and MacOS 76 https://docs.microsoft.com/en-us/cpp/vcpkg?view=vs-2017 77 78 To Build: 79 - Create folder bundle or similar and put there all 3dpart libs. Folder should look like: 80 * bin 81 * include 82 * lib 83 * debug 84 ** bin 85 ** include 86 ** lib 87 * python 88 - Create in system environoment variable which point to folder where 3rd party libs are located WB_3DPARTY_LIB=<libs and headers files directory> 89 - Go to the mysql-workbench directory 90 - Open MySQLWorkbench.sln solution file 91 - Select Release_OSS or the Debug Configuration 92 - Build Project 93 94 95 96 Buiding on macOS 97 ------------------- 98 99 - Go to http://rudix.org/ and download and install the following packages 100 gettext, glib, libpng, libsigc++, lua, pkg-config, pcre, libzip, cairo, pixman 101 - Install a recent MySQL server (64bit). The installer will link /usr/local/mysql 102 to the correct installation. 103 - Install the latest MySQL Connector/C++ and vsqlite++. 104 - Install the latest Xcode and open the MySQLWorkbench.xcodeproj file. 105 - In the target dropdown pick MySQLWorkbench and build it. 106 107 ============================================================================== 108 109 110 MySQL Workbench OSS edition is licensed under the terms of the 111 General Public License version 2. For the exact terms of this license, 112 please view the included COPYING file. 113 114 115 ============================================================================== 116 117 118 For more information, newer versions, FAQ, mailing lists etc 119 visit http://wb.mysql.com 120 121 122 The MySQL Workbench Team."
    }
}