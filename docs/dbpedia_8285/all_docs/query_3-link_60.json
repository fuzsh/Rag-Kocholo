{
    "id": "dbpedia_8285_3",
    "rank": 60,
    "data": {
        "url": "https://netbeans.apache.org/tutorial/main/kb/docs/ide/mysql/",
        "read_more_link": "",
        "language": "en",
        "title": "Connecting to a MySQL Database",
        "top_image": "https://netbeans.apache.org/_/images/fav/favicon-32x32.png",
        "meta_img": "https://netbeans.apache.org/_/images/fav/favicon-32x32.png",
        "images": [
            "https://netbeans.apache.org/_/images/apache-netbeans.svg",
            "https://netbeans.apache.org/tutorial/main/_images/kb/docs/ide/mysql-props1.png",
            "https://netbeans.apache.org/tutorial/main/_images/kb/docs/ide/mysql-props2.png",
            "https://netbeans.apache.org/tutorial/main/_images/kb/docs/ide/services-running.png",
            "https://netbeans.apache.org/tutorial/main/_images/kb/docs/ide/create-db-dbx.png",
            "https://netbeans.apache.org/tutorial/main/_images/kb/docs/ide/connection-node-icon.png",
            "https://netbeans.apache.org/tutorial/main/_images/kb/docs/ide/connection-node-icon.png",
            "https://netbeans.apache.org/tutorial/main/_images/kb/docs/ide/run-sql-button.png",
            "https://netbeans.apache.org/tutorial/main/_images/kb/docs/ide/create-counselor-query.png",
            "https://netbeans.apache.org/tutorial/main/_images/kb/docs/ide/table-node.png",
            "https://netbeans.apache.org/tutorial/main/_images/kb/docs/ide/primary-key-icon.png",
            "https://netbeans.apache.org/tutorial/main/_images/kb/docs/ide/counselor-table.png",
            "https://netbeans.apache.org/tutorial/main/_images/kb/docs/ide/add-column-dialog.png",
            "https://netbeans.apache.org/tutorial/main/_images/kb/docs/ide/create-table-subject.png",
            "https://netbeans.apache.org/tutorial/main/_images/kb/docs/ide/table-node.png",
            "https://netbeans.apache.org/tutorial/main/_images/kb/docs/ide/sql-results.png",
            "https://netbeans.apache.org/tutorial/main/_images/kb/docs/ide/connection-drop-down.png",
            "https://netbeans.apache.org/tutorial/main/_images/kb/docs/ide/run-sql-button.png",
            "https://netbeans.apache.org/_/images/asf_logo_wide.svg",
            "https://www.apache.org/events/current-event-234x60.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "Apache NetBeans",
            "Tutorials",
            "Connecting to a MySQL Database"
        ],
        "tags": null,
        "authors": [
            "Apache NetBeans"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "Connecting to a MySQL Database - Apache NetBeans",
        "meta_lang": "en",
        "meta_favicon": "../../../../../../_/images/fav/apple-touch-icon.png",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "This document demonstrates how to set up a connection to a MySQL database from the NetBeans IDE. Once connected, you can begin working with MySQL in the IDE’s Database Explorer by creating new databases and tables, populating tables with data, and running SQL queries on database structures and content. This tutorial is designed for beginners with a basic understanding of database management, who want to apply their knowledge to working with MySQL in NetBeans IDE.\n\nMySQL is a popular Open Source relational database management system (RDBMS) commonly used in web applications due to its speed, flexibility and reliability. MySQL employs SQL, or Structured Query Language, for accessing and processing data contained in databases.\n\nThis tutorial assumes that you already have the MySQL RDBMS installed and configured on your computer. If you are installing for the first time, please refer to the official MySQL documentation for help. You can also refer to Setting Up the MySQL Database Server in the Windows Operating System.\n\nBefore you can connect to a MySQL Database Server, you must first ensure that the MySQL Database Server is running on your machine. If the database server is not connected you will see (disconnected) next to the user name in the MySQL Server node in the Service window and you will not be able to expand the node.\n\nTo connect to the database server, confirm that the MySQL Database Server is running on your machine, right-click the Databases > MySQL Server node in the Services window and choose Connect. You might be prompted to supply a password to connect to the server.\n\nWhen the server is connected you will be able to expand the MySQL Server node and view the all available MySQL databases.\n\nA common way of interacting with databases is through an SQL editor. NetBeans IDE has a built-in SQL Editor for this purpose. The SQL Editor is generally accessible via the Execute Command option from the right-click menu of the connection node (or of the connection node’s child nodes). Now that you are connected to the MySQL server, you can create a new database instance using the SQL Editor. For purposes of this tutorial, create an instance called MyNewDatabase :\n\nIn the IDE’s Services window, right-click the MySQL Server node and choose Create Database.\n\nThe Create MySQL Database dialog box opens.\n\nIn the Create MySQL Database dialog box, type the name of the new database. We will use MyNewDatabase for this tutorial. Leave the checkbox unselected at this time.\n\nYou can also grant full access to a given user. By default, only the admin user has the permissions to perform certain commands. The drop down list lets you assign these permissions to a specified user.\n\nClick OK.\n\nThe new database appears under the MySQL Server node in the Services window.\n\nRight-click the new database node and choose Connect in the popup menu to open the connection to the database.\n\nDatabase connections that are open are represented by a complete connection node ( ) in the Services window.\n\nNow that you have connected to MyNewDatabase , you can begin exploring how to create tables, populate them with data, and modify data maintained in tables. This allows you to take a closer look at the functionality offered by the Database Explorer, as well as NetBeans IDE’s support for SQL files.\n\n``MyNewDatabase`` is currently empty. In the IDE it is possible to add a database table by either using the Create Table dialog, or by inputting an SQL query and running it directly from the SQL Editor. In the following exercises you will use the SQL editor to create the `Counselor` table and the Create Table dialog box to create the `Subject` table. After you create the tables you will run an SQL script to populate the tables.\n\nUsing the SQL Editor\n\nIn this exercise you will use the SQL editor to create the Counselor table.\n\nIn the Database Explorer, expand the MyNewDatabase connection node ( ) and note that there are three subfolders: Tables, Views and Procedures.\n\nRight-click the Tables folder and choose Execute Command. A blank canvas opens in the SQL Editor in the main window.\n\nIn the SQL Editor, type in the following query. This is a table definition for the Counselor table you are about to create.\n\nCREATE TABLE Counselor ( id SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT, firstName VARCHAR (50), nickName VARCHAR (50), lastName VARCHAR (50), telephone VARCHAR (25), email VARCHAR (50), memberSince DATE DEFAULT '0000-00-00', PRIMARY KEY (id) );\n\nQueries formed in the SQL Editor are parsed in Structured Query Language (SQL). SQL adheres to strict syntax rules which you should be familiar with when working in the IDE’s Editor. Upon running a query, feedback from the SQL engine is generated in the Output window indicating whether execution was successful or not.\n\nTo execute the query, either click the Run SQL ( ) button in the task bar at the top (Ctrl-Shift-E), or right-click within the SQL Editor and choose Run Statement. The IDE generates the Counselor table in the database, and you receive a message similar to the following in the Output window.\n\nTo verify changes, right-click the Tables node in the Database Explorer and choose Refresh. The Refresh option updates the Database Explorer’s UI component to the current status of the specified database. Note that the new Counselor table node ( ) now displays under Tables in the Database explorer. If you expand the table node you can see the columns (fields) you created, starting with the primary key ( ).\n\nUsing the Create Table Dialog\n\nIn this exercise you will use the Create Table dialog box to create the Subject table.\n\nIn the Database Explorer, right-click the Tables node and choose Create Table. The Create Table dialog opens.\n\nIn the Table name text field, type Subject .\n\nClick Add Column.\n\nFor the Name of the column, enter id . Choose SMALLINT for data type from the Type drop-down list. Click OK.\n\nSelect the Primary Key check box in the Add Column dialog box. You are specifying the primary key for your table. All tables found in relational databases must contain a primary key. Note that when you select the Key check box, the Index and Unique check boxes are also automatically selected and the Null check box is deselected. This is because primary keys are used to identify a unique row in the database, and by default form the table index. Because all rows need to be identified, primary keys cannot contain a Null value.\n\nRepeat this procedure by adding the remaining columns, as shown in the following table.\n\nKey Index Null Unique Column Name Data Type Size\n\n[checked]\n\n[checked]\n\n[checked]\n\nid\n\nSMALLINT\n\n0\n\n[checked]\n\nname\n\nVARCHAR\n\n50\n\n[checked]\n\ndescription\n\nVARCHAR\n\n500\n\nYou are creating a table named Subject that will hold data for each of the following records.\n\n*Name: *name of the subject\n\n*Description: *description of the subject\n\n*Counselor ID: *counselor ID that corresponds to an ID from the Counselor table\n\nMake sure that the fields in your Create Table dialog match those shown above, then click OK. The IDE generates the Subject table in the database, and you can see a new Subject table node ( ) immediately display under Tables in the Database Explorer.\n\nAnother way to manage table data in NetBeans IDE is by running an external SQL script directly in the IDE. If you have created an SQL script elsewhere, you can simply open it in NetBeans IDE and run it in the SQL Editor.\n\nFor demonstrative purposes, download ifpwafcad.sql and save it to a location on your computer. This script creates two tables similar to what you just created above ( Counselor and Subject ), and immediately populates them with data.\n\nBecause the script overwrites these tables if they already exist, delete the Counselor and Subject tables now so it becomes obvious that new tables are being created when the script is run. To delete tables:\n\nRight-click the Counselor and Subject table nodes in the Database Explorer and choose Delete.\n\nClick Yes in the Confirm Object Deletion dialog box. Note that the dialog box lists the tables that will be deleted.\n\nWhen you click Yes in the Confirm Object Deletion dialog box, the table nodes are automatically removed from the Database Explorer.\n\nTo run the SQL script on MyNewDatabase :\n\nChoose File > Open File from the IDE’s main menu. In the file browser navigate to the location where you previously saved ifpwafcad.sql and click Open. The script automatically opens in the SQL Editor.\n\nMake sure your connection to MyNewDatabase is selected from the Connection drop-down box in the toolbar at the top of the Editor.\n\nClick the Run SQL ( ) button in the SQL Editor’s task bar. The script is executed against the selected database, and any feedback is generated in the Output window.\n\nTo verify changes, right-click the MyNewDatabase connection node in the Runtime window and choose Refresh. The Refresh option updates the Database Explorer’s UI component to the current status of the specified database. Note that the two new tables from the SQL script now display as a table nodes under MyNewDatabase in the Database Explorer.\n\nChoose View Data from the right-click menu of a selected table node to see the data contained in the new tables. In this manner, you can compare the tabular data with the data contained in the SQL script to see that they match."
    }
}