{
    "id": "dbpedia_8285_3",
    "rank": 20,
    "data": {
        "url": "https://www.red-gate.com/simple-talk/featured/getting-started-mysql/",
        "read_more_link": "",
        "language": "en",
        "title": "Getting started with MySQL",
        "top_image": "https://www.red-gate.com/simple-talk/wp-content/uploads/2022/01/graphical-user-interface-description-automaticall-3.png",
        "meta_img": "https://www.red-gate.com/simple-talk/wp-content/uploads/2022/01/graphical-user-interface-description-automaticall-3.png",
        "images": [
            "https://www.red-gate.com/simple-talk/wp-content/themes/simple-talk-theme-2024/assets/images/logos/st-logo-white.svg",
            "https://www.red-gate.com/simple-talk/wp-content/themes/simple-talk-theme-2024/assets/images/icons/rss-white.svg",
            "https://www.red-gate.com/simple-talk/wp-content/themes/simple-talk-theme-2024/assets/images/icons/burger-white.svg",
            "https://www.red-gate.com/simple-talk/wp-content/themes/simple-talk-theme-2024/assets/images/icons/rss-white.svg",
            "https://www.red-gate.com/simple-talk/wp-content/uploads/2018/06/Robert-Sheldon.jpg",
            "https://www.red-gate.com/simple-talk/wp-content/themes/simple-talk-theme-2024/assets/images/sharing/x-white.svg",
            "https://www.red-gate.com/simple-talk/wp-content/themes/simple-talk-theme-2024/assets/images/sharing/linkedin-white.svg",
            "https://www.red-gate.com/simple-talk/wp-content/themes/simple-talk-theme-2024/assets/images/sharing/mastodon-white.svg",
            "https://www.red-gate.com/simple-talk/wp-content/themes/simple-talk-theme-2024/assets/images/sharing/facebook-white.svg",
            "https://www.red-gate.com/simple-talk/wp-content/uploads/2024/07/Image-600x823-1.jpeg",
            "https://www.red-gate.com/simple-talk/wp-content/themes/simple-talk-theme-2024/assets/images/logos/st-logo.svg",
            "https://www.red-gate.com/simple-talk/wp-content/themes/simple-talk-theme-2024/assets/images/logos/st-logo-white.svg",
            "https://www.red-gate.com/simple-talk/wp-content/uploads/2022/01/graphical-user-interface-description-automaticall-3.png",
            "https://www.red-gate.com/simple-talk/wp-content/uploads/2022/01/graphical-user-interface-text-application-descr-15.png",
            "https://www.red-gate.com/simple-talk/wp-content/uploads/2022/01/graphical-user-interface-text-application-descr-16.png",
            "https://www.red-gate.com/simple-talk/wp-content/uploads/2022/01/graphical-user-interface-text-application-descr-17.png",
            "https://www.red-gate.com/simple-talk/wp-content/uploads/2022/01/graphical-user-interface-text-application-descr-18.png",
            "https://www.red-gate.com/simple-talk/wp-content/uploads/2022/01/graphical-user-interface-application-description-3.png",
            "https://www.red-gate.com/simple-talk/wp-content/uploads/2022/01/graphical-user-interface-text-description-automa-3.png",
            "https://www.red-gate.com/simple-talk/wp-content/uploads/2022/01/graphical-user-interface-text-application-descr-19.png",
            "https://www.red-gate.com/simple-talk/wp-content/themes/simple-talk-theme-2024/assets/images/logos/st-logo.svg",
            "https://www.red-gate.com/simple-talk/wp-content/themes/simple-talk-theme-2024/assets/images/logos/st-logo-white.svg",
            "https://www.red-gate.com/simple-talk/wp-content/uploads/2018/06/Robert-Sheldon.jpg",
            "https://www.red-gate.com/simple-talk/wp-content/uploads/2024/07/shutterstock_2363953843.jpg",
            "https://www.red-gate.com/simple-talk/wp-content/uploads/2018/06/Robert-Sheldon.jpg",
            "https://www.red-gate.com/simple-talk/wp-content/uploads/2024/05/word-image-102499-1.png",
            "https://www.red-gate.com/simple-talk/wp-content/uploads/2018/06/Robert-Sheldon.jpg",
            "https://www.red-gate.com/simple-talk/wp-content/uploads/2024/04/refresh.jpg",
            "https://www.red-gate.com/simple-talk/wp-content/uploads/2018/06/Robert-Sheldon.jpg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Robert Sheldon"
        ],
        "publish_date": "2022-01-31T21:02:13+00:00",
        "summary": "",
        "meta_description": "The first step when getting started with MySQL is to get it installed and running. Robert Sheldon explains how to install it and create the first database and table.",
        "meta_lang": "en",
        "meta_favicon": "https://www.red-gate.com/simple-talk/wp-content/uploads/2016/07/gatebase-favicon.png",
        "meta_site_name": "Simple Talk",
        "canonical_link": "https://www.red-gate.com/simple-talk/featured/getting-started-mysql/",
        "text": "This article is part of Robert Sheldon's continuing series on Learning MySQL. To see all of the items in the series, click here.\n\nMySQL is a popular relational database management system developed and distributed by the Oracle Corporation. It provides a multi-user, multithreaded platform that can support a wide range of mission-critical workloads. As with other relational database management systems, such as SQL Server and PostgreSQL, MySQL is based on the Structured Query Language (SQL), a standardized programming language used to create database objects such as tables and views as well as build queries for accessing data through those objects. This article explains geting started with MySQL.\n\nFirst released in 1995, MySQL has its roots in the open-source community and continues to operate as an open-source project, despite now being owned by Oracle, which took over MySQL as part of its acquisition of Sun Microsystems in 2010. At the heart of the MySQL platform is MySQL Server, which provides the core database capabilities. You can access and download the source code for MySQL Server through GitHub.\n\nHowever, you don’t need the source code to get started with MySQL. Oracle offers the MySQL Community edition as a free download available under the GNU General Public License (GPL). Oracle also offers commercial editions that include additional features, but they require licensing and are not free to use. Fortunately, the Community edition is all you need to learn about MySQL.\n\nIn this article, I demonstrate how to set up the MySQL Community edition on a Windows computer and how to use MySQL Workbench to access the MySQL environment. I also show how to create a database, add a table to the database, insert data into the table, and then query that data. The examples I provide are fairly straightforward and should be easy to try out for yourself, even if you’re relatively new to relational databases. That said, you should still have a basic understanding of how relational databases work and how they use SQL before you dive into MySQL.\n\nInstalling MySQL on Windows\n\nYou can install MySQL on many operating systems, including Windows, macOS, Oracle Solaris, and Linux distributions such as Ubuntu, Debian, Fedora, SUSE Linux Enterprise Server, and Red Hat Enterprise Linux.\n\nMySQL comes in several editions: Community, Standard, Enterprise, and Cluster Carrier Grade Edition. Because the Community edition is free and available under the GPL license, it’s a great choice for learning about MySQL and creating test databases. For this article, I installed the MySQL Community edition on Windows 10 Pro, but you might choose to install it on one of the other supported platforms.\n\nThe approach you take to installing MySQL will depend on the operating system and your preferences. The easiest way to install MySQL on Windows is to use MySQL Installer, a downloadable tool that walks you through the steps of installing and setting up a MySQL instance. I also installed MySQL on macOS to test it out. For this, I used Homebrew and the Bash command shell, which made it relatively straightforward to set up MySQL Community Server and start running SQL commands.\n\nTo install the MySQL Community edition on Windows, take the following steps:\n\nDownload MySQL Installer’s .msi file from the MySQL site. (At the time of this article, the most recent installer file was mysql-installer-community-8.0.27.1.msi.)\n\nOnce downloaded, double-click the .msi file and follow the prompts to set up the installer.\n\nLaunch the installer and follow the wizard’s prompts as it steps you through the process of installing and configuring MySQL Server and any other components you want to install.\n\nWhen you run MySQL Installer, you’ll need to choose which products to install. For this article, I selected the most recent version of each of the following:\n\nMySQL Server. The primary MySQL Community instance.\n\nMySQL Workbench. A user interface for connecting to and working with a MySQL Server instance. Workbench is similar to using SQL Server Management Studio to access SQL Server.\n\nMySQL Documentation. A set of local help files that can be accessed locally through MySQL Workbench.\n\nYou can install other components, but the three listed here are all you need to follow along with the examples in this article.\n\nWhen installing MySQL Server, you’re also given the option to configure the server environment. When I configured the server on my instance, I used the following settings:\n\nType and Networking. I selected Development Computer from the Config Type drop-down list and left all other settings with their default values.\n\nAuthentication Method. I selected the Use Strong Password Encryption for Authentication option.\n\nAccounts and Roles. I provided a password for the root account but defined no other accounts at this time. However, you can create additional accounts as needed and assign them the necessary roles, depending on the environment in which you work and your specific needs.\n\nWindows Service. I selected the Configure MySQL Server as a Windows Service option and kept the default service name, MySQL80. I also stuck with the default settings for all other options.\n\nWhen you’re finished installing and configuring MySQL, the installer will display the products you installed, as shown in Figure 1. You can then close the installer and start working with MySQL. However, you can relaunch the installer at any time to add, upgrade, or remove products, as well as modify product components and reconfigure MySQL Server.\n\nFigure 1. Using MySQL Installer to set up the server and tools\n\nAfter completing your installation, you can launch MySQL Workbench, which provides a graphical tool for working with MySQL servers and databases. You can use Workbench for SQL development, data modeling and design, server administration, and data migration. If you’re running the MySQL Enterprise edition, you can also use Workbench to manage advanced features such as MySQL Enterprise Backup, MySQL Firewall, and MySQL Audit.\n\nWhen you launch MySQL Workbench, it opens to the home page, displaying the Welcome tab. From this page, you can also access the Models tab and the Migration wizard, which we’ll cover later in this series.\n\nThe Welcome tab should include a link to the local MySQL Server instance that you just created. On my system, the MySQL Connections section includes a link to Local instance MySQL80, as shown in Figure 2.\n\nFigure 2. Launching MySQL Workbench\n\nWhen you click the connection, Workbench opens a connection tab that displays information about the server instance. The tab also includes its own query tab, which you can use to issue SQL commands directly against the MySQL Server instance. Figure 3 shows the connection tab, which is labeled Local instance MySQL80, and the embedded query tab, which is labeled Query 1. Additional query tabs are numbered incrementally.\n\nFigure 3. Connecting to a MySQL instance\n\nThe connection tab contains three smaller panels that surround the query tab:\n\nThe left panel provides access to management, instance, and performance information, as well as to schema, object, and session information.\n\nThe right panel displays context help when building SQL statements. Nothing is currently displayed because no SQL elements are selected on the query tab. The panel also provides a mechanism for working with code snippets.\n\nThe bottom panel displays the message output when running SQL statements.\n\nYou can open or close any of these panels by clicking the toggles near the top right corner of the connection tab.\n\nThere is much more to MySQL Workbench than I can cover here, and I recommend that you review the Workbench documentation to get a better sense of the tool’s capabilities and the many features it provides. In addition, MySQL Workbench, like MySQL Community Server, has a wide user base and is supported by an active community, so you can also find information on community forums.\n\nCreating a MySQL database\n\nOnce you get MySQL Server and MySQL Workbench up and running, you’ll likely do much of your work on the query tab, where you can run SQL statements against the target MySQL instance. Because MySQL is based on the SQL standard, most of the statements you run will be similar to those used for other relational database systems.\n\nFor example, you can create a database by issuing a CREATE DATABASE statement that specifies the name of the new database, as shown in the following example:\n\nIn this case, I’m creating a database named travel. I also included an IF NOT EXISTS clause to ensure that the statement runs only if the database does not already exist.\n\nAfter you create an SQL statement, you can then execute it against the target instance. The query tab toolbar includes two execute buttons (lightning bolts) for running SQL statements:\n\nThe first execute button (the one on the left) runs the portion of the script that you’ve selected. If no script is selected, Workbench executes all script on the query tab.\n\nThe second execute button runs only the statement where the cursor is located. You have to be careful with this option because it will also execute the statement that directly precedes the cursor, even if the cursor is on an empty line.\n\nBecause the query tab includes only one statement, you can click either of the two buttons. Figure 4 shows the CREATE DATABASE statement after I ran it in Workbench. The bottom panel displays a message about the statement’s execution. The white-on-green checkmark to the left of the message indicates that the statement ran successfully. If the statement had instead generated an error, the bottom pane would display the error message, along with a white-on-red X.\n\nFigure 4. Creating a database in MySQL\n\nYou might have noticed that the right panel displayed information about the CREATE DATABASE statement as you started to write that statement. When your cursor is positioned over certain SQL keywords, such as CREATE DATABASE, Workbench automatically provides information about that language element, along with a link to additional information.\n\nAfter you create the database, you can view it on the Schemas tab in the left panel. You might have to click the refresh button near the top of the panel to get the new database to display. Workbench automatically adds four nodes to the database listing: Tables, Views, Stored Procedures, and Functions. However, because you have not created any of these types of objects, no objects will be listed under these nodes.\n\nIt might seem odd that Workbench lists the travel database as a schema rather than a database. This is because MySQL, for all practical purposes, treats databases and schemas as one and the same, which is much different from other relational database systems. In fact, the MySQL documentation states that “CREATE SCHEMA is a synonym for CREATE DATABASE.”\n\nAdding a table to a MySQL database\n\nAfter you create a database, you can issue a USE statement to select the new database and then add a table to the database. For example, the following code switches to the travel database and then uses a CREATE TABLE statement to define the airplanes table:\n\nIf you’re already familiar with SQL, much of this script will look familiar to you, although some of the elements might be new. For example, MySQL lets you specify whether an integer data type is signed or unsigned. If signed, a column’s values can include negative numbers. If unsigned, the values cannot include negative numbers. Integer data types are signed by default.\n\nWe’ll be discussing the CREATE TABLE statement in more depth later in the series.\n\nFigure 5. Adding a table to a MySQL database\n\nThe Schemas tab in the left panel now shows the airplanes table. Because the table is selected on that tab, the Object Info tab at the bottom of the left panel displays information about the table.\n\nInserting data into a MySQL table\n\nAfter you create a table, you can use the INSERT statement to add data to that table. As you’ve seen with other database products, you need only specify the target columns and their values, as shown in the following example:\n\nThe statement’s format should be familiar to anyone who’s worked with SQL, regardless of the database system. After the INSERT clause, the statement lists the target columns in parentheses. The statement then includes a VALUES clause, which lists the values to be inserted into the new row, also in parentheses.\n\nRetrieving data is also much the same as other relational databases. For instance, the following SELECT statement returns all of the table’s data:\n\nIn this case, the SELECT clause uses the asterisk (*) wildcard to indicate that all columns should be returned. Of course, you would not want to do this within a production environment, but for\n\nFigure 6 shows the INSERT and SELECT statements, along with the results returned by the SELECT statement. I closed the right and lower panels to reduce the clutter.\n\nFigure 6. Inserting data into a MySQL table\n\nWhen you return all columns in a table, Workbench adds a row to the results that show a null value for each column. You can use this row to add data directly to the table, as long as the values conform to the configured data types. In addition, Workbench lets you edit the values in the returned results. We’ll be covering the result grid in more detail in a later article in this series.\n\nAs with other database systems, you can also use a single INSERT statement to add multiple rows, as shown in the following example:\n\nTo add multiple rows, you need only separate the value sets with a comma. You can then run the same SELECT statement to return all the rows and columns:\n\nFigure 7 shows the INSERT and SELECT statements, along with the query results.\n\nFigure 7. Inserting multiple rows into a MySQL table\n\nAs you can see, the table includes all three rows, along with a row of null values for adding more data. You can, of course, be more specific in your queries, as in the following SELECT statement, which limits the columns and rows:\n\nIn this case, the SELECT clause specifies only three columns (model, engine_type, and engine_count) rather than all columns. In addition, the statement includes a WHERE clause that limits the results to rows with a manufacturer value of Airbus. Figure 8 shows the SELECT statement and its results, which include only one row with three columns.\n\nFigure 8. Retrieving data from a MySQL table\n\nThere should be no surprises here. The main thing to note is that the result grid no longer includes a row of nulls for inserting new data, which is to be expected because you’re viewing only a subset of the table’s columns.\n\nGetting started with MySQL\n\nOnce you know how to install MySQL and use MySQL Workbench, you can experiment with various features, create different types of database objects, and start building SQL queries. MySQL is a versatile database system that can accommodate a wide range of workloads. The better you understand how it works, the greater your ability to take advantage of its capabilities. Even if you’re new to relational databases, MySQL Installer makes it easy to set up your environment, and Workbench makes it easy to interface with that environment and work with MySQL and its data. You can then build on this foundation to become more proficient at creating databases and querying the data so you can better support your data-driven applications."
    }
}