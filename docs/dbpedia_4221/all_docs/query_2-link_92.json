{
    "id": "dbpedia_4221_2",
    "rank": 92,
    "data": {
        "url": "https://link.springer.com/chapter/10.1007/978-3-030-79876-5_38",
        "read_more_link": "",
        "language": "en",
        "title": "Harpoon: Mechanizing Metatheory Interactively",
        "top_image": "https://static-content.springer.com/cover/book/978-3-030-79876-5.jpg",
        "meta_img": "https://static-content.springer.com/cover/book/978-3-030-79876-5.jpg",
        "images": [
            "https://link.springer.com/oscar-static/images/darwin/header/img/logo-springerlink-39ee2a28d8.svg",
            "https://media.springernature.com/w72/springer-static/cover-hires/book/978-3-030-79876-5?as=webp",
            "https://media.springernature.com/w215h120/springer-static/image/art%3Aplaceholder%2Fimages/placeholder-figure-springernature.png",
            "https://media.springernature.com/w92h120/springer-static/cover-hires/book/978-3-319-21401-6?as=webp",
            "https://media.springernature.com/w92h120/springer-static/cover-hires/book/978-3-642-38574-2?as=webp",
            "https://media.springernature.com/lw685/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figa_HTML.png",
            "https://media.springernature.com/lw14/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figb_HTML.gif",
            "https://media.springernature.com/lw15/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figc_HTML.gif",
            "https://media.springernature.com/lw46/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figd_HTML.gif",
            "https://media.springernature.com/lw685/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Fige_HTML.png",
            "https://media.springernature.com/lw54/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figf_HTML.gif",
            "https://media.springernature.com/lw685/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figg_HTML.png",
            "https://media.springernature.com/lw13/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figh_HTML.gif",
            "https://media.springernature.com/lw75/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figi_HTML.gif",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figj_HTML.gif",
            "https://media.springernature.com/lw685/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figk_HTML.png",
            "https://media.springernature.com/lw66/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figl_HTML.gif",
            "https://media.springernature.com/lw33/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figm_HTML.gif",
            "https://media.springernature.com/lw9/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Fign_HTML.gif",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figo_HTML.gif",
            "https://media.springernature.com/lw13/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figp_HTML.gif",
            "https://media.springernature.com/lw61/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figq_HTML.gif",
            "https://media.springernature.com/lw45/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figr_HTML.gif",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figs_HTML.gif",
            "https://media.springernature.com/lw13/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figt_HTML.gif",
            "https://media.springernature.com/lw45/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figu_HTML.gif",
            "https://media.springernature.com/lw131/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figv_HTML.gif",
            "https://media.springernature.com/lw125/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figw_HTML.gif",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figx_HTML.gif",
            "https://media.springernature.com/lw13/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figy_HTML.gif",
            "https://media.springernature.com/lw31/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figz_HTML.gif",
            "https://media.springernature.com/lw45/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figaa_HTML.gif",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figab_HTML.gif",
            "https://media.springernature.com/lw31/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figac_HTML.gif",
            "https://media.springernature.com/lw38/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figad_HTML.gif",
            "https://media.springernature.com/lw685/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Fig1_HTML.png",
            "https://media.springernature.com/lw78/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figae_HTML.gif",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figaf_HTML.gif",
            "https://media.springernature.com/lw37/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figag_HTML.gif",
            "https://media.springernature.com/lw133/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figah_HTML.gif",
            "https://media.springernature.com/lw95/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figai_HTML.gif",
            "https://media.springernature.com/lw82/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figaj_HTML.gif",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figak_HTML.gif",
            "https://media.springernature.com/lw14/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figal_HTML.gif",
            "https://media.springernature.com/lw39/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figam_HTML.gif",
            "https://media.springernature.com/lw6/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figan_HTML.gif",
            "https://media.springernature.com/lw13/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figao_HTML.gif",
            "https://media.springernature.com/lw192/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figap_HTML.gif",
            "https://media.springernature.com/lw37/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figaq_HTML.gif",
            "https://media.springernature.com/lw38/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figar_HTML.gif",
            "https://media.springernature.com/lw685/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figas_HTML.png",
            "https://media.springernature.com/lw13/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figat_HTML.gif",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figau_HTML.gif",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figav_HTML.gif",
            "https://media.springernature.com/lw13/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figaw_HTML.gif",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figax_HTML.gif",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figay_HTML.gif",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figaz_HTML.gif",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figba_HTML.gif",
            "https://media.springernature.com/lw82/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figbb_HTML.gif",
            "https://media.springernature.com/lw54/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figbc_HTML.gif",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figbd_HTML.gif",
            "https://media.springernature.com/lw15/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figbe_HTML.gif",
            "https://media.springernature.com/lw66/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figbf_HTML.gif",
            "https://media.springernature.com/lw15/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figbg_HTML.gif",
            "https://media.springernature.com/lw46/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figbh_HTML.gif",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figbi_HTML.gif",
            "https://media.springernature.com/lw1318/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figbj_HTML.gif",
            "https://media.springernature.com/lw685/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figbk_HTML.png",
            "https://media.springernature.com/lw13/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figbl_HTML.gif",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figbm_HTML.gif",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figbn_HTML.gif",
            "https://media.springernature.com/lw13/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figbo_HTML.gif",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figbp_HTML.gif",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figbq_HTML.gif",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figbr_HTML.gif",
            "https://media.springernature.com/lw685/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figbs_HTML.png",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figbt_HTML.gif",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figbu_HTML.gif",
            "https://media.springernature.com/lw13/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figbv_HTML.gif",
            "https://media.springernature.com/lw132/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figbw_HTML.gif",
            "https://media.springernature.com/lw182/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figbx_HTML.gif",
            "https://media.springernature.com/lw63/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figby_HTML.gif",
            "https://media.springernature.com/lw37/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figbz_HTML.gif",
            "https://media.springernature.com/lw46/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figca_HTML.gif",
            "https://media.springernature.com/lw46/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figcb_HTML.gif",
            "https://media.springernature.com/lw37/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figcc_HTML.gif",
            "https://media.springernature.com/lw685/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Fig2_HTML.png",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figcd_HTML.gif",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figce_HTML.gif",
            "https://media.springernature.com/lw30/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figcf_HTML.gif",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figcg_HTML.gif",
            "https://media.springernature.com/lw30/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figch_HTML.gif",
            "https://media.springernature.com/lw37/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figci_HTML.gif",
            "https://media.springernature.com/lw205/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figcj_HTML.gif",
            "https://media.springernature.com/lw16/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figck_HTML.gif",
            "https://media.springernature.com/lw78/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figcl_HTML.gif",
            "https://media.springernature.com/lw117/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figcm_HTML.gif",
            "https://media.springernature.com/lw37/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figcn_HTML.gif",
            "https://media.springernature.com/lw48/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figco_HTML.gif",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figcp_HTML.gif",
            "https://media.springernature.com/lw70/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figcq_HTML.gif",
            "https://media.springernature.com/lw8/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figcr_HTML.gif",
            "https://media.springernature.com/lw37/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figcs_HTML.gif",
            "https://media.springernature.com/lw205/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figct_HTML.gif",
            "https://media.springernature.com/lw24/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figcu_HTML.gif",
            "https://media.springernature.com/lw82/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figcv_HTML.gif",
            "https://media.springernature.com/lw541/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figcw_HTML.gif",
            "https://media.springernature.com/lw60/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figcx_HTML.gif",
            "https://media.springernature.com/lw685/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Fig3_HTML.png",
            "https://media.springernature.com/lw78/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figcy_HTML.gif",
            "https://media.springernature.com/lw86/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figcz_HTML.gif",
            "https://media.springernature.com/lw175/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figda_HTML.gif",
            "https://media.springernature.com/lw197/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figdb_HTML.gif",
            "https://media.springernature.com/lw229/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figdc_HTML.gif",
            "https://media.springernature.com/lw15/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figdd_HTML.gif",
            "https://media.springernature.com/lw116/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figde_HTML.gif",
            "https://media.springernature.com/lw249/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figdf_HTML.gif",
            "https://media.springernature.com/lw38/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figdg_HTML.gif",
            "https://media.springernature.com/lw15/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figdh_HTML.gif",
            "https://media.springernature.com/lw45/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figdi_HTML.gif",
            "https://media.springernature.com/lw37/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figdj_HTML.gif",
            "https://media.springernature.com/lw685/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figdk_HTML.png",
            "https://media.springernature.com/lw30/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figdl_HTML.gif",
            "https://media.springernature.com/lw685/springer-static/image/chp%3A10.1007%2F978-3-030-79876-5_38/MediaObjects/509670_1_En_38_Figdm_HTML.png",
            "https://link.springer.com/oscar-static/images/logo-springernature-white-19dd4ba190.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Jacob Errington",
            "Junyoung Jang",
            "Brigitte Pientka"
        ],
        "publish_date": "2021-08-14T00:00:00",
        "summary": "",
        "meta_description": "Beluga is a proof checker that provides sophisticated infrastructure for implementing formal systems with the logical framework LF and proving metatheoretic properties as total, recursive functions transforming LF derivations. In this paper, we describe Harpoon, an...",
        "meta_lang": "en",
        "meta_favicon": "/oscar-static/img/favicons/darwin/apple-touch-icon-92e819bf8a.png",
        "meta_site_name": "SpringerLink",
        "canonical_link": "https://link.springer.com/chapter/10.1007/978-3-030-79876-5_38",
        "text": "Mechanizing formal systems and proofs about them plays an important role in establishing trust in programming languages and verifying software systems in general. Key questions in this setting are how to represent variables, (simultaneous) substitutions, assumptions, and derivations that depend on assumptions. Higher-order abstract syntax (HOAS) provides an elegant and unifying answer to these questions, relieving users from having to write boilerplate code.\n\nBeluga is a proof checker with built-in support for HOAS encodings of formal systems based on the logical framework LF [13]. Metatheoretic inductive proofs are implemented as recursive, dependently-typed functions that manipulate and transform HOAS representations [21, 4, 25]. In this paper, we describe the interactive proof engine Harpoon which is built on top of Beluga. A Harpoon user modularly and incrementally develops a metatheoretic proof by solving independent subgoals via a fixed set of high-level actions. An action eliminates the subgoal on which it is executed, filling it with a proof that possibly contains new subgoals to be resolved. The actions we support are: introduction of assumptions, case-analysis, inductive reasoning, and both forward and backward reasoning styles.\n\nWhile our fixed set of actions is largely inspired by similar systems such as Twelf [20, 28, 27] and Abella [11], Harpoon advances the state of the art in interactively developing mechanized proofs about HOAS representations in two ways: 1. We treat subgoals as first-class and characterize them using contextual types that pair their goal types together with the contexts in which they are meaningful; a contextual substitution property guarantees that each step of proof development correctly refines the partial proof under construction [8]. 2. Rather than simply record the sequence of actions given by the user, we elaborate this sequence into an assertion-level proof [15], represented as what we call a proof script. The proof script is what we record as output of an interactive session. It can be both typechecked directly and translated into a Beluga program.\n\nWe have used Harpoon (see https://beluga-lang.readthedocs.io/) on a wide range of representative examples from the Beluga library: normalization proofs for the simply-typed lambda calculus [6], benchmarks for reasoning about binders [9, 10], and the recent POPLMark Reloaded challenge [1]. These examples involve numerous concerns that arise in proof development, and cover all the domain-specific abstractions that Beluga provides. Our experience shows that Harpoon lowers the entry barrier for users: they only need to understand how to represent formal systems and derivations using HOAS encodings and can then manipulate the HOAS representations directly via the high-level actions which correspond closely to how proofs are developed on paper. As such, we believe that Harpoon eases the task of proving metatheoretic statements.\n\nWe introduce the main features of Harpoon by interactively developing the proof of two lemmas that play a central role in the proof of weak normalization of the simply-typed lambda calculus. For a more detailed description, see [6].\n\n2.1 Initial setup: encoding the language\n\nWe begin by defining the simply-typed lambda-calculus in the logical framework LF [13] using an intrinsically typed encoding. In typical HOAS style, lambda abstraction takes an LF function representing the abstraction of a term over a variable. There is no case for variables, as they are treated implicitly. We remind the reader that this is a weak, representational function space – there is no case analysis or recursion, so only genuine lambda terms can be represented.\n\nFree variables such as and are implicitly universally quantified (see [23]) and programmers subsequently do not supply arguments for implicitly quantified parameters when using a constructor.\n\nNext, we define a small-step operational semantics for the language. For simplicity, we use a call-by-name reduction strategy and do not reduce under lambda-abstractions. Note that we use LF application to encode the object-level substitution in the rule.\n\nUsing this definition, we define a notion of termination: a term halts if it reduces to a value. This is captured by the constructor .\n\n2.2 Termination Property: intros, split, unbox, and solve\n\nAs the first short lemma, we show the Termination property: if is known to halt and , then also halts. We start our interactive proof session by loading the signature and defining the name of the theorem and the statement that we want to prove.\n\nWe pair each LF object such as together with the LF context in which it is meaningful [21, 26, 19]. We refer to such an object as a contextual object and embed contextual types, written as , into Beluga types using the “box” syntax. In this example, the LF context, written on the left of , is empty, as we consider closed LF objects. As before, the free variables and are implicitly quantified at the outside. They themselves stand for contextual objects and have contextual type . The theorem statements are hence statements about contextual LF objects and directly correspond to Beluga types.\n\nThe proof begins with a single subgoal whose type is simply the statement of the theorem under no assumptions. Since this subgoal has a function type, Harpoon will automatically apply the action, which introduces assumptions as follows: First, the (implicitly) universally quantified variables , are added to the meta-context. This context collects parameters introduced by universal quantifiers. This is in contrast with the computational context, which collects assumptions introduced by the simple function space. In particular, the second phase of the action adds the assumptions and to the computational context. Observe that since and have type , also adds to the meta-context, although it is implicit in the definitions of and and is not visible at all in the theorem statement (see the meta-context Fig. 1 step 1).\n\nThe proof proceeds by inversion on . Using the action, we add the two new assumptions and to the meta-context (see Fig. 1, step 1.). To build a proof for , we need to show that there is a step from to some value . To build such a derivation, we use first the action on the computation-level assumption to obtain an assumption in the meta-context which is accessible to the LF layer (inside a box) (see Fig. 1, step 2.). Finally, we can finish the proof by supplying the term with the action (see Fig. 1, step 3). This is similar to the tactic in Coq.\n\nThe resulting proof script is given below. Assertions are written in boldface and curly braces denote new scopes, listing the full meta-context and the full computational context. Using an erasure we can then generate a translated program in the external syntax, i.e. the syntax a user would use when implementing the proof directly, rather than the internal syntax. It is hence much more compact than the actual proof script. This program can then be seamlessly combined with hand-written Beluga programs and can also independently type-checked.\n\n2.3 Setup continued: reducibility\n\nWe now consider one of the key lemmas in the weak normalization proof, called the backwards closed lemma, i.e. if is reducible at some type and steps to , then is also reducible at . We begin to define a set of terms reducible at a type . All reducible terms are required to halt, and reducible terms at an arrow type are required to produce reducible output given reducible input. Concretely, a term is reducible at type , if for all terms where is reducible at type , then is reducible at type . Reducibility cannot be directly encoded on the LF layer, as it is not merely describing the syntax of an expression or derivation. Instead, we encode the set of reducible terms using the stratified type which is recursively defined on the type in Beluga (see [16]). Note that we write for explicit universal quantification over contextual objects.\n\n2.4 Backwards Closed Property: msplit, suffices, and by\n\nWe can now state the backwards closed lemma formally as follows: if is reducible at some type and steps to , then is also reducible at . We prove this lemma by induction on . This is specified by referring to the position of the induction variable in the statement.\n\nAfter Harpoon automatically introduces the metavariables , , and together with an assumption and , we use to split the proof into two cases (see Fig. 2, step 1). Whereas case analyzes a Beluga type, considers the cases for a (contextual) LF type. In reality, is implemented in terms of the action.\n\nThe case for \\(=\\) is straightforward (see Fig. 2, steps 2 and 3). First, we use the action to invert the premise . Then, we use the action to invoke the lemma (see Sec. 2.2) to obtain an assumption . We this case by supplying the term (see Fig. 2 step 3).\n\nIn the case for \\(=\\) , we begin similarly by inversion on using the action (see Fig. 3 step 4). We observe that the goal type is , which can be produced by using the constructor if we can construct a proof for each of the user-specified types, and . Such backwards reasoning is accomplished via the action. The user supplies a term representing an implication whose conclusion is compatible with the current goal and proceeds to prove its premises as specified (see Fig.3 step 5).\n\nTo prove the first premise, we apply the lemma (see Fig. 3 step 6). As for the second premise, Harpoon first automatically introduces the variable and the assumption , so it remains to show . We deduce using the assumption . Using , we build a derivation using . Finally, we appeal to the induction hypothesis. Using the action, we refer to the recursive call to complete the proof (see Fig. 3 step 7). The resulting proof script (of around 70 lines) can again be translated into a compact program.\n\nNote that Harpoon allows users to use underscores to stand for arguments that are uniquely determined (see Harpoon Proof 3 step 7). We enforce that these underscores stand for uniquely determined objects in order to guarantee that the contexts and the goal type of every subgoal are closed. This ensures modularity: solving one subgoal does not affect any other open subgoals. As a consequence, users are not restricted in their proof development. As they would on paper, users can work on goals in any order, mix forward and backward reasoning, erase wrong parts, and replace them by correct steps.\n\nUsing the explained actions, one can now prove the fundamental lemma and the weak normalization theorem. For a more detailled description of this proof in Beluga see [5, 6].\n\nAdditional actions. Harpoon supports some additional features not discussed in this paper; see https://beluga-lang.readthedocs.io/ for a complete list of actions. In general, these actions add no expressive power, but enable more precise expression of a user’s intent. For example, the action splits on the type of a given term, ensuring that there is a unique case to consider. It is implemented simply as the action followed by an additional check.\n\nHarpoon is a front end that allows users to construct a proof for a theorem statement represented as a Beluga type. Types in Beluga include universal quantification over contextual types (dependent function space, written with curly braces), implications (simple function space), boxed contextual types, and stratified/recursive types (written as \\(\\mathbf{c} ~\\overrightarrow{C}\\) where C stands for a contextual object). In addition, Beluga supports quantification over LF contexts and even LF substitutions relating two LF contexts. We omit these below for simplicity, although they are also supported in Harpoon. In essence, Beluga types correspond to statements in first-order logic over a domain consisting of contextual objects, LF contexts, and LF substitutions. We can view \\(\\mathbf{c} ~\\overrightarrow{C}\\) and \\([\\varPsi \\vdash A]\\) as atomic propositions.\n\nUsers construct a natural deduction proof for a theorem statement where \\(\\varGamma \\), the computation context, contains hypotheses introduced from the simple function space and where \\(\\varDelta \\), the meta-context, holds parameters introduced from the universal quantifier (curly-brace syntax) or by lifting an assumption \\([\\varPsi \\vdash A]\\) from \\(\\varGamma \\) (box-elimination rule).\n\nA subgoal in Harpoon is a typed hole in the proof that remains to be filled by the user. Such a hole is represented by a subgoal variable, the type of which is a contextual type \\((\\varDelta ; \\varGamma \\vdash \\tau )\\) that captures the typechecking state at the point the variable occurs [19, 3]: it remains to construct a proof for \\(\\tau \\) with the parameters from \\(\\varDelta \\) and the assumptions from \\(\\varGamma \\). Subgoal variables in the proof script are collected into a subgoal context and substitution of subgoal variables is type-preserving [8]. Interactive actions are implemented with subgoal substitutions, so the correctness of interactive proof refinement is a consequence of the subgoal substitution property. Note that a subgoal’s type cannot itself contain subgoals – the subgoal type must be fully determined, so solving one subgoal cannot affect any other subgoal. Furthermore, subgoal variables may be introduced only in positions where we must construct a normal term (written e); these are terms that we must check against a given type. This given type becomes part of the subgoal’s type. Subgoal variables stand thus in contrast with ordinary variables, which are neutral terms (written i). (See [14, 26, 16] for examples of this so-called bi-directional characterization of normal and neutral proof terms in Beluga.)\n\nAn action is executed on a subgoal to eliminate it, while possibly introducing new subgoals. Actions emphasize the bi-directional nature of interactive proof construction: some demand normal terms e and others demand neutral terms i. To execute an action, the system synthesizes a proof script fragment from it, and substitutes that fragment for the current subgoal. Any subgoal variables present in the fragment become part of the subgoal context, and the user will have to solve them later. When no subgoals remain, the proof script is closed and can be translated straightforwardly to a Beluga program in internal (fully elaborated) syntax. We employ an erasure to display the program to the user. These are the essential actions for proof development, omitting our so-called “administrative” actions (such as ):\n\nintros introduces all assumptions from function types in the current goal; solve closes the current subgoal with a given a normal term, introducing no new subgoals. This action trivially makes Harpoon complete, as a full Beluga program could be given via solve to eliminate the initial subgoal of any proof. The action by enables introducing an intermediate result, often from a lemma or an induction hypothesis, demanding a neutral term i and binding it to a given name; unbox is the same as by, but it binds the result as a variable in the meta-context; split considers a covering set of cases for a neutral term (typically a variable) and generates possible induction hypotheses based on the specified induction order, (for details on coverage, see [24]); suffices allows programmers to reason backwards by supplying a neutral term i of function type and the types \\(\\overrightarrow{\\tau }\\) of arguments to construct for this function."
    }
}